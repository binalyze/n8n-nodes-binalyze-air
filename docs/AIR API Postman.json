{
	"info": {
		"_postman_id": "889ff969-11e3-4da5-9bbb-b8b46159b197",
		"name": "N8N - Custom Nodes Development",
		"description": "Binalyze AIR API allows to communicate with AIR console programmatically to collect information or execute tasks.\n\n# Authentication\n\nTo use the API, generate an API token from Integrations → API Tokens.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "11397800",
		"_collection_link": "https://binalyze-team.postman.co/workspace/fc1325eb-1abe-4af8-85f1-9ed39b57b57e/collection/11397800-889ff969-11e3-4da5-9bbb-b8b46159b197?action=share&source=collection_link&creator=11397800"
	},
	"item": [
		{
			"name": "App",
			"item": [
				{
					"name": "Check",
					"request": {
						"method": "GET",
						"header": []
					},
					"response": []
				},
				{
					"name": "Info",
					"request": {
						"method": "GET",
						"header": []
					},
					"response": []
				},
				{
					"name": "Configuration",
					"request": {
						"method": "GET",
						"header": []
					},
					"response": []
				},
				{
					"name": "Dependencies",
					"request": {
						"method": "GET",
						"header": []
					},
					"response": []
				}
			]
		},
		{
			"name": "Acquisitions",
			"item": [
				{
					"name": "Get Acquisition Profiles",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/{{apiPrefix}}/acquisitions/profiles?filter[organizationIds]=0",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"{{apiPrefix}}",
								"acquisitions",
								"profiles"
							],
							"query": [
								{
									"key": "pageNumber",
									"value": "",
									"description": "Which page of results to return",
									"disabled": true
								},
								{
									"key": "pageSize",
									"value": "",
									"description": "How many results to return per page",
									"disabled": true
								},
								{
									"key": "sortBy",
									"value": "",
									"description": "Attribute name to order the responses by",
									"disabled": true
								},
								{
									"key": "sortType",
									"value": "",
									"description": "Either ASC or DESC",
									"disabled": true
								},
								{
									"key": "filter[searchTerm]",
									"value": "",
									"disabled": true
								},
								{
									"key": "filter[name]",
									"value": "",
									"disabled": true
								},
								{
									"key": "filter[organizationIds]",
									"value": "0"
								},
								{
									"key": "filter[allOrganizations]",
									"value": "",
									"disabled": true
								}
							]
						},
						"description": "### Parameters\n\n| **Name**                                             | **Constraints**                                |\n| ---------------------------------------------------- | ---------------------------------------------- |\n| **pageNumber** <br>number / optional                 | default value: 1 <br>min value:1               |\n| **pageSize** <br>number / optional                   | default value: 10 <br>min value:1              |\n| **sortBy** <br>string / optional                     | default value: createdAt                       |\n| **sortType** <br>string / optional                   | default value: ASC <br>valid values: ASC, DESC |\n| **filter\\[allOrganizations\\]** <br>string / optional | valid values: true, false                      |\n| **filter\\[name\\]** <br>string / optional             |                                                |\n| **filter\\[organizationIds\\]** <br>string / required  |                                                |\n| **filter\\[searchTerm\\]** <br>string / optional       |                                                |"
					},
					"response": [
						{
							"name": "Get Acquisition Profiles - 200 OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/{{apiPrefix}}/acquisitions/profiles?filter[organizationIds]=0&filter[allOrganizations]=true",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"{{apiPrefix}}",
										"acquisitions",
										"profiles"
									],
									"query": [
										{
											"key": "pageNumber",
											"value": "1",
											"disabled": true
										},
										{
											"key": "pageSize",
											"value": "50",
											"disabled": true
										},
										{
											"key": "sortBy",
											"value": "createdAt",
											"disabled": true
										},
										{
											"key": "sortType",
											"value": "DESC",
											"disabled": true
										},
										{
											"key": "filter[searchTerm]",
											"value": "network ca",
											"disabled": true
										},
										{
											"key": "filter[name]",
											"value": "earum",
											"disabled": true
										},
										{
											"key": "filter[organizationIds]",
											"value": "0"
										},
										{
											"key": "filter[allOrganizations]",
											"value": "true"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "1160"
								},
								{
									"key": "ETag",
									"value": "W/\"488-EFxmXX37dRq9md56RGvsgsBosWQ\""
								},
								{
									"key": "Date",
									"value": "Sun, 22 May 2022 15:54:17 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"result\": {\n        \"entities\": [\n            {\n                \"_id\": \"compromise-assessment\",\n                \"name\": \"Compromise Assessment\",\n                \"organizationIds\": [],\n                \"createdAt\": \"2022-05-22T13:29:51.200Z\",\n                \"createdBy\": \"System\",\n                \"deletable\": false\n            },\n            {\n                \"_id\": \"browsing-history\",\n                \"name\": \"Browsing History\",\n                \"organizationIds\": [],\n                \"createdAt\": \"2022-05-22T13:29:50.286Z\",\n                \"createdBy\": \"System\",\n                \"deletable\": false\n            },\n            {\n                \"_id\": \"event-logs\",\n                \"name\": \"Event Logs\",\n                \"organizationIds\": [],\n                \"createdAt\": \"2022-05-22T13:29:50.285Z\",\n                \"createdBy\": \"System\",\n                \"deletable\": false\n            },\n            {\n                \"_id\": \"memory-ram-pagefile\",\n                \"name\": \"Memory (RAM + PageFile)\",\n                \"organizationIds\": [],\n                \"createdAt\": \"2022-05-22T13:29:50.284Z\",\n                \"createdBy\": \"System\",\n                \"deletable\": false\n            },\n            {\n                \"_id\": \"quick\",\n                \"name\": \"Quick\",\n                \"organizationIds\": [],\n                \"createdAt\": \"2022-05-22T13:29:50.282Z\",\n                \"createdBy\": \"System\",\n                \"deletable\": false\n            },\n            {\n                \"_id\": \"full\",\n                \"name\": \"Full\",\n                \"organizationIds\": [],\n                \"createdAt\": \"2022-05-22T13:29:50.280Z\",\n                \"createdBy\": \"System\",\n                \"deletable\": false\n            }\n        ],\n        \"filters\": [\n            {\n                \"name\": \"name\",\n                \"type\": \"text\",\n                \"options\": [],\n                \"filterUrl\": null\n            }\n        ],\n        \"sortables\": [\n            \"name\",\n            \"createdBy\",\n            \"createdAt\"\n        ],\n        \"totalEntityCount\": 6,\n        \"currentPage\": 1,\n        \"pageSize\": 10,\n        \"previousPage\": 0,\n        \"totalPageCount\": 1,\n        \"nextPage\": 2\n    },\n    \"statusCode\": 200,\n    \"errors\": []\n}"
						},
						{
							"name": "Get Acquisition Profiles without Organization ID - 400 Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/{{apiPrefix}}/acquisitions/profiles?filter[allOrganizations]=true",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"{{apiPrefix}}",
										"acquisitions",
										"profiles"
									],
									"query": [
										{
											"key": "pageNumber",
											"value": "1",
											"disabled": true
										},
										{
											"key": "pageSize",
											"value": "50",
											"disabled": true
										},
										{
											"key": "sortBy",
											"value": "createdAt",
											"disabled": true
										},
										{
											"key": "sortType",
											"value": "DESC",
											"disabled": true
										},
										{
											"key": "filter[searchTerm]",
											"value": "network ca",
											"disabled": true
										},
										{
											"key": "filter[name]",
											"value": "earum",
											"disabled": true
										},
										{
											"key": "filter[organizationIds]",
											"value": "0",
											"disabled": true
										},
										{
											"key": "filter[allOrganizations]",
											"value": "true"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "100"
								},
								{
									"key": "ETag",
									"value": "W/\"64-0dZahibur8gfpdjDGd/+kpCpojg\""
								},
								{
									"key": "Date",
									"value": "Sun, 22 May 2022 16:41:26 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"errors\": [\n        \"'organizationIds' should not be empty.\"\n    ],\n    \"statusCode\": 400,\n    \"result\": null\n}"
						}
					]
				},
				{
					"name": "Get Acquisition Profile by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.runForTest(() => {",
									"    pm.request.url.variables.add({",
									"        key: 'id',",
									"        value: 'quick'",
									"    })",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/{{apiPrefix}}/acquisitions/profiles/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"{{apiPrefix}}",
								"acquisitions",
								"profiles",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "",
									"description": "Acquisition Profile ID"
								}
							]
						}
					},
					"response": [
						{
							"name": "Get Acquisition Profile by ID - 200 OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/{{apiPrefix}}/acquisitions/profiles/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"{{apiPrefix}}",
										"acquisitions",
										"profiles",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "full",
											"description": "Acquisition Profile ID"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "1828"
								},
								{
									"key": "ETag",
									"value": "W/\"724-vbI5xcnqTqPnrMHlZOfP2ltQrR0\""
								},
								{
									"key": "Date",
									"value": "Sun, 22 May 2022 15:57:58 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"result\": {\n        \"windows\": {\n            \"evidenceList\": [\n                \"clp\",\n                \"cdi\",\n                \"rbi\",\n                \"rpi\",\n                \"dri\",\n                \"pri\",\n                \"scr\",\n                \"avi\",\n                \"dnss\",\n                \"prxy\",\n                \"apps\",\n                \"frwl\",\n                \"usbmsc\",\n                \"dli\",\n                \"aui\",\n                \"voli\",\n                \"mbr\",\n                \"ram\",\n                \"pgf\",\n                \"swp\",\n                \"hbr\",\n                \"chst\",\n                \"fhst\",\n                \"ihst\",\n                \"ehst\",\n                \"ohst\",\n                \"mftcsv\",\n                \"mft\",\n                \"mftmir\",\n                \"ntfslog\",\n                \"usnjrn\",\n                \"hiv\",\n                \"hivold\",\n                \"sbgs\",\n                \"appcc\",\n                \"dnsc\",\n                \"tcpt\",\n                \"udpt\",\n                \"arpt\",\n                \"ipv4\",\n                \"netadp\",\n                \"netshr\",\n                \"hosts\",\n                \"evt\",\n                \"evtx\",\n                \"evtr\",\n                \"wmiasc\",\n                \"wmicec\",\n                \"pf\",\n                \"srum\",\n                \"adb\",\n                \"amc\",\n                \"rfc\",\n                \"etl\",\n                \"clr\",\n                \"jmplst\",\n                \"lnkf\",\n                \"indxs\",\n                \"sprf\",\n                \"wbem\",\n                \"infl\",\n                \"sdb\",\n                \"pwrs\",\n                \"tc\",\n                \"ic\",\n                \"rdpc\"\n            ],\n            \"artifactList\": [\n                \"apcl\",\n                \"mngl\",\n                \"iisl\",\n                \"mssqll\",\n                \"exchl\",\n                \"dhcpl\",\n                \"dnsl\",\n                \"adl\",\n                \"mph\",\n                \"crtnh\",\n                \"strdb\",\n                \"stckyn\",\n                \"mmps\",\n                \"vrcdh\",\n                \"ntfh\",\n                \"srch\",\n                \"mppl\",\n                \"mclndr\",\n                \"mml\",\n                \"zmdb\",\n                \"zmm\",\n                \"tml\",\n                \"outlk\",\n                \"thndr\",\n                \"whtc\",\n                \"whtck\",\n                \"skypdb\",\n                \"skpym\",\n                \"dscrdc\",\n                \"wndml\",\n                \"twtdb\",\n                \"twtc\",\n                \"fcbkdb\",\n                \"fcbkc\",\n                \"lnkc\",\n                \"sptfyl\",\n                \"sptfyc\",\n                \"sblm\",\n                \"ntpd\",\n                \"ovpn\",\n                \"evryh\",\n                \"everdb\",\n                \"everdd\",\n                \"everl\",\n                \"itnb\",\n                \"vmc\",\n                \"vmdd\",\n                \"vml\",\n                \"flz\",\n                \"vstm\",\n                \"gtdb\",\n                \"gthbc\",\n                \"gthbl\",\n                \"wsl\",\n                \"trtl\",\n                \"gdrvdb\",\n                \"drpdb\",\n                \"drpl\",\n                \"drpc\"\n            ],\n            \"customContentProfiles\": [],\n            \"networkCapture\": {\n                \"enabled\": false,\n                \"duration\": 600,\n                \"pcap\": {\n                    \"enabled\": false\n                },\n                \"networkFlow\": {\n                    \"enabled\": false\n                }\n            }\n        },\n        \"linux\": {\n            \"evidenceList\": [\n                \"syscntrls\",\n                \"cronj\",\n                \"aarmpr\",\n                \"ulimit\",\n                \"krnmods\",\n                \"lckfls\",\n                \"blkd\",\n                \"fstab\",\n                \"mounts\",\n                \"nfsexpr\",\n                \"process\",\n                \"popenf\",\n                \"sharedm\",\n                \"memmap\",\n                \"swaps\",\n                \"groups\",\n                \"users\",\n                \"lastacs\",\n                \"lgdusrs\",\n                \"shadow\",\n                \"sudoers\",\n                \"fla\",\n                \"sshknown\",\n                \"sshauth\",\n                \"sshconf\",\n                \"sshdconf\",\n                \"hosts\",\n                \"icmptab\",\n                \"iprts\",\n                \"iptbl\",\n                \"rawtab\",\n                \"netint\",\n                \"tcptab\",\n                \"udplitetab\",\n                \"udptab\",\n                \"unixsoc\",\n                \"arpt\",\n                \"dnsr\",\n                \"apts\",\n                \"apthst\",\n                \"debp\",\n                \"yumsrcs\",\n                \"selinuxc\",\n                \"selinuxs\",\n                \"suidbins\",\n                \"shellhist\",\n                \"sysartf\",\n                \"logs\"\n            ],\n            \"customContentProfiles\": []\n        },\n        \"eDiscovery\": {\n            \"patterns\": []\n        },\n        \"_id\": \"full\",\n        \"createdAt\": \"2022-05-22T13:29:50.280Z\",\n        \"updatedAt\": \"2022-05-22T13:29:51.196Z\",\n        \"name\": \"Full\",\n        \"createdBy\": \"System\",\n        \"organizationIds\": [],\n        \"deletable\": false\n    },\n    \"statusCode\": 200,\n    \"errors\": []\n}"
						},
						{
							"name": "Get Acquisition Profile by ID - 404 Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/{{apiPrefix}}/acquisitions/profiles/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"{{apiPrefix}}",
										"acquisitions",
										"profiles",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "ful",
											"description": "Acquisition Profile ID"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "108"
								},
								{
									"key": "ETag",
									"value": "W/\"6c-XMxOwUrZFcHb1wiWmFL/gTnlW0o\""
								},
								{
									"key": "Date",
									"value": "Sun, 22 May 2022 16:41:32 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"errors\": [\n        \"No acquisition profile found by provided id(s)\"\n    ],\n    \"statusCode\": 404,\n    \"result\": null\n}"
						}
					]
				},
				{
					"name": "Assign Evidence Acquisition Task by Filter",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.runForTest(() => {",
									"    const payload = JSON.parse(pm.request.body.raw)",
									"    payload.filter.includedEndpointIds = [",
									"        pm.collectionVariables.get('endpointId')",
									"    ]",
									"    pm.request.body.raw = JSON.stringify(payload)",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"caseId\": null,\n    \"droneConfig\": {\n        \"autoPilot\": false,\n        \"enabled\": false,\n        \"analyzers\": [\n            \"bha\",\n            \"wsa\",\n            \"aa\",\n            \"ara\"\n        ],\n        \"keywords\": [\n            \"keyword\"\n        ]\n    },\n    \"taskConfig\": {\n        \"choice\": \"use-custom-options\",\n        \"saveTo\": {\n            \"windows\": {\n                \"location\": \"local\",\n                \"useMostFreeVolume\": true,\n                \"repositoryId\": null,\n                \"path\": \"Binalyze\\\\AIR\\\\\",\n                \"volume\": \"C:\",\n                \"tmp\": \"Binalyze\\\\AIR\\\\tmp\",\n                \"directCollection\": false\n            },\n            \"linux\": {\n                \"location\": \"local\",\n                \"useMostFreeVolume\": true,\n                \"repositoryId\": null,\n                \"path\": \"opt/binalyze/air\",\n                \"tmp\": \"opt/binalyze/air/tmp\",\n                \"directCollection\": false\n            },\n            \"macos\": {\n                \"location\": \"local\",\n                \"useMostFreeVolume\": false,\n                \"repositoryId\": null,\n                \"path\": \"opt/binalyze/air\",\n                \"volume\": \"/\",\n                \"tmp\": \"opt/binalyze/air/tmp\",\n                \"directCollection\": false\n            },\n            \"aix\": {\n                \"location\": \"local\",\n                \"useMostFreeVolume\": true,\n                \"path\": \"opt/binalyze/air\",\n                \"volume\": \"/\",\n                \"tmp\": \"opt/binalyze/air/tmp\",\n                \"directCollection\": false\n            }\n        },\n        \"cpu\": {\n            \"limit\": 80\n        },\n        \"compression\": {\n            \"enabled\": true,\n            \"encryption\": {\n                \"enabled\": false,\n                \"password\": \"\"\n            }\n        }\n    },\n    \"acquisitionProfileId\": \"quick\",\n    \"filter\": {\n        \"searchTerm\": \"\",\n        \"name\": \"\",\n        \"ipAddress\": \"\",\n        \"groupId\": \"\",\n        \"groupFullPath\": \"\",\n        \"managedStatus\": [],\n        \"isolationStatus\": [],\n        \"platform\": [],\n        \"issue\": \"\",\n        \"onlineStatus\": [],\n        \"tags\": [],\n        \"version\": \"\",\n        \"policy\": \"\",\n        \"includedEndpointIds\": [],\n        \"excludedEndpointIds\": [],\n        \"organizationIds\": [\n            0\n        ]\n    },\n    \"schedulerConfig\": {\n        \"when\": \"now\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/{{apiPrefix}}/acquisitions/acquire",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"{{apiPrefix}}",
								"acquisitions",
								"acquire"
							]
						},
						"description": "| **Name** | **Constraints** |\n| --- | --- |\n| **caseId**  <br>string / optional |  |\n| **acquisitionProfileId**  <br>string / required |  |\n| **droneConfig**  <br>object / required |  |\n| **droneConfig.autoPilot**  <br>boolean / required |  |\n| **droneConfig.enabled**  <br>boolean / required |  |\n| **droneConfig.analyzers**  <br>string array / required | valid values: /api/public/params/drone/analyzers |\n| **droneConfig.keywords**  <br>string array / optional |  |\n| **taskConfig.choice**  <br>string / required | valid values: use-policy, use-custom-options |\n| **taskConfig.cpu**  <br>object / required |  |\n| **taskConfig.cpu.limit**  <br>number / required | min: 1  <br>max: 100 |\n| **taskConfig.compression**  <br>object / required |  |\n| **taskConfig.compression.enabled**  <br>boolean / required |  |\n| **taskConfig.compression.encryption**  <br>object / required |  |\n| **taskConfig.compression.encryption.enabled**  <br>boolean / required |  |\n| **taskConfig.compression.encryption.password**  <br>string / if encryption is enabled: required |  |\n| **taskConfig.saveTo.windows.location**  <br>string / required | valid values: local, repository |\n| **taskConfig.saveTo.windows.path**  <br>string / if location is local: required |  |\n| **taskConfig.saveTo.windows.repositoryId**  <br>string / if location is repository: required |  |\n| **taskConfig.saveTo.windows.useMostFreeVolume**  <br>boolean / required |  |\n| **taskConfig.saveTo.windows.volume**  <br>string / if useMostFreeVolume is false: required | Regex: /^\\[a-zA-Z\\]:/  <br>Example: \"C:\" |\n| **taskConfig.saveTo.windows.tmp**  <br>string / optional |  |\n| **taskConfig.saveTo.linux.location**  <br>string / required | valid values: local, repository |\n| **taskConfig.saveTo.linux.path**  <br>string / if location is local: required |  |\n| **taskConfig.saveTo.linux.repositoryId**  <br>string / if location is repository: required |  |\n| **taskConfig.saveTo.linux.useMostFreeVolume**  <br>boolean / required |  |\n| **taskConfig.saveTo.linux.volume**  <br>string / if useMostFreeVolume is false: required | Regex: /^\\[/\\].\\*/  <br>Example: \"/\" |\n| **taskConfig.saveTo.linux.tmp**  <br>string / optional |  |\n| **taskConfig.saveTo.macos.location**  <br>string / required | valid values: local, repository |\n| **taskConfig.saveTo.macos.path**  <br>string / if location is local: required |  |\n| **taskConfig.saveTo.macos.repositoryId**  <br>string / if location is repository: required |  |\n| **taskConfig.saveTo.macos.useMostFreeVolume**  <br>boolean / required |  |\n| **taskConfig.saveTo.macos.volume**  <br>string / optional | Regex: /^\\[/\\].\\*/  <br>Example: \"/\" |\n| **taskConfig.saveTo.macos.tmp**  <br>string / optional |  |\n| **taskConfig.diskSpace.reserve**  <br>number / optional | in bytes |\n| **filter.organizationIds**  <br>number array / required |  |\n| **filter.searchTerm**  <br>string / optional |  |\n| **filter.name**  <br>string / optional |  |\n| **filter.ipAddress**  <br>string / optional |  |\n| **filter.groupId**  <br>string / optional |  |\n| **filter.groupFullPath**  <br>string / optional |  |\n| **filter.label**  <br>string / optional |  |\n| **filter.lastSeen**  <br>string / optional | Example: 2023-03-06T21:00:00.000Z,2023-03-24T21:00:00.000Z |\n| **filter.managedStatus**  <br>string array / optional | valid values: unmanaged, managed, off-network |\n| **filter.isolationStatus**  <br>string array / optional | valid values: isolating, isolated, unisolating, unisolated |\n| **filter.platform**  <br>string array / optional | valid values: windows, linux, darwin |\n| **filter.issue**  <br>string array / optional | valid values: unreachable, old-version, update-required |\n| **filter.onlineStatus**  <br>string array / optional | valid values: online, offline |\n| **filter.tags**  <br>string array / optional |  |\n| **filter.version**  <br>string / optional |  |\n| **filter.policy**  <br>string / optional |  |\n| **filter.includedEndpointIds**  <br>string array / optional |  |\n| **filter.excludedEndpointIds**  <br>string array / optional |  |\n| **filter.caseId**  <br>string / optional |  |\n| **filter.awsRegions**  <br>string array / optional |  |\n| **filter.azureRegions**  <br>string array / optional |  |\n| **schedulerConfig.when**  <br>string / required | valid values: now, scheduled |\n| **schedulerConfig.timezoneType**  <br>string / if scheduled: required | valid values: asset, custom |\n| **schedulerConfig.timezone**  <br>string / if scheduled and custom timezone type selected: required | example: Europe/London |\n| **schedulerConfig.startDate**  <br>unix timestamp / if scheduled: required |  |\n| **schedulerConfig.recurrence**  <br>string / if scheduled: required | valid values: onetime, daily, weekly, monthly |\n| **schedulerConfig.repeatEvery**  <br>number / if scheduled and recurrence is daily or monthly: required |  |\n| **schedulerConfig.repeatOnWeek**  <br>string array / if scheduled and recurrence is weekly: required | valid values: array of 3-letter days of week.  <br>example: \\['MON', 'WED'\\] |\n| **schedulerConfig.repeatOnMonth**  <br>number / if scheduled and recurrence is monthly: required | day of month |\n| **schedulerConfig.endRepeatType**  <br>string / if scheduled: required | valid values: never, date, occurrence |\n| **schedulerConfig.endDate**  <br>unix timestamp / if scheduled and end repeat type is date: required |  |\n| **schedulerConfig.limit**  <br>number / if scheduled and end repeat type is occurrence: required |  |"
					},
					"response": [
						{
							"name": "Assign Evidence Acquisition Task by Filter - 200 OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"caseId\": \"C-2022-0001\",\n    \"droneConfig\": {\n        \"autoPilot\": false,\n        \"enabled\": false,\n        \"analyzers\": [\n            \"bha\",\n            \"wsa\",\n            \"aa\",\n            \"ara\"\n        ],\n        \"keywords\": [\n            \"keyword-1\",\n            \"keyword-2\"\n        ]\n    },\n    \"taskConfig\": {\n        \"choice\": \"use-custom-options\",\n        \"saveTo\": {\n            \"windows\": {\n                \"location\": \"local\",\n                \"useMostFreeVolume\": true,\n                \"repositoryId\": null,\n                \"path\": \"Binalyze\\\\AIR\\\\\",\n                \"volume\": \"C:\",\n                \"tmp\": \"Binalyze\\\\AIR\\\\tmp\",\n                \"directCollection\": false\n            },\n            \"linux\": {\n                \"location\": \"local\",\n                \"useMostFreeVolume\": true,\n                \"repositoryId\": null,\n                \"path\": \"opt/binalyze/air\",\n                \"tmp\": \"opt/binalyze/air/tmp\",\n                \"directCollection\": false\n            },\n            \"macos\": {\n                \"location\": \"local\",\n                \"useMostFreeVolume\": false,\n                \"repositoryId\": null,\n                \"path\": \"opt/binalyze/air\",\n                \"volume\": \"/\",\n                \"tmp\": \"opt/binalyze/air/tmp\",\n                \"directCollection\": false\n            },\n            \"aix\": {\n                \"location\": \"local\",\n                \"useMostFreeVolume\": true,\n                \"path\": \"opt/binalyze/air\",\n                \"volume\": \"/\",\n                \"tmp\": \"opt/binalyze/air/tmp\",\n                \"directCollection\": false\n            }\n        },\n        \"cpu\": {\n            \"limit\": 80\n        },\n        \"compression\": {\n            \"enabled\": true,\n            \"encryption\": {\n                \"enabled\": false,\n                \"password\": \"\"\n            }\n        }\n    },\n    \"acquisitionProfileId\": \"full\",\n    \"filter\": {\n        \"searchTerm\": \"\",\n        \"name\": \"\",\n        \"ipAddress\": \"\",\n        \"groupId\": \"\",\n        \"groupFullPath\": \"\",\n        \"managedStatus\": [\n            \"managed\"\n        ],\n        \"isolationStatus\": [],\n        \"platform\": [],\n        \"issue\": \"\",\n        \"onlineStatus\": [],\n        \"tags\": [],\n        \"version\": \"\",\n        \"policy\": \"\",\n        \"includedEndpointIds\": [\n            \"0ccbb181-685c-4f1e-982a-6f7c7e88eadd\"\n        ],\n        \"excludedEndpointIds\": [],\n        \"organizationIds\": [\n            0\n        ]\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/{{apiPrefix}}/acquisitions/acquire",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"{{apiPrefix}}",
										"acquisitions",
										"acquire"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "160"
								},
								{
									"key": "ETag",
									"value": "W/\"a0-UQuLHMSnhpfXs114Yna/XGbZM7g\""
								},
								{
									"key": "Date",
									"value": "Mon, 23 May 2022 06:09:20 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"result\": [\n        {\n            \"_id\": \"3c801542-d58e-4237-84b9-37651b455a38\",\n            \"name\": \"Example Case Acquisition 003\",\n            \"organizationId\": 0\n        }\n    ],\n    \"statusCode\": 200,\n    \"errors\": []\n}"
						},
						{
							"name": "Assign Evidence Acquisition Task with Task Name by Filter - 200 OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"caseId\": \"C-2022-0001\",\n    \"taskName\": \"Custom Acquisition Task Name\",\n    \"droneConfig\": {\n        \"autoPilot\": false,\n        \"enabled\": false,\n        \"analyzers\": [\n            \"bha\",\n            \"wsa\",\n            \"aa\",\n            \"ara\"\n        ],\n        \"keywords\": [\n            \"keyword-1\",\n            \"keyword-2\"\n        ]\n    },\n    \"taskConfig\": {\n        \"choice\": \"use-custom-options\",\n        \"saveTo\": {\n            \"windows\": {\n                \"location\": \"local\",\n                \"useMostFreeVolume\": true,\n                \"repositoryId\": null,\n                \"path\": \"Binalyze\\\\AIR\\\\\",\n                \"volume\": \"C:\",\n                \"tmp\": \"Binalyze\\\\AIR\\\\tmp\",\n                \"directCollection\": false\n            },\n            \"linux\": {\n                \"location\": \"local\",\n                \"useMostFreeVolume\": true,\n                \"repositoryId\": null,\n                \"path\": \"opt/binalyze/air\",\n                \"tmp\": \"opt/binalyze/air/tmp\",\n                \"directCollection\": false\n            },\n            \"macos\": {\n                \"location\": \"local\",\n                \"useMostFreeVolume\": false,\n                \"repositoryId\": null,\n                \"path\": \"opt/binalyze/air\",\n                \"volume\": \"/\",\n                \"tmp\": \"opt/binalyze/air/tmp\",\n                \"directCollection\": false\n            },\n            \"aix\": {\n                \"location\": \"local\",\n                \"useMostFreeVolume\": true,\n                \"path\": \"opt/binalyze/air\",\n                \"volume\": \"/\",\n                \"tmp\": \"opt/binalyze/air/tmp\",\n                \"directCollection\": false\n            }\n        },\n        \"cpu\": {\n            \"limit\": 80\n        },\n        \"compression\": {\n            \"enabled\": true,\n            \"encryption\": {\n                \"enabled\": false,\n                \"password\": \"\"\n            }\n        }\n    },\n    \"acquisitionProfileId\": \"full\",\n    \"filter\": {\n        \"searchTerm\": \"\",\n        \"name\": \"\",\n        \"ipAddress\": \"\",\n        \"groupId\": \"\",\n        \"groupFullPath\": \"\",\n        \"managedStatus\": [\n            \"managed\"\n        ],\n        \"isolationStatus\": [],\n        \"platform\": [],\n        \"issue\": \"\",\n        \"onlineStatus\": [],\n        \"tags\": [],\n        \"version\": \"\",\n        \"policy\": \"\",\n        \"includedEndpointIds\": [\n            \"0ccbb181-685c-4f1e-982a-6f7c7e88eadd\"\n        ],\n        \"excludedEndpointIds\": [],\n        \"organizationIds\": [\n            0\n        ]\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/{{apiPrefix}}/acquisitions/acquire",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"{{apiPrefix}}",
										"acquisitions",
										"acquire"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "160"
								},
								{
									"key": "ETag",
									"value": "W/\"a0-UQuLHMSnhpfXs114Yna/XGbZM7g\""
								},
								{
									"key": "Date",
									"value": "Mon, 23 May 2022 06:09:20 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"result\": [\n        {\n            \"_id\": \"3c801542-d58e-4237-84b9-37651b455a38\",\n            \"name\": \"Custom Acquisition Task Name\",\n            \"organizationId\": 0\n        }\n    ],\n    \"statusCode\": 200,\n    \"errors\": []\n}"
						},
						{
							"name": "Evidence Acquisition One Time Scheduling With Custom Timezone - 200 OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"caseId\": \"C-2022-0001\",\n    \"droneConfig\": {\n        \"autoPilot\": false,\n        \"enabled\": false,\n        \"analyzers\": [\n            \"bha\",\n            \"wsa\",\n            \"aa\",\n            \"ara\"\n        ],\n        \"keywords\": [\n            \"keyword-1\",\n            \"keyword-2\"\n        ]\n    },\n    \"taskConfig\": {\n        \"choice\": \"use-custom-options\",\n        \"saveTo\": {\n            \"windows\": {\n                \"location\": \"local\",\n                \"useMostFreeVolume\": true,\n                \"repositoryId\": null,\n                \"path\": \"Binalyze\\\\AIR\\\\\",\n                \"volume\": \"C:\",\n                \"tmp\": \"Binalyze\\\\AIR\\\\tmp\",\n                \"directCollection\": false\n            },\n            \"linux\": {\n                \"location\": \"local\",\n                \"useMostFreeVolume\": true,\n                \"repositoryId\": null,\n                \"path\": \"opt/binalyze/air\",\n                \"tmp\": \"opt/binalyze/air/tmp\",\n                \"directCollection\": false\n            },\n            \"macos\": {\n                \"location\": \"local\",\n                \"useMostFreeVolume\": false,\n                \"repositoryId\": null,\n                \"path\": \"opt/binalyze/air\",\n                \"volume\": \"/\",\n                \"tmp\": \"opt/binalyze/air/tmp\",\n                \"directCollection\": false\n            },\n            \"aix\": {\n                \"location\": \"local\",\n                \"useMostFreeVolume\": true,\n                \"path\": \"opt/binalyze/air\",\n                \"volume\": \"/\",\n                \"tmp\": \"opt/binalyze/air/tmp\",\n                \"directCollection\": false\n            }\n        },\n        \"cpu\": {\n            \"limit\": 80\n        },\n        \"compression\": {\n            \"enabled\": true,\n            \"encryption\": {\n                \"enabled\": false,\n                \"password\": \"\"\n            }\n        }\n    },\n    \"acquisitionProfileId\": \"full\",\n    \"filter\": {\n        \"searchTerm\": \"\",\n        \"name\": \"\",\n        \"ipAddress\": \"\",\n        \"groupId\": \"\",\n        \"groupFullPath\": \"\",\n        \"managedStatus\": [\n            \"managed\"\n        ],\n        \"isolationStatus\": [],\n        \"platform\": [],\n        \"issue\": \"\",\n        \"onlineStatus\": [],\n        \"tags\": [],\n        \"version\": \"\",\n        \"policy\": \"\",\n        \"includedEndpointIds\": [\n            \"0ccbb181-685c-4f1e-982a-6f7c7e88eadd\"\n        ],\n        \"excludedEndpointIds\": [],\n        \"organizationIds\": [\n            0\n        ]\n    },\n    \"schedulerConfig\": {\n        \"when\": \"scheduled\",\n        \"timezoneType\": \"custom\",\n        \"timezone\": \"Europe/London\",\n        \"startDate\": 1704078000,\n        \"recurrence\": \"onetime\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/{{apiPrefix}}/acquisitions/acquire",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"{{apiPrefix}}",
										"acquisitions",
										"acquire"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "160"
								},
								{
									"key": "ETag",
									"value": "W/\"a0-UQuLHMSnhpfXs114Yna/XGbZM7g\""
								},
								{
									"key": "Date",
									"value": "Mon, 23 May 2022 06:09:20 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"result\": [\n        {\n            \"_id\": \"3c801542-d58e-4237-84b9-37651b455a38\",\n            \"name\": \"Example Case Acquisition 003\",\n            \"organizationId\": 0\n        }\n    ],\n    \"statusCode\": 200,\n    \"errors\": []\n}"
						},
						{
							"name": "Assign Evidence Acquisition Task by Filter - 400 Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"caseId\": \"C-2022-0001\",\n    \"droneConfig\": {\n        \"autoPilot\": false,\n        \"enabled\": false,\n        \"analyzers\": [\n            \"bha\",\n            \"wsa\",\n            \"aa\",\n            \"ara\"\n        ],\n        \"keywords\": [\n            \"keyword\"\n        ]\n    },\n    \"taskConfig\": {\n        \"choice\": \"use-custom-options\",\n        \"saveTo\": {\n            \"windows\": {\n                \"location\": \"local\",\n                \"useMostFreeVolume\": true,\n                \"repositoryId\": null,\n                \"path\": \"Binalyze\\\\AIR\\\\\",\n                \"volume\": \"C:\",\n                \"tmp\": \"Binalyze\\\\AIR\\\\tmp\",\n                \"directCollection\": false\n            },\n            \"linux\": {\n                \"location\": \"local\",\n                \"useMostFreeVolume\": true,\n                \"repositoryId\": null,\n                \"path\": \"opt/binalyze/air\",\n                \"tmp\": \"opt/binalyze/air/tmp\",\n                \"directCollection\": false\n            },\n            \"macos\": {\n                \"location\": \"local\",\n                \"useMostFreeVolume\": false,\n                \"repositoryId\": null,\n                \"path\": \"opt/binalyze/air\",\n                \"volume\": \"/\",\n                \"tmp\": \"opt/binalyze/air/tmp\",\n                \"directCollection\": false\n            },\n            \"aix\": {\n                \"location\": \"local\",\n                \"useMostFreeVolume\": true,\n                \"path\": \"opt/binalyze/air\",\n                \"volume\": \"/\",\n                \"tmp\": \"opt/binalyze/air/tmp\",\n                \"directCollection\": false\n            }\n        },\n        \"cpu\": {\n            \"limit\": 80\n        },\n        \"compression\": {\n            \"enabled\": true,\n            \"encryption\": {\n                \"enabled\": false,\n                \"password\": \"\"\n            }\n        }\n    },\n    \"acquisitionProfileId\": \"quick\",\n    \"filter\": {\n        \"searchTerm\": \"\",\n        \"name\": \"\",\n        \"ipAddress\": \"\",\n        \"groupId\": \"\",\n        \"groupFullPath\": \"\",\n        \"managedStatus\": [],\n        \"isolationStatus\": [],\n        \"platform\": [],\n        \"issue\": \"\",\n        \"onlineStatus\": [],\n        \"tags\": [],\n        \"version\": \"\",\n        \"policy\": \"\",\n        \"includedEndpointIds\": [],\n        \"excludedEndpointIds\": [],\n        \"organizationIds\": []\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/{{apiPrefix}}/acquisitions/acquire",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"{{apiPrefix}}",
										"acquisitions",
										"acquire"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "100"
								},
								{
									"key": "ETag",
									"value": "W/\"64-0dZahibur8gfpdjDGd/+kpCpojg\""
								},
								{
									"key": "Date",
									"value": "Sun, 19 Jun 2022 09:28:15 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"errors\": [\n        \"'organizationIds' should not be empty.\"\n    ],\n    \"statusCode\": 400,\n    \"result\": null\n}"
						},
						{
							"name": "Assign Evidence Acquisition Task by Filter - 406 Not Acceptable",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"assertions\": {\n        \"failIfNumberOfAssetsGreaterThan\": 5\n    },\n    \"caseId\": null,\n    \"droneConfig\": {\n        \"autoPilot\": false,\n        \"enabled\": false,\n        \"analyzers\": [\n            \"bha\",\n            \"wsa\",\n            \"aa\",\n            \"ara\"\n        ],\n        \"keywords\": [\n            \"keyword\"\n        ]\n    },\n    \"taskConfig\": {\n        \"choice\": \"use-custom-options\",\n        \"saveTo\": {\n            \"windows\": {\n                \"location\": \"local\",\n                \"useMostFreeVolume\": true,\n                \"repositoryId\": null,\n                \"path\": \"Binalyze\\\\AIR\\\\\",\n                \"volume\": \"C:\",\n                \"tmp\": \"Binalyze\\\\AIR\\\\tmp\",\n                \"directCollection\": false\n            },\n            \"linux\": {\n                \"location\": \"local\",\n                \"useMostFreeVolume\": true,\n                \"repositoryId\": null,\n                \"path\": \"opt/binalyze/air\",\n                \"tmp\": \"opt/binalyze/air/tmp\",\n                \"directCollection\": false\n            },\n            \"macos\": {\n                \"location\": \"local\",\n                \"useMostFreeVolume\": false,\n                \"repositoryId\": null,\n                \"path\": \"opt/binalyze/air\",\n                \"volume\": \"/\",\n                \"tmp\": \"opt/binalyze/air/tmp\",\n                \"directCollection\": false\n            },\n            \"aix\": {\n                \"location\": \"local\",\n                \"useMostFreeVolume\": true,\n                \"path\": \"opt/binalyze/air\",\n                \"volume\": \"/\",\n                \"tmp\": \"opt/binalyze/air/tmp\",\n                \"directCollection\": false\n            }\n        },\n        \"cpu\": {\n            \"limit\": 80\n        },\n        \"compression\": {\n            \"enabled\": true,\n            \"encryption\": {\n                \"enabled\": false,\n                \"password\": \"\"\n            }\n        }\n    },\n    \"acquisitionProfileId\": \"quick\",\n    \"filter\": {\n        \"searchTerm\": \"\",\n        \"name\": \"\",\n        \"ipAddress\": \"\",\n        \"groupId\": \"\",\n        \"groupFullPath\": \"\",\n        \"managedStatus\": [],\n        \"isolationStatus\": [],\n        \"platform\": [],\n        \"issue\": \"\",\n        \"onlineStatus\": [],\n        \"tags\": [],\n        \"version\": \"\",\n        \"policy\": \"\",\n        \"includedEndpointIds\": [],\n        \"excludedEndpointIds\": [],\n        \"organizationIds\": [\n            0\n        ]\n    },\n    \"schedulerConfig\": {\n        \"when\": \"now\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/{{apiPrefix}}/acquisitions/acquire",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"{{apiPrefix}}",
										"acquisitions",
										"acquire"
									]
								}
							},
							"status": "Not Acceptable",
							"code": 406,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "nginx"
								},
								{
									"key": "Date",
									"value": "Wed, 30 Apr 2025 08:05:10 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "189"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Cache-Control",
									"value": "no-store"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "ETag",
									"value": "W/\"bd-yy1Q5Dlx3fkmXTzVt+u5Fl/RqvQ\""
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"errors\": [\n        \"The number of assets matching the provided filter exceeds the allowed limit. Matching asset count: 39, Maximum allowed asset: 5\"\n    ],\n    \"statusCode\": 406,\n    \"result\": null\n}"
						}
					]
				},
				{
					"name": "Assign Image Acquisition Task by Filter",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.runForTest(() => {",
									"    const payload = JSON.parse(pm.request.body.raw)",
									"    payload.filter.includedEndpointIds = [",
									"        pm.collectionVariables.get('endpointId')",
									"    ]",
									"    pm.request.body.raw = JSON.stringify(payload)",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"caseId\": null,\n    \"taskConfig\": {\n        \"choice\": \"use-custom-options\",\n        \"saveTo\": {\n            \"windows\": {\n                \"location\": \"repository\",\n                \"path\": \"Binalyze\\\\AIR\",\n                \"useMostFreeVolume\": true,\n                \"repositoryId\": \"Q2gCVO836FiavaIttHNwDBvF\",\n                \"tmp\": \"Binalyze\\\\AIR\\\\tmp\",\n                \"directCollection\": false\n            },\n            \"linux\": {\n                \"location\": \"repository\",\n                \"path\": \"opt/binalyze/air\",\n                \"useMostFreeVolume\": false,\n                \"repositoryId\": \"Q2gCVO836FiavaIttHNwDBvF\",\n                \"tmp\": \"opt/binalyze/air/tmp\",\n                \"directCollection\": false\n            },\n            \"macos\": {\n                \"location\": \"repository\",\n                \"path\": \"opt/binalyze/air\",\n                \"useMostFreeVolume\": false,\n                \"repositoryId\": \"Q2gCVO836FiavaIttHNwDBvF\",\n                \"tmp\": \"opt/binalyze/air/tmp\",\n                \"directCollection\": false\n            }\n        },\n        \"bandwidth\": {\n            \"limit\": 100000\n        },\n        \"compression\": {\n            \"enabled\": true,\n            \"encryption\": {\n                \"enabled\": false,\n                \"password\": \"sakir\"\n            }\n        }\n    },\n    \"diskImageOptions\": {\n        \"chunkSize\": 1048576,\n        \"singleFile\": false,\n        \"startOffset\": 0,\n        \"endpoints\": [\n            {\n                \"endpointId\": \"7a37cfdb-87ed-4beb-bbf8-f02c02b76532\",\n                \"volumes\": [\n                    \"/dev/disk3s5\",\n                    \"/dev/disk3s4\"\n                ]\n            }\n        ]\n    },\n    \"filter\": {\n        \"searchTerm\": \"\",\n        \"name\": \"\",\n        \"ipAddress\": \"\",\n        \"groupId\": \"\",\n        \"groupFullPath\": \"\",\n        \"managedStatus\": [],\n        \"isolationStatus\": [],\n        \"platform\": [],\n        \"issue\": \"\",\n        \"onlineStatus\": [],\n        \"tags\": [],\n        \"version\": \"\",\n        \"policy\": \"\",\n        \"includedEndpointIds\": [\n            \"7a37cfdb-87ed-4beb-bbf8-f02c02b76532\"\n        ],\n        \"excludedEndpointIds\": [],\n        \"organizationIds\": [\n            0\n        ]\n    },\n    \"schedulerConfig\": {\n        \"when\": \"now\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/{{apiPrefix}}/acquisitions/acquire/image",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"{{apiPrefix}}",
								"acquisitions",
								"acquire",
								"image"
							]
						},
						"description": "| **Name** | **Constraints** |\n| --- | --- |\n| **caseId**  <br>string / optional |  |\n| **diskImageOptions**  <br>object / required |  |\n| **diskImageOptions.startOffset**  <br>number / required | unit in bytes  <br>min: 0 |\n| **diskImageOptions.singleFile**  <br>boolean / required | default: false |\n| **diskImageOptions.chunkSize**  <br>number / if single file option is false: required | unit in bytes |\n| **diskImageOptions.endpoints**  <br>object array / required |  |\n| **diskImageOptions.endpoints\\[n\\].endpointId**  <br>string / required |  |\n| **diskImageOptions.endpoints\\[n\\].volumes**  <br>string array / required |  |\n| **taskConfig**  <br>object / required |  |\n| **taskConfig.choice**  <br>string / required | valid values: use-policy, use-custom-options |\n| **taskConfig.cpu**  <br>object / required |  |\n| **taskConfig.cpu.limit**  <br>number / required | min: 1  <br>max: 100 |\n| **taskConfig.compression**  <br>object / required |  |\n| **taskConfig.compression.enabled**  <br>boolean / required |  |\n| **taskConfig.compression.encryption**  <br>object / required |  |\n| **taskConfig.compression.encryption.enabled**  <br>boolean / required |  |\n| **taskConfig.compression.encryption.password**  <br>string / if encryption is enabled: required |  |\n| **taskConfig.saveTo.windows.location**  <br>string / required | valid values: local, repository |\n| **taskConfig.saveTo.windows.path**  <br>string / if location is local: required |  |\n| **taskConfig.saveTo.windows.repositoryId**  <br>string / if location is repository: required |  |\n| **taskConfig.saveTo.windows.useMostFreeVolume**  <br>boolean / required |  |\n| **taskConfig.saveTo.windows.volume**  <br>string / if useMostFreeVolume is false: required | Regex: /^\\[a-zA-Z\\]:/  <br>Example: \"C:\" |\n| **taskConfig.saveTo.windows.tmp**  <br>string / optional |  |\n| **taskConfig.saveTo.linux.location**  <br>string / required | valid values: local, repository |\n| **taskConfig.saveTo.linux.path**  <br>string / if location is local: required |  |\n| **taskConfig.saveTo.linux.repositoryId**  <br>string / if location is repository: required |  |\n| **taskConfig.saveTo.linux.useMostFreeVolume**  <br>boolean / required |  |\n| **taskConfig.saveTo.linux.volume**  <br>string / if useMostFreeVolume is false: required | Regex: /^\\[/\\].\\*/  <br>Example: \"/\" |\n| **taskConfig.saveTo.linux.tmp**  <br>string / optional |  |\n| **taskConfig.saveTo.macos.location**  <br>string / required | valid values: local, repository |\n| **taskConfig.saveTo.macos.path**  <br>string / if location is local: required |  |\n| **taskConfig.saveTo.macos.repositoryId**  <br>string / if location is repository: required |  |\n| **taskConfig.saveTo.macos.useMostFreeVolume**  <br>boolean / required |  |\n| **taskConfig.saveTo.macos.volume**  <br>string / optional | Regex: /^\\[/\\].\\*/  <br>Example: \"/\" |\n| **taskConfig.saveTo.macos.tmp**  <br>string / optional |  |\n| **filter.organizationIds**  <br>number array / required |  |\n| **filter.searchTerm**  <br>string / optional |  |\n| **filter.name**  <br>string / optional |  |\n| **filter.ipAddress**  <br>string / optional |  |\n| **filter.groupId**  <br>string / optional |  |\n| **filter.groupFullPath**  <br>string / optional |  |\n| **filter.label**  <br>string / optional |  |\n| **filter.lastSeen**  <br>string / optional | Example: 2023-03-06T21:00:00.000Z,2023-03-24T21:00:00.000Z |\n| **filter.managedStatus**  <br>string array / optional | valid values: unmanaged, managed, off-network |\n| **filter.isolationStatus**  <br>string array / optional | valid values: isolating, isolated, unisolating, unisolated |\n| **filter.platform**  <br>string array / optional | valid values: windows, linux, darwin |\n| **filter.issue**  <br>string array / optional | valid values: unreachable, old-version, update-required |\n| **filter.onlineStatus**  <br>string array / optional | valid values: online, offline |\n| **filter.tags**  <br>string array / optional |  |\n| **filter.version**  <br>string / optional |  |\n| **filter.policy**  <br>string / optional |  |\n| **filter.includedEndpointIds**  <br>string array / optional |  |\n| **filter.excludedEndpointIds**  <br>string array / optional |  |\n| **filter.caseId**  <br>string / optional |  |\n| **filter.awsRegions**  <br>string array / optional |  |\n| **filter.azureRegions**  <br>string array / optional |  |\n| **schedulerConfig.when**  <br>string / required | valid values: now, scheduled |\n| **schedulerConfig.timezoneType**  <br>string / if scheduled: required | valid values: asset, custom |\n| **schedulerConfig.timezone**  <br>string / if scheduled and custom timezone type selected: required | example: Europe/London |\n| **schedulerConfig.startDate**  <br>unix timestamp / if scheduled: required |  |\n| **schedulerConfig.recurrence**  <br>string / if scheduled: required | valid values: onetime, daily, weekly, monthly |\n| **schedulerConfig.repeatEvery**  <br>number / if scheduled and recurrence is daily or monthly: required |  |\n| **schedulerConfig.repeatOnWeek**  <br>string array / if scheduled and recurrence is weekly: required | valid values: array of 3-letter days of week.  <br>example: \\['MON', 'WED'\\] |\n| **schedulerConfig.repeatOnMonth**  <br>number / if scheduled and recurrence is monthly: required | day of month |\n| **schedulerConfig.endRepeatType**  <br>string / if scheduled: required | valid values: never, date, occurrence |\n| **schedulerConfig.endDate**  <br>unix timestamp / if scheduled and end repeat type is date: required |  |\n| **schedulerConfig.limit**  <br>number / if scheduled and end repeat type is occurrence: required |  |"
					},
					"response": [
						{
							"name": "Assign Image Acquisition Task by Filter - 200 OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"caseId\": null,\n    \"taskConfig\": {\n        \"choice\": \"use-custom-options\",\n        \"saveTo\": {\n            \"windows\": {\n                \"location\": \"repository\",\n                \"path\": \"Binalyze\\\\AIR\",\n                \"useMostFreeVolume\": true,\n                \"repositoryId\": \"Q2gCVO836FiavaIttHNwDBvF\",\n                \"tmp\": \"Binalyze\\\\AIR\\\\tmp\",\n                \"directCollection\": false\n            },\n            \"linux\": {\n                \"location\": \"repository\",\n                \"path\": \"opt/binalyze/air\",\n                \"useMostFreeVolume\": false,\n                \"repositoryId\": \"Q2gCVO836FiavaIttHNwDBvF\",\n                \"tmp\": \"opt/binalyze/air/tmp\",\n                \"directCollection\": false\n            },\n            \"macos\": {\n                \"location\": \"repository\",\n                \"path\": \"opt/binalyze/air\",\n                \"useMostFreeVolume\": false,\n                \"repositoryId\": \"Q2gCVO836FiavaIttHNwDBvF\",\n                \"tmp\": \"opt/binalyze/air/tmp\",\n                \"directCollection\": false\n            }\n        },\n        \"bandwidth\": {\n            \"limit\": 100000\n        },\n        \"compression\": {\n            \"enabled\": true,\n            \"encryption\": {\n                \"enabled\": false,\n                \"password\": \"sakir\"\n            }\n        }\n    },\n    \"diskImageOptions\": {\n        \"chunkSize\": 1048576,\n        \"chunkCount\": 0,\n        \"startOffset\": 0,\n        \"endpoints\": [\n            {\n                \"endpointId\": \"7a37cfdb-87ed-4beb-bbf8-f02c02b76532\",\n                \"volumes\": [\n                    \"/dev/disk3s5\",\n                    \"/dev/disk3s4\"\n                ]\n            }\n        ]\n    },\n    \"filter\": {\n        \"searchTerm\": \"\",\n        \"name\": \"\",\n        \"ipAddress\": \"\",\n        \"groupId\": \"\",\n        \"groupFullPath\": \"\",\n        \"managedStatus\": [],\n        \"isolationStatus\": [],\n        \"platform\": [],\n        \"issue\": \"\",\n        \"onlineStatus\": [],\n        \"tags\": [],\n        \"version\": \"\",\n        \"policy\": \"\",\n        \"includedEndpointIds\": [\n            \"7a37cfdb-87ed-4beb-bbf8-f02c02b76532\"\n        ],\n        \"excludedEndpointIds\": [],\n        \"organizationIds\": [\n            0\n        ]\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/{{apiPrefix}}/acquisitions/acquire/image",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"{{apiPrefix}}",
										"acquisitions",
										"acquire",
										"image"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "160"
								},
								{
									"key": "ETag",
									"value": "W/\"a0-UQuLHMSnhpfXs114Yna/XGbZM7g\""
								},
								{
									"key": "Date",
									"value": "Mon, 23 May 2022 06:09:20 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"result\": [\n        {\n            \"_id\": \"3c801542-d58e-4237-84b9-37651b455a38\",\n            \"name\": \"Acquire Image 001\",\n            \"organizationId\": 0\n        }\n    ],\n    \"statusCode\": 200,\n    \"errors\": []\n}"
						},
						{
							"name": "Assign Image Acquisition Task by Filter - 400 Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"caseId\": null,\n    \"taskConfig\": {\n        \"choice\": \"use-custom-options\",\n        \"saveTo\": {\n            \"windows\": {\n                \"location\": \"repository\",\n                \"path\": \"Binalyze\\\\AIR\",\n                \"useMostFreeVolume\": true,\n                \"repositoryId\": \"Q2gCVO836FiavaIttHNwDBvF\",\n                \"tmp\": \"Binalyze\\\\AIR\\\\tmp\",\n                \"directCollection\": false\n            },\n            \"linux\": {\n                \"location\": \"repository\",\n                \"path\": \"opt/binalyze/air\",\n                \"useMostFreeVolume\": false,\n                \"repositoryId\": \"Q2gCVO836FiavaIttHNwDBvF\",\n                \"tmp\": \"opt/binalyze/air/tmp\",\n                \"directCollection\": false\n            },\n            \"macos\": {\n                \"location\": \"repository\",\n                \"path\": \"opt/binalyze/air\",\n                \"useMostFreeVolume\": false,\n                \"repositoryId\": \"Q2gCVO836FiavaIttHNwDBvF\",\n                \"tmp\": \"opt/binalyze/air/tmp\",\n                \"directCollection\": false\n            }\n        },\n        \"bandwidth\": {\n            \"limit\": 100000\n        },\n        \"compression\": {\n            \"enabled\": true,\n            \"encryption\": {\n                \"enabled\": false,\n                \"password\": \"sakir\"\n            }\n        }\n    },\n    \"diskImageOptions\": {\n        \"chunkSize\": 1048576,\n        \"chunkCount\": 0,\n        \"startOffset\": 0,\n        \"endpoints\": [\n            {\n                \"endpointId\": \"7a37cfdb-87ed-4beb-bbf8-f02c02b76532\",\n                \"volumes\": [\n                    \"/dev/disk3s5\",\n                    \"/dev/disk3s4\"\n                ]\n            }\n        ]\n    },\n    \"filter\": {\n        \"searchTerm\": \"\",\n        \"name\": \"\",\n        \"ipAddress\": \"\",\n        \"groupId\": \"\",\n        \"groupFullPath\": \"\",\n        \"managedStatus\": [],\n        \"isolationStatus\": [],\n        \"platform\": [],\n        \"issue\": \"\",\n        \"onlineStatus\": [],\n        \"tags\": [],\n        \"version\": \"\",\n        \"policy\": \"\",\n        \"includedEndpointIds\": [\n            \"7a37cfdb-87ed-4beb-bbf8-f02c02b76532\"\n        ],\n        \"excludedEndpointIds\": [],\n        \"organizationIds\": []\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/{{apiPrefix}}/acquisitions/acquire/image",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"{{apiPrefix}}",
										"acquisitions",
										"acquire",
										"image"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "100"
								},
								{
									"key": "ETag",
									"value": "W/\"64-0dZahibur8gfpdjDGd/+kpCpojg\""
								},
								{
									"key": "Date",
									"value": "Sun, 19 Jun 2022 09:28:15 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"errors\": [\n        \"'organizationIds' should not be empty.\"\n    ],\n    \"statusCode\": 400,\n    \"result\": null\n}"
						}
					]
				},
				{
					"name": "Create Acquisition Profile",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Sample Acquisition Profile\",\n  \"organizationIds\": [],\n  \"windows\": {\n    \"evidenceList\": [\n      \"clp\"\n    ],\n    \"artifactList\": [\n      \"apcl\"\n    ],\n    \"customContentProfiles\": [],\n    \"networkCapture\": {\n      \"enabled\": true,\n      \"duration\": 600,\n      \"pcap\": {\n        \"enabled\": true\n      },\n      \"networkFlow\": {\n        \"enabled\": true\n      }\n    }\n  },\n  \"linux\": {\n    \"evidenceList\": [\n      \"syscntrls\"\n    ],\n    \"artifactList\": [\n      \"apcl\"\n    ],\n    \"customContentProfiles\": [],\n    \"networkCapture\": {\n      \"enabled\": false,\n      \"duration\": 600,\n      \"pcap\": {\n        \"enabled\": false\n      },\n      \"networkFlow\": {\n        \"enabled\": false\n      }\n    }\n  },\n  \"macos\": {\n    \"evidenceList\": [\n      \"autoproc\"\n    ],\n    \"artifactList\": [\n      \"apcl\"\n    ],\n    \"customContentProfiles\": [],\n    \"networkCapture\": {\n      \"enabled\": false,\n      \"duration\": 600,\n      \"pcap\": {\n        \"enabled\": false\n      },\n      \"networkFlow\": {\n        \"enabled\": false\n      }\n    }\n  },\n  \"aix\": {\n    \"evidenceList\": [\n      \"cronj\"\n    ],\n    \"artifactList\": [\n      \"myl\"\n    ],\n    \"customContentProfiles\": []\n  },\n  \"eDiscovery\": {\n    \"patterns\": [\n      {\n        \"pattern\": \"**/*.7z\",\n        \"category\": \"Archives\"\n      }\n    ]\n  }\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/{{apiPrefix}}/acquisitions/profiles",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"{{apiPrefix}}",
								"acquisitions",
								"profiles"
							]
						},
						"description": "`permission needed: create-acquisition-profile`"
					},
					"response": [
						{
							"name": "200 OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"Sample Acquisition Profile\",\n  \"organizationIds\": [],\n  \"windows\": {\n    \"evidenceList\": [\n      \"clp\"\n    ],\n    \"artifactList\": [\n      \"apcl\"\n    ],\n    \"customContentProfiles\": [],\n    \"networkCapture\": {\n      \"enabled\": true,\n      \"duration\": 600,\n      \"pcap\": {\n        \"enabled\": true\n      },\n      \"networkFlow\": {\n        \"enabled\": true\n      }\n    }\n  },\n  \"linux\": {\n    \"evidenceList\": [\n      \"syscntrls\"\n    ],\n    \"artifactList\": [\n      \"apcl\"\n    ],\n    \"customContentProfiles\": [],\n    \"networkCapture\": {\n      \"enabled\": false,\n      \"duration\": 600,\n      \"pcap\": {\n        \"enabled\": false\n      },\n      \"networkFlow\": {\n        \"enabled\": false\n      }\n    }\n  },\n  \"macos\": {\n    \"evidenceList\": [\n      \"autoproc\"\n    ],\n    \"artifactList\": [\n      \"apcl\"\n    ],\n    \"customContentProfiles\": [],\n    \"networkCapture\": {\n      \"enabled\": false,\n      \"duration\": 600,\n      \"pcap\": {\n        \"enabled\": false\n      },\n      \"networkFlow\": {\n        \"enabled\": false\n      }\n    }\n  },\n  \"aix\": {\n    \"evidenceList\": [\n      \"cronj\"\n    ],\n    \"artifactList\": [\n      \"myl\"\n    ],\n    \"customContentProfiles\": []\n  },\n  \"eDiscovery\": {\n    \"patterns\": [\n      {\n        \"pattern\": \"**/*.7z\",\n        \"category\": \"Archives\"\n      }\n    ]\n  }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/{{apiPrefix}}/acquisitions/profiles",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"{{apiPrefix}}",
										"acquisitions",
										"profiles"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "nginx"
								},
								{
									"key": "Date",
									"value": "Wed, 24 Jan 2024 06:36:31 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "59"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "ETag",
									"value": "W/\"3b-MHtur75ftUyQ2IfDqFjH6SAxAM4\""
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"result\": null,\n    \"statusCode\": 200,\n    \"errors\": []\n}"
						}
					]
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Audit Logs",
			"item": [
				{
					"name": "Export Audit Logs",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/{{apiPrefix}}/audit-logs/export?filter[organizationIds]=0",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"{{apiPrefix}}",
								"audit-logs",
								"export"
							],
							"query": [
								{
									"key": "pageNumber",
									"value": "",
									"description": "Which page of results to return",
									"disabled": true
								},
								{
									"key": "pageSize",
									"value": "",
									"description": "How many results to return per page",
									"disabled": true
								},
								{
									"key": "sortBy",
									"value": "",
									"description": "Attribute name to order the responses by",
									"disabled": true
								},
								{
									"key": "sortType",
									"value": "",
									"description": "Either ASC or DESC",
									"disabled": true
								},
								{
									"key": "filter[searchTerm]",
									"value": "",
									"disabled": true
								},
								{
									"key": "filter[type]",
									"value": "",
									"disabled": true
								},
								{
									"key": "filter[performedBy]",
									"value": "",
									"disabled": true
								},
								{
									"key": "filter[endpointName]",
									"value": "",
									"disabled": true
								},
								{
									"key": "filter[organizationIds]",
									"value": "0"
								}
							]
						},
						"description": "### Parameters\n\n| **Name**                                             | **Constraints**                                |\n| ---------------------------------------------------- | ---------------------------------------------- |\n| **pageNumber** <br>number / optional                 | default value: 1 <br>min value:1               |\n| **pageSize** <br>number / optional                   | default value: 10 <br>min value:1              |\n| **sortBy** <br>string / optional                     | default value: createdAt                       |\n| **sortType** <br>string / optional                   | default value: ASC <br>valid values: ASC, DESC |\n| **filter\\[allOrganizations\\]** <br>string / optional | valid values: true, false                      |\n| **filter\\[name\\]** <br>string / optional             |                                                |\n| **filter\\[organizationIds\\]** <br>string / required  |                                                |\n| **filter\\[searchTerm\\]** <br>string / optional       |                                                |"
					},
					"response": []
				},
				{
					"name": "Get Audit Logs",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/{{apiPrefix}}/audit-logs?filter[organizationIds]=0",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"{{apiPrefix}}",
								"audit-logs"
							],
							"query": [
								{
									"key": "pageNumber",
									"value": "",
									"description": "Which page of results to return",
									"disabled": true
								},
								{
									"key": "pageSize",
									"value": "",
									"description": "How many results to return per page",
									"disabled": true
								},
								{
									"key": "sortBy",
									"value": "",
									"description": "Attribute name to order the responses by",
									"disabled": true
								},
								{
									"key": "sortType",
									"value": "",
									"description": "Either ASC or DESC",
									"disabled": true
								},
								{
									"key": "filter[searchTerm]",
									"value": "",
									"disabled": true
								},
								{
									"key": "filter[type]",
									"value": "",
									"disabled": true
								},
								{
									"key": "filter[performedBy]",
									"value": "",
									"disabled": true
								},
								{
									"key": "filter[endpointName]",
									"value": "",
									"disabled": true
								},
								{
									"key": "filter[organizationIds]",
									"value": "0"
								}
							]
						},
						"description": "### Parameters\n\n| **Name**                                             | **Constraints**                                |\n| ---------------------------------------------------- | ---------------------------------------------- |\n| **pageNumber** <br>number / optional                 | default value: 1 <br>min value:1               |\n| **pageSize** <br>number / optional                   | default value: 10 <br>min value:1              |\n| **sortBy** <br>string / optional                     | default value: createdAt                       |\n| **sortType** <br>string / optional                   | default value: ASC <br>valid values: ASC, DESC |\n| **filter\\[allOrganizations\\]** <br>string / optional | valid values: true, false                      |\n| **filter\\[name\\]** <br>string / optional             |                                                |\n| **filter\\[organizationIds\\]** <br>string / required  |                                                |\n| **filter\\[searchTerm\\]** <br>string / optional       |                                                |"
					},
					"response": []
				}
			]
		},
		{
			"name": "Assets",
			"item": [
				{
					"name": "Assign Task",
					"item": [
						{
							"name": "Assign Reboot Task by Filter",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.runForTest(() => {",
											"    const payload = JSON.parse(pm.request.body.raw)",
											"    payload.filter.includedEndpointIds = [",
											"        pm.collectionVariables.get('endpointId')",
											"    ]",
											"    pm.request.body.raw = JSON.stringify(payload)",
											"})"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"filter\": {\n        \"searchTerm\": \"\",\n        \"name\": \"\",\n        \"ipAddress\": \"\",\n        \"groupId\": \"\",\n        \"groupFullPath\": \"\",\n        \"managedStatus\": [\n            \"managed\"\n        ],\n        \"isolationStatus\": [],\n        \"platform\": [],\n        \"issue\": \"\",\n        \"onlineStatus\": [],\n        \"tags\": [],\n        \"version\": \"\",\n        \"policy\": \"\",\n        \"includedEndpointIds\": [],\n        \"excludedEndpointIds\": [],\n        \"organizationIds\": [\n            1\n        ]\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/{{apiPrefix}}/assets/tasks/reboot",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"{{apiPrefix}}",
										"assets",
										"tasks",
										"reboot"
									]
								},
								"description": "### Parameters\n\n| **Name** | **Constraints** |\n| --- | --- |\n| **filter.organizationIds**  <br>number array / required |  |\n| **filter.searchTerm**  <br>string / optional |  |\n| **filter.name**  <br>string / optional |  |\n| **filter.ipAddress**  <br>string / optional |  |\n| **filter.groupId**  <br>string / optional |  |\n| **filter.groupFullPath**  <br>string / optional |  |\n| **filter.label**  <br>string / optional |  |\n| **filter.lastSeen**  <br>string / optional | Example: 2023-03-06T21:00:00.000Z,2023-03-24T21:00:00.000Z |\n| **filter.managedStatus**  <br>string array / optional | valid values: unmanaged, managed, off-network |\n| **filter.isolationStatus**  <br>string array / optional | valid values: isolating, isolated, unisolating, unisolated |\n| **filter.platform**  <br>string array / optional | valid values: windows, linux, darwin |\n| **filter.issue**  <br>string array / optional | valid values: unreachable, old-version, update-required |\n| **filter.onlineStatus**  <br>string array / optional | valid values: online, offline |\n| **filter.tags**  <br>string array / optional |  |\n| **filter.version**  <br>string / optional |  |\n| **filter.policy**  <br>string / optional |  |\n| **filter.includedEndpointIds**  <br>string array / optional |  |\n| **filter.excludedEndpointIds**  <br>string array / optional |  |\n| **filter.awsRegions**  <br>string array / optional |  |\n| **filter.azureRegions**  <br>string array / optional |  |"
							},
							"response": [
								{
									"name": "Assign Reboot Task by Filter - 200 OK",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"filter\": {\n        \"searchTerm\": \"\",\n        \"name\": \"\",\n        \"ipAddress\": \"\",\n        \"groupId\": \"\",\n        \"groupFullPath\": \"\",\n        \"managedStatus\": [\n            \"managed\"\n        ],\n        \"isolationStatus\": [],\n        \"platform\": [],\n        \"issue\": \"\",\n        \"onlineStatus\": [],\n        \"tags\": [],\n        \"version\": \"\",\n        \"policy\": \"\",\n        \"includedEndpointIds\": [\n            \"9b890244-809c-415a-8e56-301be2aefe83\"\n        ],\n        \"excludedEndpointIds\": [],\n        \"organizationIds\": [\n            0\n        ]\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/{{apiPrefix}}/assets/tasks/reboot",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"{{apiPrefix}}",
												"assets",
												"tasks",
												"reboot"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "142"
										},
										{
											"key": "ETag",
											"value": "W/\"8e-lwU/3iBhjF8KKkEwC2scuC0XgqI\""
										},
										{
											"key": "Date",
											"value": "Mon, 23 May 2022 06:10:05 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"result\": [\n        {\n            \"_id\": \"8fe018d3-83de-4a6d-b7f4-bc97ed3b3156\",\n            \"name\": \"Reboot 002\",\n            \"organizationId\": 0\n        }\n    ],\n    \"statusCode\": 200,\n    \"errors\": []\n}"
								},
								{
									"name": "Assign Reboot Task by Filter - 404 Not Found",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"filter\": {\n        \"searchTerm\": \"\",\n        \"name\": \"\",\n        \"ipAddress\": \"\",\n        \"groupId\": \"\",\n        \"groupFullPath\": \"\",\n        \"managedStatus\": [\n            \"managed\"\n        ],\n        \"isolationStatus\": [],\n        \"platform\": [],\n        \"issue\": \"\",\n        \"onlineStatus\": [],\n        \"tags\": [],\n        \"version\": \"\",\n        \"policy\": \"\",\n        \"includedEndpointIds\": [\n            \"9b890244-809c-415a-8e56-301be2aefe8\"\n        ],\n        \"excludedEndpointIds\": [],\n        \"organizationIds\": [\n            0\n        ]\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/{{apiPrefix}}/assets/tasks/reboot",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"{{apiPrefix}}",
												"assets",
												"tasks",
												"reboot"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "119"
										},
										{
											"key": "ETag",
											"value": "W/\"77-jL/xJ1BjlICHfoK4fn7gvvLtZQg\""
										},
										{
											"key": "Date",
											"value": "Mon, 23 May 2022 06:10:21 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": false,\n    \"errors\": [\n        \"No managed endpoint(s) found by provided filter criteria.\"\n    ],\n    \"statusCode\": 404,\n    \"result\": null\n}"
								},
								{
									"name": "Assign Reboot Task by Filter - 406 Not Acceptable",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"assertions\": {\n        \"failIfNumberOfAssetsGreaterThan\": 5\n    },\n    \"filter\": {\n        \"searchTerm\": \"\",\n        \"name\": \"\",\n        \"ipAddress\": \"\",\n        \"groupId\": \"\",\n        \"groupFullPath\": \"\",\n        \"managedStatus\": [\n            \"managed\"\n        ],\n        \"isolationStatus\": [],\n        \"platform\": [\"linux\"],\n        \"issue\": \"\",\n        \"onlineStatus\": [],\n        \"tags\": [],\n        \"version\": \"\",\n        \"policy\": \"\",\n        \"includedEndpointIds\": [],\n        \"excludedEndpointIds\": [],\n        \"organizationIds\": [\n            1\n        ]\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/{{apiPrefix}}/assets/tasks/reboot",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"{{apiPrefix}}",
												"assets",
												"tasks",
												"reboot"
											]
										}
									},
									"status": "Not Acceptable",
									"code": 406,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "nginx"
										},
										{
											"key": "Date",
											"value": "Mon, 14 Apr 2025 15:56:49 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "189"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Cache-Control",
											"value": "no-store"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "ETag",
											"value": "W/\"bd-mOPPSccKzUmlJnIRcqXsjUbYg78\""
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": false,\n    \"errors\": [\n        \"The number of assets matching the provided filter exceeds the allowed limit. Matching asset count: 10, Maximum allowed asset: 5\"\n    ],\n    \"statusCode\": 406,\n    \"result\": null\n}"
								}
							]
						},
						{
							"name": "Assign Shutdown Task by Filter",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.runForTest(() => {",
											"    const payload = JSON.parse(pm.request.body.raw)",
											"    payload.filter.includedEndpointIds = [",
											"        pm.collectionVariables.get('endpointId')",
											"    ]",
											"    pm.request.body.raw = JSON.stringify(payload)",
											"})"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"filter\": {\n        \"searchTerm\": \"\",\n        \"name\": \"\",\n        \"ipAddress\": \"\",\n        \"groupId\": \"\",\n        \"groupFullPath\": \"\",\n        \"managedStatus\": [\n            \"managed\"\n        ],\n        \"isolationStatus\": [],\n        \"platform\": [],\n        \"issue\": \"\",\n        \"onlineStatus\": [],\n        \"tags\": [],\n        \"version\": \"\",\n        \"policy\": \"\",\n        \"includedEndpointIds\": [\"endpoint-id\"],\n        \"excludedEndpointIds\": [],\n        \"organizationIds\": [\n            0\n        ]\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/{{apiPrefix}}/assets/tasks/shutdown",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"{{apiPrefix}}",
										"assets",
										"tasks",
										"shutdown"
									]
								},
								"description": "### Parameters\n\n| **Name** | **Constraints** |\n| --- | --- |\n| **filter.organizationIds**  <br>number array / required |  |\n| **filter.searchTerm**  <br>string / optional |  |\n| **filter.name**  <br>string / optional |  |\n| **filter.ipAddress**  <br>string / optional |  |\n| **filter.groupId**  <br>string / optional |  |\n| **filter.groupFullPath**  <br>string / optional |  |\n| **filter.label**  <br>string / optional |  |\n| **filter.lastSeen**  <br>string / optional | Example: 2023-03-06T21:00:00.000Z,2023-03-24T21:00:00.000Z |\n| **filter.managedStatus**  <br>string array / optional | valid values: unmanaged, managed, off-network |\n| **filter.isolationStatus**  <br>string array / optional | valid values: isolating, isolated, unisolating, unisolated |\n| **filter.platform**  <br>string array / optional | valid values: windows, linux, darwin |\n| **filter.issue**  <br>string array / optional | valid values: unreachable, old-version, update-required |\n| **filter.onlineStatus**  <br>string array / optional | valid values: online, offline |\n| **filter.tags**  <br>string array / optional |  |\n| **filter.version**  <br>string / optional |  |\n| **filter.policy**  <br>string / optional |  |\n| **filter.includedEndpointIds**  <br>string array / optional |  |\n| **filter.excludedEndpointIds**  <br>string array / optional |  |\n| **filter.awsRegions**  <br>string array / optional |  |\n| **filter.azureRegions**  <br>string array / optional |  |"
							},
							"response": [
								{
									"name": "Assign Shutdown Task by Filter - 200 OK",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"filter\": {\n        \"searchTerm\": \"\",\n        \"name\": \"\",\n        \"ipAddress\": \"\",\n        \"groupId\": \"\",\n        \"groupFullPath\": \"\",\n        \"managedStatus\": [\n            \"managed\"\n        ],\n        \"isolationStatus\": [],\n        \"platform\": [],\n        \"issue\": \"\",\n        \"onlineStatus\": [],\n        \"tags\": [],\n        \"version\": \"\",\n        \"policy\": \"\",\n        \"includedEndpointIds\": [\n            \"9b890244-809c-415a-8e56-301be2aefe83\"\n        ],\n        \"excludedEndpointIds\": [],\n        \"organizationIds\": [\n            0\n        ]\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/{{apiPrefix}}/assets/tasks/shutdown",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"{{apiPrefix}}",
												"assets",
												"tasks",
												"shutdown"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "144"
										},
										{
											"key": "ETag",
											"value": "W/\"90-QnWiXLSdcEmyqwOETFS0T69SyKc\""
										},
										{
											"key": "Date",
											"value": "Mon, 23 May 2022 06:10:46 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"result\": [\n        {\n            \"_id\": \"a5f2ee9d-066e-47dd-a436-ba27808d76fb\",\n            \"name\": \"Shutdown 004\",\n            \"organizationId\": 0\n        }\n    ],\n    \"statusCode\": 200,\n    \"errors\": []\n}"
								},
								{
									"name": "Assign Shutdown Task by Filter - 404 Not Found",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"filter\": {\n        \"searchTerm\": \"\",\n        \"name\": \"\",\n        \"ipAddress\": \"\",\n        \"groupId\": \"\",\n        \"groupFullPath\": \"\",\n        \"managedStatus\": [\n            \"managed\"\n        ],\n        \"isolationStatus\": [],\n        \"platform\": [],\n        \"issue\": \"\",\n        \"onlineStatus\": [],\n        \"tags\": [],\n        \"version\": \"\",\n        \"policy\": \"\",\n        \"includedEndpointIds\": [\n            \"9b890244-809c-415a-8e56-301bes2aefe83\"\n        ],\n        \"excludedEndpointIds\": [],\n        \"organizationIds\": [\n            0\n        ]\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/{{apiPrefix}}/assets/tasks/shutdown",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"{{apiPrefix}}",
												"assets",
												"tasks",
												"shutdown"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "111"
										},
										{
											"key": "ETag",
											"value": "W/\"6f-h/udTnnVJb656wjYUJRdtwO1qaY\""
										},
										{
											"key": "Date",
											"value": "Mon, 23 May 2022 06:10:59 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": false,\n    \"errors\": [\n        \"No endpoint(s) found by provided filter criteria.\"\n    ],\n    \"statusCode\": 404,\n    \"result\": null\n}"
								},
								{
									"name": "Assign Shutdown Task by Filter - 406 Not Acceptable",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"assertions\": {\n        \"failIfNumberOfAssetsGreaterThan\": 2\n    },\n    \"filter\": {\n        \"searchTerm\": \"\",\n        \"name\": \"\",\n        \"ipAddress\": \"\",\n        \"groupId\": \"\",\n        \"groupFullPath\": \"\",\n        \"managedStatus\": [\n            \"managed\"\n        ],\n        \"isolationStatus\": [],\n        \"platform\": [],\n        \"issue\": \"\",\n        \"onlineStatus\": [],\n        \"tags\": [],\n        \"version\": \"\",\n        \"policy\": \"\",\n        \"includedEndpointIds\": [\"endpoint-id\"],\n        \"excludedEndpointIds\": [],\n        \"organizationIds\": [\n            0\n        ]\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/{{apiPrefix}}/assets/tasks/shutdown",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"{{apiPrefix}}",
												"assets",
												"tasks",
												"shutdown"
											]
										}
									},
									"status": "Not Acceptable",
									"code": 406,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "nginx"
										},
										{
											"key": "Date",
											"value": "Wed, 30 Apr 2025 07:59:29 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "189"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Cache-Control",
											"value": "no-store"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "ETag",
											"value": "W/\"bd-j/QBm+2xvLC0mWshZ2/lL2xKfP8\""
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": false,\n    \"errors\": [\n        \"The number of assets matching the provided filter exceeds the allowed limit. Matching asset count: 39, Maximum allowed asset: 2\"\n    ],\n    \"statusCode\": 406,\n    \"result\": null\n}"
								}
							]
						},
						{
							"name": "Assign Isolation Task by Filter",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.runForTest(() => {",
											"    const payload = JSON.parse(pm.request.body.raw)",
											"    payload.filter.includedEndpointIds = [",
											"        pm.collectionVariables.get('endpointId')",
											"    ]",
											"    pm.request.body.raw = JSON.stringify(payload)",
											"})"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"enabled\": true,\r\n    \"filter\": {\r\n        \"searchTerm\": \"\",\r\n        \"name\": \"\",\r\n        \"ipAddress\": \"\",\r\n        \"groupId\": \"\",\r\n        \"groupFullPath\": \"\",\r\n        \"managedStatus\": [\r\n            \"managed\"\r\n        ],\r\n        \"isolationStatus\": [],\r\n        \"platform\": [],\r\n        \"issue\": \"\",\r\n        \"onlineStatus\": [],\r\n        \"tagId\": \"\",\r\n        \"version\": \"\",\r\n        \"policy\": \"\",\r\n        \"includedEndpointIds\": [\"endpoint-id\"],\r\n        \"excludedEndpointIds\": [],\r\n        \"organizationIds\": [\r\n            0\r\n        ]\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/{{apiPrefix}}/assets/tasks/isolation",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"{{apiPrefix}}",
										"assets",
										"tasks",
										"isolation"
									]
								},
								"description": "### Parameters\n\n| **Name** | **Constraints** |\n| --- | --- |\n| **filter.organizationIds**  <br>number array / required |  |\n| **filter.searchTerm**  <br>string / optional |  |\n| **filter.name**  <br>string / optional |  |\n| **filter.ipAddress**  <br>string / optional |  |\n| **filter.groupId**  <br>string / optional |  |\n| **filter.groupFullPath**  <br>string / optional |  |\n| **filter.label**  <br>string / optional |  |\n| **filter.lastSeen**  <br>string / optional | Example: 2023-03-06T21:00:00.000Z,2023-03-24T21:00:00.000Z |\n| **filter.managedStatus**  <br>string array / optional | valid values: unmanaged, managed, off-network |\n| **filter.isolationStatus**  <br>string array / optional | valid values: isolating, isolated, unisolating, unisolated |\n| **filter.platform**  <br>string array / optional | valid values: windows, linux, darwin |\n| **filter.issue**  <br>string array / optional | valid values: unreachable, old-version, update-required |\n| **filter.onlineStatus**  <br>string array / optional | valid values: online, offline |\n| **filter.tags**  <br>string array / optional |  |\n| **filter.version**  <br>string / optional |  |\n| **filter.policy**  <br>string / optional |  |\n| **filter.includedEndpointIds**  <br>string array / optional |  |\n| **filter.excludedEndpointIds**  <br>string array / optional |  |\n| **filter.awsRegions**  <br>string array / optional |  |\n| **filter.azureRegions**  <br>string array / optional |  |"
							},
							"response": [
								{
									"name": "Assign Isolation Task by Filter - 200 OK",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"enabled\": true,\r\n    \"filter\": {\r\n        \"searchTerm\": \"\",\r\n        \"name\": \"\",\r\n        \"ipAddress\": \"\",\r\n        \"groupId\": \"\",\r\n        \"groupFullPath\": \"\",\r\n        \"managedStatus\": [\r\n            \"managed\"\r\n        ],\r\n        \"isolationStatus\": [],\r\n        \"platform\": [],\r\n        \"issue\": \"\",\r\n        \"onlineStatus\": [],\r\n        \"tagId\": \"\",\r\n        \"version\": \"\",\r\n        \"policy\": \"\",\r\n        \"includedEndpointIds\": [\r\n            \"3758794d-9d18-424f-86c7-40a5c4d9f059\"\r\n        ],\r\n        \"excludedEndpointIds\": [],\r\n        \"organizationIds\": [\r\n            0\r\n        ]\r\n    }\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/{{apiPrefix}}/assets/tasks/isolation",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"{{apiPrefix}}",
												"assets",
												"tasks",
												"isolation"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "145"
										},
										{
											"key": "ETag",
											"value": "W/\"91-KytmhwSguA6f64zUQ4SUn+Ob0Mg\""
										},
										{
											"key": "Date",
											"value": "Mon, 23 May 2022 06:12:35 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"result\": [\n        {\n            \"_id\": \"26aeb2db-9fd0-467c-a3ba-b74c675ef0c8\",\n            \"name\": \"Isolation 003\",\n            \"organizationId\": 0\n        }\n    ],\n    \"statusCode\": 200,\n    \"errors\": []\n}"
								},
								{
									"name": "Assign Unisolation Task by Filter - 200 OK",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"enabled\": false,\r\n    \"filter\": {\r\n        \"searchTerm\": \"\",\r\n        \"name\": \"\",\r\n        \"ipAddress\": \"\",\r\n        \"groupId\": \"\",\r\n        \"groupFullPath\": \"\",\r\n        \"managedStatus\": [\r\n            \"managed\"\r\n        ],\r\n        \"isolationStatus\": [],\r\n        \"platform\": [],\r\n        \"issue\": \"\",\r\n        \"onlineStatus\": [],\r\n        \"tagId\": \"\",\r\n        \"version\": \"\",\r\n        \"policy\": \"\",\r\n        \"includedEndpointIds\": [\r\n            \"3758794d-9d18-424f-86c7-40a5c4d9f059\"\r\n        ],\r\n        \"excludedEndpointIds\": [],\r\n        \"organizationIds\": [\r\n            0\r\n        ]\r\n    }\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/{{apiPrefix}}/assets/tasks/isolation",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"{{apiPrefix}}",
												"assets",
												"tasks",
												"isolation"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "145"
										},
										{
											"key": "ETag",
											"value": "W/\"91-KytmhwSguA6f64zUQ4SUn+Ob0Mg\""
										},
										{
											"key": "Date",
											"value": "Mon, 23 May 2022 06:12:35 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"result\": [\n        {\n            \"_id\": \"26aeb2db-9fd0-467c-a3ba-b74c675ef0c8\",\n            \"name\": \"Isolation 003\",\n            \"organizationId\": 0\n        }\n    ],\n    \"statusCode\": 200,\n    \"errors\": []\n}"
								},
								{
									"name": "Assign Isolation Task by Filter - 404 Not Found",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"enabled\": true,\r\n    \"filter\": {\r\n        \"searchTerm\": \"\",\r\n        \"name\": \"\",\r\n        \"ipAddress\": \"\",\r\n        \"groupId\": \"\",\r\n        \"groupFullPath\": \"\",\r\n        \"managedStatus\": [\r\n            \"managed\"\r\n        ],\r\n        \"isolationStatus\": [],\r\n        \"platform\": [],\r\n        \"issue\": \"\",\r\n        \"onlineStatus\": [],\r\n        \"tagId\": \"\",\r\n        \"version\": \"\",\r\n        \"policy\": \"\",\r\n        \"includedEndpointIds\": [\r\n            \"3e980020-4a34-4392-b6e5-fa6a69e34bc9\"\r\n        ],\r\n        \"excludedEndpointIds\": [],\r\n        \"organizationIds\": [\r\n            0\r\n        ]\r\n    }\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/{{apiPrefix}}/assets/tasks/isolation",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"{{apiPrefix}}",
												"assets",
												"tasks",
												"isolation"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "111"
										},
										{
											"key": "ETag",
											"value": "W/\"6f-h/udTnnVJb656wjYUJRdtwO1qaY\""
										},
										{
											"key": "Date",
											"value": "Mon, 23 May 2022 06:11:18 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": false,\n    \"errors\": [\n        \"No endpoint(s) found by provided filter criteria.\"\n    ],\n    \"statusCode\": 404,\n    \"result\": null\n}"
								},
								{
									"name": "Assign Isolation Task by Filter - 406 Not Acceptable",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"assertions\": {\r\n        \"failIfNumberOfAssetsGreaterThan\": 5\r\n    },\r\n    \"enabled\": true,\r\n    \"filter\": {\r\n        \"searchTerm\": \"\",\r\n        \"name\": \"\",\r\n        \"ipAddress\": \"\",\r\n        \"groupId\": \"\",\r\n        \"groupFullPath\": \"\",\r\n        \"managedStatus\": [\r\n            \"managed\"\r\n        ],\r\n        \"isolationStatus\": [],\r\n        \"platform\": [],\r\n        \"issue\": \"\",\r\n        \"onlineStatus\": [],\r\n        \"tagId\": \"\",\r\n        \"version\": \"\",\r\n        \"policy\": \"\",\r\n        \"includedEndpointIds\": [],\r\n        \"excludedEndpointIds\": [],\r\n        \"organizationIds\": [\r\n            0\r\n        ]\r\n    }\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/{{apiPrefix}}/assets/tasks/isolation",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"{{apiPrefix}}",
												"assets",
												"tasks",
												"isolation"
											]
										}
									},
									"status": "Not Acceptable",
									"code": 406,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "nginx"
										},
										{
											"key": "Date",
											"value": "Wed, 30 Apr 2025 08:11:14 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "189"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Cache-Control",
											"value": "no-store"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "ETag",
											"value": "W/\"bd-ptGEdchhx7m3kb40J01Tg5f76x0\""
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": false,\n    \"errors\": [\n        \"The number of assets matching the provided filter exceeds the allowed limit. Matching asset count: 20, Maximum allowed asset: 5\"\n    ],\n    \"statusCode\": 406,\n    \"result\": null\n}"
								}
							]
						},
						{
							"name": "Assign Log Retrieval Task by Filter",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.runForTest(() => {",
											"    const payload = JSON.parse(pm.request.body.raw)",
											"    payload.filter.includedEndpointIds = [",
											"        pm.collectionVariables.get('endpointId')",
											"    ]",
											"    pm.request.body.raw = JSON.stringify(payload)",
											"})"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"filter\": {\n        \"searchTerm\": \"\",\n        \"name\": \"\",\n        \"ipAddress\": \"\",\n        \"groupId\": \"\",\n        \"groupFullPath\": \"\",\n        \"managedStatus\": [\n            \"managed\"\n        ],\n        \"isolationStatus\": [],\n        \"platform\": [],\n        \"issue\": \"\",\n        \"onlineStatus\": [],\n        \"tags\": [],\n        \"version\": \"\",\n        \"policy\": \"\",\n        \"includedEndpointIds\": [\"endpoint-id\"],\n        \"excludedEndpointIds\": [],\n        \"organizationIds\": [\n            0\n        ]\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/{{apiPrefix}}/assets/tasks/retrieve-logs",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"{{apiPrefix}}",
										"assets",
										"tasks",
										"retrieve-logs"
									]
								},
								"description": "### Parameters\n\n| **Name** | **Constraints** |\n| --- | --- |\n| **filter.organizationIds**  <br>number array / required |  |\n| **filter.searchTerm**  <br>string / optional |  |\n| **filter.name**  <br>string / optional |  |\n| **filter.ipAddress**  <br>string / optional |  |\n| **filter.groupId**  <br>string / optional |  |\n| **filter.groupFullPath**  <br>string / optional |  |\n| **filter.label**  <br>string / optional |  |\n| **filter.lastSeen**  <br>string / optional | Example: 2023-03-06T21:00:00.000Z,2023-03-24T21:00:00.000Z |\n| **filter.managedStatus**  <br>string array / optional | valid values: unmanaged, managed, off-network |\n| **filter.isolationStatus**  <br>string array / optional | valid values: isolating, isolated, unisolating, unisolated |\n| **filter.platform**  <br>string array / optional | valid values: windows, linux, darwin |\n| **filter.issue**  <br>string array / optional | valid values: unreachable, old-version, update-required |\n| **filter.onlineStatus**  <br>string array / optional | valid values: online, offline |\n| **filter.tags**  <br>string array / optional |  |\n| **filter.version**  <br>string / optional |  |\n| **filter.policy**  <br>string / optional |  |\n| **filter.includedEndpointIds**  <br>string array / optional |  |\n| **filter.excludedEndpointIds**  <br>string array / optional |  |\n| **filter.awsRegions**  <br>string array / optional |  |\n| **filter.azureRegions**  <br>string array / optional |  |"
							},
							"response": [
								{
									"name": "Assign Retrieve Task by Filter - 200 OK",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"filter\": {\n        \"searchTerm\": \"\",\n        \"name\": \"\",\n        \"ipAddress\": \"\",\n        \"groupId\": \"\",\n        \"groupFullPath\": \"\",\n        \"managedStatus\": [\n            \"managed\"\n        ],\n        \"isolationStatus\": [],\n        \"platform\": [],\n        \"issue\": \"\",\n        \"onlineStatus\": [],\n        \"tags\": [],\n        \"version\": \"\",\n        \"policy\": \"\",\n        \"includedEndpointIds\": [\n            \"3758794d-9d18-424f-86c7-40a5c4d9f059\"\n        ],\n        \"excludedEndpointIds\": [],\n        \"organizationIds\": [\n            0\n        ]\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/{{apiPrefix}}/assets/tasks/retrieve-logs",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"{{apiPrefix}}",
												"assets",
												"tasks",
												"retrieve-logs"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "149"
										},
										{
											"key": "ETag",
											"value": "W/\"95-EjTPMV2VdeTLKA9QZYKfcvOWlag\""
										},
										{
											"key": "Date",
											"value": "Mon, 23 May 2022 06:12:49 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"result\": [\n        {\n            \"_id\": \"517ac6b7-92f1-4401-8f75-79931d73c2c1\",\n            \"name\": \"Log Retrieval 002\",\n            \"organizationId\": 0\n        }\n    ],\n    \"statusCode\": 200,\n    \"errors\": []\n}"
								},
								{
									"name": "Assign Retrieve Task by Filter - 404 Not Found",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"filter\": {\n        \"searchTerm\": \"\",\n        \"name\": \"\",\n        \"ipAddress\": \"\",\n        \"groupId\": \"\",\n        \"groupFullPath\": \"\",\n        \"managedStatus\": [\n            \"managed\"\n        ],\n        \"isolationStatus\": [],\n        \"platform\": [],\n        \"issue\": \"\",\n        \"onlineStatus\": [],\n        \"tags\": [],\n        \"version\": \"\",\n        \"policy\": \"\",\n        \"includedEndpointIds\": [\n            \"3e980020-4a34-4392-b6e5-fa6a69e34bc9\"\n        ],\n        \"excludedEndpointIds\": [],\n        \"organizationIds\": [\n            0\n        ]\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/{{apiPrefix}}/assets/tasks/retrieve-logs",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"{{apiPrefix}}",
												"assets",
												"tasks",
												"retrieve-logs"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "119"
										},
										{
											"key": "ETag",
											"value": "W/\"77-jL/xJ1BjlICHfoK4fn7gvvLtZQg\""
										},
										{
											"key": "Date",
											"value": "Mon, 23 May 2022 06:11:41 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": false,\n    \"errors\": [\n        \"No managed endpoint(s) found by provided filter criteria.\"\n    ],\n    \"statusCode\": 404,\n    \"result\": null\n}"
								},
								{
									"name": "Assign Log Retrieval Task by Filter - 406 Not Acceptable",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"assertions\": {\n        \"failIfNumberOfAssetsGreaterThan\": 5\n    },\n    \"filter\": {\n        \"searchTerm\": \"\",\n        \"name\": \"\",\n        \"ipAddress\": \"\",\n        \"groupId\": \"\",\n        \"groupFullPath\": \"\",\n        \"managedStatus\": [\n            \"managed\"\n        ],\n        \"isolationStatus\": [],\n        \"platform\": [],\n        \"issue\": \"\",\n        \"onlineStatus\": [],\n        \"tags\": [],\n        \"version\": \"\",\n        \"policy\": \"\",\n        \"includedEndpointIds\": [],\n        \"excludedEndpointIds\": [],\n        \"organizationIds\": [\n            0\n        ]\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/{{apiPrefix}}/assets/tasks/retrieve-logs",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"{{apiPrefix}}",
												"assets",
												"tasks",
												"retrieve-logs"
											]
										}
									},
									"status": "Not Acceptable",
									"code": 406,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "nginx"
										},
										{
											"key": "Date",
											"value": "Wed, 30 Apr 2025 08:03:13 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "189"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Cache-Control",
											"value": "no-store"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "ETag",
											"value": "W/\"bd-yy1Q5Dlx3fkmXTzVt+u5Fl/RqvQ\""
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": false,\n    \"errors\": [\n        \"The number of assets matching the provided filter exceeds the allowed limit. Matching asset count: 39, Maximum allowed asset: 5\"\n    ],\n    \"statusCode\": 406,\n    \"result\": null\n}"
								}
							]
						},
						{
							"name": "Assign Version Update Task by Filter",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.runForTest(() => {",
											"    const payload = JSON.parse(pm.request.body.raw)",
											"    payload.filter.includedEndpointIds = [",
											"        pm.collectionVariables.get('endpointId')",
											"    ]",
											"    pm.request.body.raw = JSON.stringify(payload)",
											"})"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () {",
											"    pm.response.to.have.status(404);",
											"});",
											"",
											"pm.test(\"Should return error 'No endpoint(s) found by provided filter criteria.'\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.errors).to.eql([\"No endpoint(s) found by provided filter criteria.\"]);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"filter\": {\n        \"searchTerm\": \"\",\n        \"name\": \"\",\n        \"ipAddress\": \"\",\n        \"groupId\": \"\",\n        \"groupFullPath\": \"\",\n        \"managedStatus\": [\n            \"managed\"\n        ],\n        \"isolationStatus\": [],\n        \"platform\": [],\n        \"issue\": \"\",\n        \"onlineStatus\": [],\n        \"tagId\": \"\",\n        \"version\": \"\",\n        \"policy\": \"\",\n        \"includedEndpointIds\": [\"endpoint-id\"],\n        \"excludedEndpointIds\": [],\n        \"organizationIds\": [\n            0\n        ]\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/{{apiPrefix}}/assets/tasks/version-update",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"{{apiPrefix}}",
										"assets",
										"tasks",
										"version-update"
									]
								},
								"description": "### Parameters\n\n| **Name** | **Constraints** |\n| --- | --- |\n| **filter.organizationIds**  <br>number array / required |  |\n| **filter.searchTerm**  <br>string / optional |  |\n| **filter.name**  <br>string / optional |  |\n| **filter.ipAddress**  <br>string / optional |  |\n| **filter.groupId**  <br>string / optional |  |\n| **filter.groupFullPath**  <br>string / optional |  |\n| **filter.label**  <br>string / optional |  |\n| **filter.lastSeen**  <br>string / optional | Example: 2023-03-06T21:00:00.000Z,2023-03-24T21:00:00.000Z |\n| **filter.managedStatus**  <br>string array / optional | valid values: unmanaged, managed, off-network |\n| **filter.isolationStatus**  <br>string array / optional | valid values: isolating, isolated, unisolating, unisolated |\n| **filter.platform**  <br>string array / optional | valid values: windows, linux, darwin |\n| **filter.issue**  <br>string array / optional | valid values: unreachable, old-version, update-required |\n| **filter.onlineStatus**  <br>string array / optional | valid values: online, offline |\n| **filter.tags**  <br>string array / optional |  |\n| **filter.version**  <br>string / optional |  |\n| **filter.policy**  <br>string / optional |  |\n| **filter.includedEndpointIds**  <br>string array / optional |  |\n| **filter.excludedEndpointIds**  <br>string array / optional |  |\n| **filter.awsRegions**  <br>string array / optional |  |\n| **filter.azureRegions**  <br>string array / optional |  |"
							},
							"response": [
								{
									"name": "Assign Version Update Task by Filter - 200 OK",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"filter\": {\n        \"searchTerm\": \"\",\n        \"name\": \"\",\n        \"ipAddress\": \"\",\n        \"groupId\": \"\",\n        \"groupFullPath\": \"\",\n        \"managedStatus\": [\n            \"managed\"\n        ],\n        \"isolationStatus\": [],\n        \"platform\": [],\n        \"issue\": \"\",\n        \"onlineStatus\": [],\n        \"tagId\": \"\",\n        \"version\": \"\",\n        \"policy\": \"\",\n        \"includedEndpointIds\": [\n            \"3758794d-9d18-424f-86c7-40a5c4d9f059\"\n        ],\n        \"excludedEndpointIds\": [],\n        \"organizationIds\": [\n            0\n        ]\n    }\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/{{apiPrefix}}/assets/tasks/version-update",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"{{apiPrefix}}",
												"assets",
												"tasks",
												"version-update"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "150"
										},
										{
											"key": "ETag",
											"value": "W/\"96-DbGmwhyQUqb+AJDAKBqkA6Z656M\""
										},
										{
											"key": "Date",
											"value": "Mon, 23 May 2022 06:11:52 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"result\": [\n        {\n            \"_id\": \"cbed8ab3-24d1-4697-8552-6ff6a6c1fae6\",\n            \"name\": \"Version Update 002\",\n            \"organizationId\": 0\n        }\n    ],\n    \"statusCode\": 200,\n    \"errors\": []\n}"
								},
								{
									"name": "Assign Version Update Task by Filter - 404 Not Found",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"filter\": {\n        \"searchTerm\": \"\",\n        \"name\": \"\",\n        \"ipAddress\": \"\",\n        \"groupId\": \"\",\n        \"groupFullPath\": \"\",\n        \"managedStatus\": [\n            \"managed\"\n        ],\n        \"isolationStatus\": [],\n        \"platform\": [],\n        \"issue\": \"\",\n        \"onlineStatus\": [],\n        \"tagId\": \"\",\n        \"version\": \"\",\n        \"policy\": \"\",\n        \"includedEndpointIds\": [\n            \"3758794d-9d18-424f-s86c7-40a5c4d9f059\"\n        ],\n        \"excludedEndpointIds\": [],\n        \"organizationIds\": [\n            0\n        ]\n    }\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/{{apiPrefix}}/assets/tasks/version-update",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"{{apiPrefix}}",
												"assets",
												"tasks",
												"version-update"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "111"
										},
										{
											"key": "ETag",
											"value": "W/\"6f-h/udTnnVJb656wjYUJRdtwO1qaY\""
										},
										{
											"key": "Date",
											"value": "Mon, 23 May 2022 06:13:04 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": false,\n    \"errors\": [\n        \"No endpoint(s) found by provided filter criteria.\"\n    ],\n    \"statusCode\": 404,\n    \"result\": null\n}"
								}
							]
						}
					]
				},
				{
					"name": "Get Assets",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/{{apiPrefix}}/assets?filter[organizationIds]=0",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"{{apiPrefix}}",
								"assets"
							],
							"query": [
								{
									"key": "pageNumber",
									"value": "1",
									"description": "Which page of results to return",
									"disabled": true
								},
								{
									"key": "pageSize",
									"value": "10",
									"description": "How many results to return per page",
									"disabled": true
								},
								{
									"key": "sortBy",
									"value": "createdAt",
									"description": "Attribute name to order the responses by",
									"disabled": true
								},
								{
									"key": "sortType",
									"value": "DESC",
									"description": "Either ASC or DESC",
									"disabled": true
								},
								{
									"key": "filter[searchTerm]",
									"value": "",
									"disabled": true
								},
								{
									"key": "filter[organizationIds]",
									"value": "0"
								},
								{
									"key": "filter[onlineStatus]",
									"value": "",
									"disabled": true
								},
								{
									"key": "filter[issue]",
									"value": "",
									"disabled": true
								},
								{
									"key": "filter[groupFullPath]",
									"value": "",
									"disabled": true
								},
								{
									"key": "filter[groupId]",
									"value": "",
									"disabled": true
								},
								{
									"key": "filter[name]",
									"value": "",
									"disabled": true
								},
								{
									"key": "filter[ipAddress]",
									"value": "",
									"disabled": true
								},
								{
									"key": "filter[managedStatus]",
									"value": "",
									"disabled": true
								},
								{
									"key": "filter[tags]",
									"value": "",
									"disabled": true
								},
								{
									"key": "filter[version]",
									"value": "",
									"disabled": true
								},
								{
									"key": "filter[policy]",
									"value": "",
									"disabled": true
								},
								{
									"key": "filter[platform]",
									"value": "",
									"disabled": true
								},
								{
									"key": "filter[unisolated]",
									"value": "",
									"disabled": true
								},
								{
									"key": "filter[includedEndpointIds]",
									"value": "",
									"disabled": true
								},
								{
									"key": "filter[lastSeenBefore]",
									"value": "",
									"description": "Example: 2023-03-06T21:00:00.000Z",
									"disabled": true
								},
								{
									"key": "filter[lastSeenAfter]",
									"value": "",
									"description": "Example: 2023-03-24T21:00:00.000Z",
									"disabled": true
								},
								{
									"key": "filter[lastSeenBetween]",
									"value": "",
									"disabled": true
								}
							]
						},
						"description": "### Parameters\n| **Name** | **Constraints** |\n| ---------------------------------------------------------------------------------------------- | ---------------------------------------------------------- |\n| **pageNumber** <br>number / optional                 | default value: 1 <br>min value:1               |\n| **pageSize** <br>number / optional                   | default value: 10 <br>min value:1              |\n| **sortBy** <br>string / optional                     | default value: createdAt                       |\n| **sortType** <br>string / optional                   | default value: ASC <br>valid values: ASC, DESC |\n| **filter[organizationIds]** <br>number array / required | |\n| **filter[searchTerm]** <br>string / optional | |\n| **filter[name]** <br>string / optional | |\n| **filter[ipAddress]** <br>string / optional | |\n| **filter[groupId]** <br>string / optional | |\n| **filter[groupFullPath]** <br>string / optional | |\n| **filter[label]** <br>string / optional | |\n| **filter[lastSeen]** <br>string / optional | Example: 2023-03-06T21:00:00.000Z,2023-03-24T21:00:00.000Z |\n| **filter[managedStatus]** <br>string array / optional | valid values: unmanaged, managed, off-network |\n| **filter[isolationStatus]** <br>string array / optional | valid values: isolating, isolated, unisolating, unisolated |\n| **filter[platform]** <br>string array / optional | valid values: windows, linux, darwin |\n| **filter[issue]** <br>string array / optional | valid values: unreachable, old-version, update-required |\n| **filter[onlineStatus]** <br>string array / optional | valid values: online, offline |\n| **filter[tags]** <br>string array / optional | |\n| **filter[version]** <br>string / optional | |\n| **filter[policy]** <br>string / optional | |\n| **filter[includedEndpointIds]** <br>string array / optional | |\n| **filter[excludedEndpointIds]** <br>string array / optional | |\n| **filter[awsRegions]** <br>string array / optional | |\n| **filter[azureRegions]** <br>string array / optional | |"
					},
					"response": [
						{
							"name": "Get Assets - 200 OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/{{apiPrefix}}/assets?filter[organizationIds]=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"{{apiPrefix}}",
										"assets"
									],
									"query": [
										{
											"key": "pageSize",
											"value": "100",
											"disabled": true
										},
										{
											"key": "pageNumber",
											"value": "1",
											"disabled": true
										},
										{
											"key": "sortBy",
											"value": "name",
											"disabled": true
										},
										{
											"key": "sortType",
											"value": "ASC",
											"disabled": true
										},
										{
											"key": "filter[searchTerm]",
											"value": "",
											"disabled": true
										},
										{
											"key": "filter[organizationIds]",
											"value": "0"
										},
										{
											"key": "filter[onlineStatus]",
											"value": "offline",
											"disabled": true
										},
										{
											"key": "filter[issue]",
											"value": "unreachable",
											"disabled": true
										},
										{
											"key": "filter[groupFullPath]",
											"value": "Computers",
											"disabled": true
										},
										{
											"key": "filter[groupId]",
											"value": "60d119fb-e740-441c-8ef1-dc86ab684231",
											"disabled": true
										},
										{
											"key": "filter[name]",
											"value": "PC-0",
											"disabled": true
										},
										{
											"key": "filter[ipAddress]",
											"value": "133",
											"disabled": true
										},
										{
											"key": "filter[managedStatus]",
											"value": "managed",
											"disabled": true
										},
										{
											"key": "filter[tags]",
											"value": "",
											"disabled": true
										},
										{
											"key": "filter[version]",
											"value": "2.5.9",
											"disabled": true
										},
										{
											"key": "filter[policy]",
											"value": "",
											"disabled": true
										},
										{
											"key": "filter[platform]",
											"value": "windows,linux",
											"disabled": true
										},
										{
											"key": "filter[unisolated]",
											"value": "unisolated",
											"disabled": true
										},
										{
											"key": "filter[includedEndpointIds]",
											"value": "",
											"disabled": true
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "5983"
								},
								{
									"key": "ETag",
									"value": "W/\"175f-lhFTwGmLhJVWKFPmSCFEdWbcfek\""
								},
								{
									"key": "Date",
									"value": "Sun, 22 May 2022 19:26:35 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"result\": {\n        \"entities\": [\n            {\n                \"platform\": \"windows\",\n                \"tags\": [],\n                \"isolationStatus\": \"unisolated\",\n                \"_id\": \"3758794d-9d18-424f-86c7-40a5c4d9f059\",\n                \"createdAt\": \"2022-05-22T19:05:54.260Z\",\n                \"updatedAt\": \"2022-05-22T19:05:54.260Z\",\n                \"organizationId\": 0,\n                \"ipAddress\": \"127.0.0.1\",\n                \"name\": \"Endpoint - 7\",\n                \"groupId\": \"e5a82e99-868b-4ae5-85f3-06f05b260824\",\n                \"groupFullPath\": \"Computers\",\n                \"os\": \"UBUNTU\",\n                \"isServer\": false,\n                \"isManaged\": true,\n                \"lastSeen\": \"2022-05-22T19:05:54.259Z\",\n                \"version\": \"2.8.0\",\n                \"versionNo\": 2008000,\n                \"registeredAt\": \"2022-05-22T19:05:54.259Z\",\n                \"securityToken\": \"3e0a8a60-a2e3-4d74-a3db-7fab6e505e80\",\n                \"onlineStatus\": \"offline\",\n                \"issues\": [\n                    \"update-required\"\n                ],\n                \"label\": null,\n                \"waitingForVersionUpdateFix\": true\n            },\n            {\n                \"platform\": \"windows\",\n                \"tags\": [],\n                \"isolationStatus\": \"unisolated\",\n                \"_id\": \"74c0a7a1-8409-40fc-8cf9-ae678878dc28\",\n                \"createdAt\": \"2022-05-22T19:05:52.496Z\",\n                \"updatedAt\": \"2022-05-22T19:05:52.496Z\",\n                \"organizationId\": 0,\n                \"ipAddress\": \"127.0.0.1\",\n                \"name\": \"Endpoint - 7\",\n                \"groupId\": \"e5a82e99-868b-4ae5-85f3-06f05b260824\",\n                \"groupFullPath\": \"Computers\",\n                \"os\": \"UBUNTU\",\n                \"isServer\": false,\n                \"isManaged\": true,\n                \"lastSeen\": \"2022-05-22T19:05:52.495Z\",\n                \"version\": \"2.8.0\",\n                \"versionNo\": 2008000,\n                \"registeredAt\": \"2022-05-22T19:05:52.496Z\",\n                \"securityToken\": \"5f94c57c-81bf-4007-9f36-95302a64851c\",\n                \"onlineStatus\": \"offline\",\n                \"issues\": [\n                    \"update-required\"\n                ],\n                \"label\": null,\n                \"waitingForVersionUpdateFix\": false\n            },\n            {\n                \"platform\": \"windows\",\n                \"tags\": [],\n                \"isolationStatus\": \"unisolated\",\n                \"_id\": \"a862ace2-d789-4945-98cc-ea529b2837d9\",\n                \"createdAt\": \"2022-05-22T18:38:43.825Z\",\n                \"updatedAt\": \"2022-05-22T19:15:14.354Z\",\n                \"organizationId\": 0,\n                \"ipAddress\": \"127.0.0.1\",\n                \"name\": \"Endpoint - 6\",\n                \"groupId\": \"e5a82e99-868b-4ae5-85f3-06f05b260824\",\n                \"groupFullPath\": \"Computers\",\n                \"label\": \"Web Server\",\n                \"os\": \"UBUNTU\",\n                \"isServer\": false,\n                \"isManaged\": true,\n                \"lastSeen\": \"2022-05-22T18:38:43.825Z\",\n                \"version\": \"2.9.0\",\n                \"versionNo\": 2009000,\n                \"registeredAt\": \"2022-05-22T18:38:43.825Z\",\n                \"securityToken\": \"6c9c2564-4f33-47e0-8576-149b49bb67b8\",\n                \"onlineStatus\": \"offline\",\n                \"issues\": [],\n                \"waitingForVersionUpdateFix\": false\n            },\n            {\n                \"platform\": \"windows\",\n                \"tags\": [],\n                \"isolationStatus\": \"isolating\",\n                \"_id\": \"9b890244-809c-415a-8e56-301be2aefe83\",\n                \"createdAt\": \"2022-05-22T18:38:40.788Z\",\n                \"updatedAt\": \"2022-05-22T18:38:40.788Z\",\n                \"organizationId\": 0,\n                \"ipAddress\": \"127.0.0.1\",\n                \"name\": \"Endpoint - 5\",\n                \"groupId\": \"e5a82e99-868b-4ae5-85f3-06f05b260824\",\n                \"groupFullPath\": \"Computers\",\n                \"os\": \"UBUNTU\",\n                \"isServer\": false,\n                \"isManaged\": true,\n                \"lastSeen\": \"2022-05-22T18:38:40.787Z\",\n                \"version\": \"2.9.0\",\n                \"versionNo\": 2009000,\n                \"registeredAt\": \"2022-05-22T18:38:40.788Z\",\n                \"securityToken\": \"beb32782-e2b5-4a3e-b082-ae24314b1ef2\",\n                \"onlineStatus\": \"offline\",\n                \"issues\": [],\n                \"label\": null,\n                \"waitingForVersionUpdateFix\": false\n            },\n            {\n                \"platform\": \"windows\",\n                \"tags\": [],\n                \"isolationStatus\": \"unisolated\",\n                \"_id\": \"bc906dea-f92d-46b3-87f2-a2fc36667f70\",\n                \"createdAt\": \"2022-05-22T18:38:38.804Z\",\n                \"updatedAt\": \"2022-05-22T18:38:38.804Z\",\n                \"organizationId\": 0,\n                \"ipAddress\": \"127.0.0.1\",\n                \"name\": \"Endpoint - 2\",\n                \"groupId\": \"e5a82e99-868b-4ae5-85f3-06f05b260824\",\n                \"groupFullPath\": \"Computers\",\n                \"os\": \"UBUNTU\",\n                \"isServer\": false,\n                \"isManaged\": true,\n                \"lastSeen\": \"2022-05-22T18:38:38.803Z\",\n                \"version\": \"2.9.0\",\n                \"versionNo\": 2009000,\n                \"registeredAt\": \"2022-05-22T18:38:38.804Z\",\n                \"securityToken\": \"e6f9a298-a895-4085-8a0e-76e2eea899e9\",\n                \"onlineStatus\": \"offline\",\n                \"issues\": [],\n                \"label\": null,\n                \"waitingForVersionUpdateFix\": false\n            },\n            {\n                \"platform\": \"windows\",\n                \"tags\": [],\n                \"isolationStatus\": \"unisolated\",\n                \"_id\": \"ea200722-f211-465e-8ced-01be698aa035\",\n                \"createdAt\": \"2022-05-22T18:38:38.306Z\",\n                \"updatedAt\": \"2022-05-22T18:38:38.306Z\",\n                \"organizationId\": 0,\n                \"ipAddress\": \"127.0.0.1\",\n                \"name\": \"Endpoint - 1\",\n                \"groupId\": \"e5a82e99-868b-4ae5-85f3-06f05b260824\",\n                \"groupFullPath\": \"Computers\",\n                \"os\": \"UBUNTU\",\n                \"isServer\": false,\n                \"isManaged\": true,\n                \"lastSeen\": \"2022-05-22T18:38:38.305Z\",\n                \"version\": \"2.9.0\",\n                \"versionNo\": 2009000,\n                \"registeredAt\": \"2022-05-22T18:38:38.306Z\",\n                \"securityToken\": \"3449fd60-052d-470d-b595-f1bc20ad5268\",\n                \"onlineStatus\": \"offline\",\n                \"issues\": [],\n                \"label\": null,\n                \"waitingForVersionUpdateFix\": false\n            },\n            {\n                \"platform\": \"windows\",\n                \"tags\": [],\n                \"isolationStatus\": \"unisolated\",\n                \"_id\": \"0ccbb181-685c-4f1e-982a-6f7c7e88eadd\",\n                \"createdAt\": \"2022-05-22T18:38:35.672Z\",\n                \"updatedAt\": \"2022-05-22T18:38:35.672Z\",\n                \"organizationId\": 0,\n                \"ipAddress\": \"127.0.0.1\",\n                \"name\": \"Endpoint - 4\",\n                \"groupId\": \"e5a82e99-868b-4ae5-85f3-06f05b260824\",\n                \"groupFullPath\": \"Computers\",\n                \"os\": \"UBUNTU\",\n                \"isServer\": false,\n                \"isManaged\": true,\n                \"lastSeen\": \"2022-05-22T18:38:35.671Z\",\n                \"version\": \"2.9.0\",\n                \"versionNo\": 2009000,\n                \"registeredAt\": \"2022-05-22T18:38:35.672Z\",\n                \"securityToken\": \"92c60f26-3e15-404c-8f6a-dbc81d12938d\",\n                \"onlineStatus\": \"offline\",\n                \"issues\": [],\n                \"label\": null,\n                \"waitingForVersionUpdateFix\": false\n            }\n        ],\n        \"filters\": [\n            {\n                \"name\": \"name\",\n                \"type\": \"text\",\n                \"options\": [],\n                \"filterUrl\": null\n            },\n            {\n                \"name\": \"label\",\n                \"type\": \"text\",\n                \"options\": [],\n                \"filterUrl\": null\n            },\n            {\n                \"name\": \"ipAddress\",\n                \"type\": \"text\",\n                \"options\": [],\n                \"filterUrl\": null\n            },\n            {\n                \"name\": \"version\",\n                \"type\": \"text\",\n                \"options\": [],\n                \"filterUrl\": null\n            },\n            {\n                \"name\": \"managedStatus\",\n                \"type\": \"checkbox\",\n                \"options\": [\n                    \"unmanaged\",\n                    \"managed\"\n                ],\n                \"filterUrl\": null\n            },\n            {\n                \"name\": \"isolationStatus\",\n                \"type\": \"checkbox\",\n                \"options\": [\n                    \"isolating\",\n                    \"isolated\",\n                    \"unisolating\",\n                    \"unisolated\"\n                ],\n                \"filterUrl\": null\n            },\n            {\n                \"name\": \"onlineStatus\",\n                \"type\": \"checkbox\",\n                \"options\": [\n                    \"online\",\n                    \"offline\"\n                ],\n                \"filterUrl\": null\n            },\n            {\n                \"name\": \"issue\",\n                \"type\": \"radio\",\n                \"options\": [\n                    \"unreachable\",\n                    \"old-version\",\n                    \"update-required\"\n                ],\n                \"filterUrl\": null\n            },\n            {\n                \"name\": \"platform\",\n                \"type\": \"checkbox\",\n                \"options\": [\n                    \"windows\",\n                    \"linux\"\n                ],\n                \"filterUrl\": null\n            },\n            {\n                \"name\": \"groupFullPath\",\n                \"type\": \"text\",\n                \"options\": [],\n                \"filterUrl\": null\n            },\n            {\n                \"name\": \"tags\",\n                \"type\": \"checkbox\",\n                \"options\": [\n                    \"Domain Controller\",\n                    \"IIS Web Server\",\n                    \"Web Server\",\n                    \"Mail Server\",\n                    \"MSSQL Server\",\n                    \"Docker\",\n                    \"Kubernetes\",\n                    \"Apache\",\n                    \"Redis\",\n                    \"Mysql\",\n                    \"Rabbitmq\"\n                ],\n                \"filterUrl\": null\n            },\n            {\n                \"name\": \"organizationIds\",\n                \"type\": \"checkbox\",\n                \"options\": [\n                    {\n                        \"label\": \"myorg\",\n                        \"value\": 0\n                    }\n                ],\n                \"filterUrl\": null\n            },\n            {\n                \"name\": \"policy\",\n                \"type\": \"checkbox\",\n                \"options\": [\n                    \"Default Policy\",\n                    \"DC Policy\",\n                    \"asdsad\",\n                    \"new\",\n                    \"Mail Servers\",\n                    \"test\"\n                ],\n                \"filterUrl\": null\n            }\n        ],\n        \"sortables\": [\n            \"name\",\n            \"isManaged\",\n            \"ipAddress\",\n            \"lastSeen\",\n            \"version\"\n        ],\n        \"totalEntityCount\": 7,\n        \"currentPage\": 1,\n        \"pageSize\": 10,\n        \"previousPage\": 0,\n        \"totalPageCount\": 1,\n        \"nextPage\": 2\n    },\n    \"statusCode\": 200,\n    \"errors\": []\n}"
						},
						{
							"name": "Get Assets without Organization ID - 400 Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/{{apiPrefix}}/assets",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"{{apiPrefix}}",
										"assets"
									],
									"query": [
										{
											"key": "pageSize",
											"value": "100",
											"disabled": true
										},
										{
											"key": "pageNumber",
											"value": "1",
											"disabled": true
										},
										{
											"key": "sortBy",
											"value": "name",
											"disabled": true
										},
										{
											"key": "sortType",
											"value": "ASC",
											"disabled": true
										},
										{
											"key": "filter[searchTerm]",
											"value": "",
											"disabled": true
										},
										{
											"key": "filter[organizationIds]",
											"value": "0",
											"disabled": true
										},
										{
											"key": "filter[onlineStatus]",
											"value": "offline",
											"disabled": true
										},
										{
											"key": "filter[issue]",
											"value": "unreachable",
											"disabled": true
										},
										{
											"key": "filter[groupFullPath]",
											"value": "All Endpoints\\Computers",
											"disabled": true
										},
										{
											"key": "filter[groupId]",
											"value": "60d119fb-e740-441c-8ef1-dc86ab684231",
											"disabled": true
										},
										{
											"key": "filter[name]",
											"value": "PC-0",
											"disabled": true
										},
										{
											"key": "filter[ipAddress]",
											"value": "133",
											"disabled": true
										},
										{
											"key": "filter[managedStatus]",
											"value": "managed",
											"disabled": true
										},
										{
											"key": "filter[tags]",
											"value": "",
											"disabled": true
										},
										{
											"key": "filter[version]",
											"value": "2.5.9",
											"disabled": true
										},
										{
											"key": "filter[policy]",
											"value": "",
											"disabled": true
										},
										{
											"key": "filter[platform]",
											"value": "windows,linux",
											"disabled": true
										},
										{
											"key": "filter[unisolated]",
											"value": "unisolated",
											"disabled": true
										},
										{
											"key": "filter[includedEndpointIds]",
											"value": "",
											"disabled": true
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "100"
								},
								{
									"key": "ETag",
									"value": "W/\"64-0dZahibur8gfpdjDGd/+kpCpojg\""
								},
								{
									"key": "Date",
									"value": "Sun, 22 May 2022 19:27:00 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"errors\": [\n        \"'organizationIds' should not be empty.\"\n    ],\n    \"statusCode\": 400,\n    \"result\": null\n}"
						}
					]
				},
				{
					"name": "Get Asset by Id",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.runForTest(() => {",
									"    pm.request.url.variables.add({",
									"        key: 'id', value: pm.collectionVariables.get('endpointId')",
									"    })",
									"})"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/{{apiPrefix}}/assets/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"{{apiPrefix}}",
								"assets",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "",
									"description": "Endpoint ID"
								}
							]
						}
					},
					"response": [
						{
							"name": "Get Asset by Id",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/{{apiPrefix}}/assets/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"{{apiPrefix}}",
										"assets",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "bc906dea-f92d-46b3-87f2-a2fc36667f70",
											"description": "Endpoint ID"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "703"
								},
								{
									"key": "ETag",
									"value": "W/\"2bf-fxatmGOgkVT7TvE3va3XWRKsH9o\""
								},
								{
									"key": "Date",
									"value": "Sun, 22 May 2022 19:25:47 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"result\": {\n        \"platform\": \"windows\",\n        \"tags\": [],\n        \"isolationStatus\": \"unisolated\",\n        \"_id\": \"bc906dea-f92d-46b3-87f2-a2fc36667f70\",\n        \"createdAt\": \"2022-05-22T18:38:38.804Z\",\n        \"updatedAt\": \"2022-05-22T18:38:38.804Z\",\n        \"organizationId\": 0,\n        \"ipAddress\": \"127.0.0.1\",\n        \"name\": \"Endpoint - 2\",\n        \"groupId\": \"e5a82e99-868b-4ae5-85f3-06f05b260824\",\n        \"groupFullPath\": \"Computers\",\n        \"os\": \"Ubuntu\",\n        \"isServer\": false,\n        \"isManaged\": true,\n        \"lastSeen\": \"2022-05-22T18:38:38.803Z\",\n        \"version\": \"2.9.0\",\n        \"versionNo\": 2009000,\n        \"registeredAt\": \"2022-05-22T18:38:38.804Z\",\n        \"securityToken\": \"e6f9a298-a895-4085-8a0e-76e2eea899e9\",\n        \"onlineStatus\": \"offline\",\n        \"issues\": [],\n        \"label\": null,\n        \"waitingForVersionUpdateFix\": false,\n        \"policies\": []\n    },\n    \"statusCode\": 200,\n    \"errors\": []\n}"
						},
						{
							"name": "Get Asset by Id - 404 Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/{{apiPrefix}}/assets/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"{{apiPrefix}}",
										"assets",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "bc906dea-f92d-46b3-87f2-a2fc36667f70a",
											"description": "Endpoint ID"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "100"
								},
								{
									"key": "ETag",
									"value": "W/\"64-azrSR08dm3x2Kb54usGRko3OeVA\""
								},
								{
									"key": "Date",
									"value": "Sun, 22 May 2022 19:26:20 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"errors\": [\n        \"No endpoint(s) found by provided id(s)\"\n    ],\n    \"statusCode\": 404,\n    \"result\": null\n}"
						}
					]
				},
				{
					"name": "Get Asset Tasks by Id",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.runForTest(() => {",
									"    pm.request.url.variables.add({",
									"        key: 'id', value: pm.collectionVariables.get('endpointId')",
									"    })",
									"})"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/{{apiPrefix}}/assets/:id/tasks",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"{{apiPrefix}}",
								"assets",
								":id",
								"tasks"
							],
							"query": [
								{
									"key": "pageNumber",
									"value": "",
									"description": "Which page of results to return",
									"disabled": true
								},
								{
									"key": "pageSize",
									"value": "",
									"description": "How many results to return per page",
									"disabled": true
								},
								{
									"key": "sortBy",
									"value": "",
									"description": "Attribute name to order the responses by",
									"disabled": true
								},
								{
									"key": "sortType",
									"value": "",
									"description": "Either ASC or DESC",
									"disabled": true
								},
								{
									"key": "filter[searchTerm]",
									"value": "",
									"disabled": true
								},
								{
									"key": "filter[status]",
									"value": "",
									"disabled": true
								},
								{
									"key": "filter[type]",
									"value": "",
									"disabled": true
								},
								{
									"key": "filter[executionType]",
									"value": "",
									"disabled": true
								},
								{
									"key": "filter[hasDroneData]",
									"value": "",
									"description": "yes, no",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "",
									"description": "Endpoint ID"
								}
							]
						},
						"description": "### Parameters\n\n| **Name**                                        | **Constraints**                                                                                                                                                 |\n| ----------------------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| **pageNumber** <br>number / optional            | default value: 1 <br>min value:1                                                                                                                                |\n| **pageSize** <br>number / optional              | default value: 10 <br>min value:1                                                                                                                               |\n| **sortBy** <br>string / optional                | default value: createdAt                                                                                                                                        |\n| **sortType** <br>string / optional              | default value: ASC <br>valid values: ASC, DESC                                                                                                                  |\n| **filter[searchTerm]** <br>string / optional    |                                                                                                                                                                 |\n| **filter[name]** <br>string / optional          |                                                                                                                                                                 |\n| **filter[endpointIds]** <br>string / optional   |                                                                                                                                                                 |\n| **filter[executionType]** <br>string / optional | valid values: instant, scheduled                                                                                                                                |\n| **filter[status]** <br>string / optional        | valid values: scheduled, assigned, processing, completed, failed, expired, cancelled, compressing, uploading, analyzing, partially-completed                    |\n| **filter[type]** <br>string / optional          | valid values: acquisition, offline-acquisition, triage, offline-triage, investigation, interact-shell, baseline-comparison, baseline-acquisition, acquire-image |"
					},
					"response": [
						{
							"name": "Get Asset Tasks by ID - 200 OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/{{apiPrefix}}/assets/:id/tasks",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"{{apiPrefix}}",
										"assets",
										":id",
										"tasks"
									],
									"query": [
										{
											"key": "pageNumber",
											"value": "1",
											"disabled": true
										},
										{
											"key": "pageSize",
											"value": "10",
											"disabled": true
										},
										{
											"key": "sortBy",
											"value": "createdAt",
											"disabled": true
										},
										{
											"key": "sortType",
											"value": "ASC",
											"disabled": true
										},
										{
											"key": "filter[searchTerm]",
											"value": "with",
											"disabled": true
										},
										{
											"key": "filter[status]",
											"value": "completed",
											"disabled": true
										},
										{
											"key": "filter[type]",
											"value": "reboot",
											"disabled": true
										},
										{
											"key": "filter[executionType]",
											"value": "instant",
											"disabled": true
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "bc906dea-f92d-46b3-87f2-a2fc36667f70",
											"description": "Endpoint ID"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "2108"
								},
								{
									"key": "ETag",
									"value": "W/\"83c-Ca5YS847+R8Z5iQctPxEKSyk/vU\""
								},
								{
									"key": "Date",
									"value": "Sun, 22 May 2022 19:24:57 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"result\": {\n        \"entities\": [\n            {\n                \"_id\": \"1e18c426-b00a-44d1-9102-faa80b594fd0\",\n                \"taskId\": \"b6f54dbc-3b3f-46cd-8489-911c50a1038b\",\n                \"name\": \"Example Case Acquisition 002\",\n                \"type\": \"acquisition\",\n                \"endpointId\": \"bc906dea-f92d-46b3-87f2-a2fc36667f70\",\n                \"endpointName\": \"Endpoint - 2\",\n                \"organizationId\": 0,\n                \"status\": \"assigned\",\n                \"recurrence\": null,\n                \"progress\": 0,\n                \"duration\": null,\n                \"caseIds\": [\n                    \"C-2022-0001\"\n                ],\n                \"createdAt\": \"2022-05-22T19:24:50.152Z\",\n                \"updatedAt\": \"2022-05-22T19:24:50.152Z\",\n                \"response\": null\n            },\n            {\n                \"_id\": \"dfbcdd26-6c74-4de4-8704-bf5d48b90722\",\n                \"taskId\": \"797d171f-0aed-4703-a39c-76637eaa33b6\",\n                \"name\": \"Example Case Acquisition 001\",\n                \"type\": \"acquisition\",\n                \"endpointId\": \"bc906dea-f92d-46b3-87f2-a2fc36667f70\",\n                \"endpointName\": \"Endpoint - 2\",\n                \"organizationId\": 0,\n                \"status\": \"assigned\",\n                \"recurrence\": null,\n                \"progress\": 0,\n                \"duration\": null,\n                \"caseIds\": [\n                    \"C-2022-0001\"\n                ],\n                \"createdAt\": \"2022-05-22T19:24:43.834Z\",\n                \"updatedAt\": \"2022-05-22T19:24:43.834Z\",\n                \"response\": null\n            },\n            {\n                \"_id\": \"45f5bfeb-e503-4123-80f0-422229b1b097\",\n                \"taskId\": \"e3fd7be3-c9b3-4bb2-8db3-540925142b25\",\n                \"name\": \"Auto Tagging 003\",\n                \"type\": \"auto-tagging\",\n                \"endpointId\": \"bc906dea-f92d-46b3-87f2-a2fc36667f70\",\n                \"endpointName\": \"Endpoint - 2\",\n                \"organizationId\": 0,\n                \"status\": \"assigned\",\n                \"recurrence\": null,\n                \"progress\": 0,\n                \"duration\": null,\n                \"caseIds\": null,\n                \"createdAt\": \"2022-05-22T18:38:38.855Z\",\n                \"updatedAt\": \"2022-05-22T18:38:38.855Z\",\n                \"response\": null\n            }\n        ],\n        \"filters\": [\n            {\n                \"name\": \"type\",\n                \"type\": \"checkbox\",\n                \"options\": [\n                    \"triage\",\n                    \"acquisition\",\n                    \"shutdown\",\n                    \"reboot\",\n                    \"uninstall\",\n                    \"isolation\",\n                    \"cancel\",\n                    \"investigation\",\n                    \"log-retrieval\",\n                    \"auto-tagging\",\n                    \"version-update\",\n                    \"offline-acquisition\",\n                    \"migration\",\n                    \"interact-shell\"\n                ],\n                \"filterUrl\": null\n            },\n            {\n                \"name\": \"status\",\n                \"type\": \"checkbox\",\n                \"options\": [\n                    \"scheduled\",\n                    \"assigned\",\n                    \"processing\",\n                    \"completed\",\n                    \"failed\",\n                    \"expired\",\n                    \"cancelled\",\n                    \"compressing\",\n                    \"uploading\",\n                    \"analyzing\",\n                    \"partially-completed\"\n                ],\n                \"filterUrl\": null\n            },\n            {\n                \"name\": \"executionType\",\n                \"type\": \"checkbox\",\n                \"options\": [\n                    \"instant\",\n                    \"scheduled\"\n                ],\n                \"filterUrl\": null\n            }\n        ],\n        \"sortables\": [\n            \"name\",\n            \"type\",\n            \"status\",\n            \"progress\",\n            \"duration\",\n            \"createdAt\"\n        ],\n        \"totalEntityCount\": 3,\n        \"currentPage\": 1,\n        \"pageSize\": 10,\n        \"previousPage\": 0,\n        \"totalPageCount\": 1,\n        \"nextPage\": 2\n    },\n    \"statusCode\": 200,\n    \"errors\": []\n}"
						},
						{
							"name": "Get Asset Tasks by ID - 404 Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/{{apiPrefix}}/assets/:id/tasks",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"{{apiPrefix}}",
										"assets",
										":id",
										"tasks"
									],
									"query": [
										{
											"key": "pageNumber",
											"value": "1",
											"disabled": true
										},
										{
											"key": "pageSize",
											"value": "10",
											"disabled": true
										},
										{
											"key": "sortBy",
											"value": "createdAt",
											"disabled": true
										},
										{
											"key": "sortType",
											"value": "ASC",
											"disabled": true
										},
										{
											"key": "filter[searchTerm]",
											"value": "with",
											"disabled": true
										},
										{
											"key": "filter[status]",
											"value": "completed",
											"disabled": true
										},
										{
											"key": "filter[type]",
											"value": "reboot",
											"disabled": true
										},
										{
											"key": "filter[executionType]",
											"value": "instant",
											"disabled": true
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "bc906dea-f92d-46b3-87f2-a2fc36667f70a",
											"description": "Endpoint ID"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "100"
								},
								{
									"key": "ETag",
									"value": "W/\"64-azrSR08dm3x2Kb54usGRko3OeVA\""
								},
								{
									"key": "Date",
									"value": "Sun, 22 May 2022 19:25:13 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"errors\": [\n        \"No endpoint(s) found by provided id(s)\"\n    ],\n    \"statusCode\": 404,\n    \"result\": null\n}"
						}
					]
				},
				{
					"name": "Uninstall Assets without Purge by Filter",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.runForTest(() => {",
									"    const payload = JSON.parse(pm.request.body.raw)",
									"    payload.filter.includedEndpointIds = [",
									"        pm.collectionVariables.get('endpointId')",
									"    ]",
									"    pm.request.body.raw = JSON.stringify(payload)",
									"})"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"filter\": {\n        \"searchTerm\": \"\",\n        \"name\": \"\",\n        \"ipAddress\": \"\",\n        \"groupId\": \"\",\n        \"groupFullPath\": \"\",\n        \"managedStatus\": [],\n        \"isolationStatus\": [],\n        \"platform\": [],\n        \"issue\": \"\",\n        \"onlineStatus\": [],\n        \"tagId\": \"\",\n        \"version\": \"\",\n        \"policy\": \"\",\n        \"includedEndpointIds\": [\"endpoint-id\"],\n        \"excludedEndpointIds\": [],\n        \"organizationIds\": [\n            0\n        ]\n    }\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/{{apiPrefix}}/assets/uninstall-without-purge",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"{{apiPrefix}}",
								"assets",
								"uninstall-without-purge"
							]
						},
						"description": "### Parameters\n| **Name** | **Constraints** |\n| ---------------------------------------------------------------------------------------------- | ---------------------------------------------------------- |\n| **filter.organizationIds** <br>number array / required | |\n| **filter.searchTerm** <br>string / optional | |\n| **filter.name** <br>string / optional | |\n| **filter.ipAddress** <br>string / optional | |\n| **filter.groupId** <br>string / optional | |\n| **filter.groupFullPath** <br>string / optional | |\n| **filter.label** <br>string / optional | |\n| **filter.lastSeen** <br>string / optional | Example: 2023-03-06T21:00:00.000Z,2023-03-24T21:00:00.000Z |\n| **filter.managedStatus** <br>string array / optional | valid values: unmanaged, managed, off-network |\n| **filter.isolationStatus** <br>string array / optional | valid values: isolating, isolated, unisolating, unisolated |\n| **filter.platform** <br>string array / optional | valid values: windows, linux, darwin |\n| **filter.issue** <br>string array / optional | valid values: unreachable, old-version, update-required |\n| **filter.onlineStatus** <br>string array / optional | valid values: online, offline |\n| **filter.tags** <br>string array / optional | |\n| **filter.version** <br>string / optional | |\n| **filter.policy** <br>string / optional | |\n| **filter.includedEndpointIds** <br>string array / optional | |\n| **filter.excludedEndpointIds** <br>string array / optional | |\n| **filter.caseId** <br>string / optional | |\n| **filter.awsRegions** <br>string array / optional | |\n| **filter.azureRegions** <br>string array / optional | |"
					},
					"response": [
						{
							"name": "Uninstall Assets without Purge by Filter - 200 OK",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"filter\": {\n        \"searchTerm\": \"\",\n        \"name\": \"\",\n        \"ipAddress\": \"\",\n        \"groupId\": \"\",\n        \"groupFullPath\": \"\",\n        \"managedStatus\": [],\n        \"isolationStatus\": [],\n        \"platform\": [],\n        \"issue\": \"\",\n        \"onlineStatus\": [],\n        \"tagId\": \"\",\n        \"version\": \"\",\n        \"policy\": \"\",\n        \"includedEndpointIds\": [\"endpoint-id\"],\n        \"excludedEndpointIds\": [],\n        \"organizationIds\": [\n            0\n        ]\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/{{apiPrefix}}/assets/uninstall-without-purge",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"{{apiPrefix}}",
										"assets",
										"uninstall-without-purge"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "59"
								},
								{
									"key": "ETag",
									"value": "W/\"3b-MHtur75ftUyQ2IfDqFjH6SAxAM4\""
								},
								{
									"key": "Date",
									"value": "Sun, 22 May 2022 19:21:54 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"result\": null,\n    \"statusCode\": 200,\n    \"errors\": []\n}"
						},
						{
							"name": "Uninstall Assets without Purge by Filter - 404 Not Found",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"filter\": {\n        \"searchTerm\": \"\",\n        \"name\": \"\",\n        \"ipAddress\": \"\",\n        \"groupId\": \"\",\n        \"groupFullPath\": \"\",\n        \"managedStatus\": [],\n        \"isolationStatus\": [],\n        \"platform\": [],\n        \"issue\": \"\",\n        \"onlineStatus\": [],\n        \"tagId\": \"\",\n        \"version\": \"\",\n        \"policy\": \"\",\n        \"includedEndpointIds\": [\"endpoint-id\"],\n        \"excludedEndpointIds\": [],\n        \"organizationIds\": [\n            0\n        ]\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/{{apiPrefix}}/assets/uninstall-without-purge",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"{{apiPrefix}}",
										"assets",
										"uninstall-without-purge"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "100"
								},
								{
									"key": "ETag",
									"value": "W/\"64-azrSR08dm3x2Kb54usGRko3OeVA\""
								},
								{
									"key": "Date",
									"value": "Sun, 22 May 2022 19:22:31 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"errors\": [\n        \"No endpoint(s) found by provided id(s)\"\n    ],\n    \"statusCode\": 404,\n    \"result\": null\n}"
						}
					]
				},
				{
					"name": "Purge and Uninstall Assets by Filter",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.runForTest(() => {",
									"    const payload = JSON.parse(pm.request.body.raw)",
									"    payload.filter.includedEndpointIds = [",
									"        pm.collectionVariables.get('endpointId')",
									"    ]",
									"    pm.request.body.raw = JSON.stringify(payload)",
									"})"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.collectionVariables.unset('endpointId')",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"filter\": {\n        \"searchTerm\": \"\",\n        \"name\": \"\",\n        \"ipAddress\": \"\",\n        \"groupId\": \"\",\n        \"groupFullPath\": \"\",\n        \"managedStatus\": [],\n        \"isolationStatus\": [],\n        \"platform\": [],\n        \"issue\": \"\",\n        \"onlineStatus\": [],\n        \"tagId\": \"\",\n        \"version\": \"\",\n        \"policy\": \"\",\n        \"includedEndpointIds\": [\"endpoint-id\"],\n        \"excludedEndpointIds\": [],\n        \"organizationIds\": [\n            0\n        ]\n    }\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/{{apiPrefix}}/assets/purge-and-uninstall",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"{{apiPrefix}}",
								"assets",
								"purge-and-uninstall"
							]
						},
						"description": "### Parameters\n\n| **Name** | **Constraints** |\n| --- | --- |\n| **filter.organizationIds**  <br>number array / required |  |\n| **filter.searchTerm**  <br>string / optional |  |\n| **filter.name**  <br>string / optional |  |\n| **filter.ipAddress**  <br>string / optional |  |\n| **filter.groupId**  <br>string / optional |  |\n| **filter.groupFullPath**  <br>string / optional |  |\n| **filter.label**  <br>string / optional |  |\n| **filter.lastSeen**  <br>string / optional | Example: 2023-03-06T21:00:00.000Z,2023-03-24T21:00:00.000Z |\n| **filter.managedStatus**  <br>string array / optional | valid values: unmanaged, managed, off-network |\n| **filter.isolationStatus**  <br>string array / optional | valid values: isolating, isolated, unisolating, unisolated |\n| **filter.platform**  <br>string array / optional | valid values: windows, linux, darwin |\n| **filter.issue**  <br>string array / optional | valid values: unreachable, old-version, update-required |\n| **filter.onlineStatus**  <br>string array / optional | valid values: online, offline |\n| **filter.tags**  <br>string array / optional |  |\n| **filter.version**  <br>string / optional |  |\n| **filter.policy**  <br>string / optional |  |\n| **filter.includedEndpointIds**  <br>string array / optional |  |\n| **filter.excludedEndpointIds**  <br>string array / optional |  |\n| **filter.caseId**  <br>string / optional |  |\n| **filter.awsRegions**  <br>string array / optional |  |\n| **filter.azureRegions**  <br>string array / optional |  |"
					},
					"response": [
						{
							"name": "Purge and Uninstall Assets by Filter - 200 OK",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"filter\": {\n        \"searchTerm\": \"\",\n        \"name\": \"\",\n        \"ipAddress\": \"\",\n        \"groupId\": \"\",\n        \"groupFullPath\": \"\",\n        \"managedStatus\": [],\n        \"isolationStatus\": [],\n        \"platform\": [],\n        \"issue\": \"\",\n        \"onlineStatus\": [],\n        \"tagId\": \"\",\n        \"version\": \"\",\n        \"policy\": \"\",\n        \"includedEndpointIds\": [\"9b890244-809c-415a-8e56-301be2aefe\"],\n        \"excludedEndpointIds\": [],\n        \"organizationIds\": [\n            0\n        ]\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/{{apiPrefix}}/assets/purge-and-uninstall",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"{{apiPrefix}}",
										"assets",
										"purge-and-uninstall"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "59"
								},
								{
									"key": "ETag",
									"value": "W/\"3b-MHtur75ftUyQ2IfDqFjH6SAxAM4\""
								},
								{
									"key": "Date",
									"value": "Sun, 22 May 2022 19:23:08 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"result\": null,\n    \"statusCode\": 200,\n    \"errors\": []\n}"
						}
					]
				},
				{
					"name": "Add Tags to Asset by Filter",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"filter\": {\n        \"name\": \"\",\n        \"searchTerm\": \"\",\n        \"ipAddress\": \"\",\n        \"groupId\": \"\",\n        \"groupFullPath\": \"\",\n        \"managedStatus\": [],\n        \"isolationStatus\": [],\n        \"platform\": [],\n        \"issue\": \"\",\n        \"onlineStatus\": [],\n        \"tags\": [],\n        \"version\": \"\",\n        \"policy\": \"\",\n        \"includedEndpointIds\": [\n            \"d169d2ee-aad3-47f0-bd1d-6c1829195201\"\n        ],\n        \"excludedEndpointIds\": [],\n        \"organizationIds\": [\n            0\n        ]\n    },\n    \"tags\": [\n        \"tag1\"\n    ]\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/{{apiPrefix}}/assets/tags",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"{{apiPrefix}}",
								"assets",
								"tags"
							]
						}
					},
					"response": [
						{
							"name": "200 OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"filter\": {\n        \"name\": \"\",\n        \"searchTerm\": \"\",\n        \"ipAddress\": \"\",\n        \"groupId\": \"\",\n        \"groupFullPath\": \"\",\n        \"managedStatus\": [],\n        \"isolationStatus\": [],\n        \"platform\": [],\n        \"issue\": \"\",\n        \"onlineStatus\": [],\n        \"tags\": [],\n        \"version\": \"\",\n        \"policy\": \"\",\n        \"includedEndpointIds\": [\n            \"d169d2ee-aad3-47f0-bd1d-6c1829195201\"\n        ],\n        \"excludedEndpointIds\": [],\n        \"organizationIds\": [\n            0\n        ]\n    },\n    \"tags\": [\n        \"tag1\"\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/{{apiPrefix}}/endpoints/tags",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"{{apiPrefix}}",
										"endpoints",
										"tags"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "nginx"
								},
								{
									"key": "Date",
									"value": "Wed, 24 Jan 2024 06:37:03 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "59"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "ETag",
									"value": "W/\"3b-MHtur75ftUyQ2IfDqFjH6SAxAM4\""
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"result\": null,\n    \"statusCode\": 200,\n    \"errors\": []\n}"
						}
					]
				},
				{
					"name": "Remove Tags from Asset by Filter",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"filter\": {\n        \"name\": \"\",\n        \"searchTerm\": \"\",\n        \"ipAddress\": \"\",\n        \"groupId\": \"\",\n        \"groupFullPath\": \"\",\n        \"managedStatus\": [\n            \"managed\"\n        ],\n        \"isolationStatus\": [],\n        \"platform\": [],\n        \"issue\": \"\",\n        \"onlineStatus\": [],\n        \"tags\": [],\n        \"version\": \"\",\n        \"policy\": \"\",\n        \"includedEndpointIds\": [\n            \"d169d2ee-aad3-47f0-bd1d-6c1829195201\"\n        ],\n        \"excludedEndpointIds\": [],\n        \"organizationIds\": [\n            0\n        ]\n    },\n    \"tags\": [\n        \"tag1\"\n    ]\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/{{apiPrefix}}/assets/tags",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"{{apiPrefix}}",
								"assets",
								"tags"
							]
						}
					},
					"response": [
						{
							"name": "200 OK",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"filter\": {\n        \"name\": \"\",\n        \"searchTerm\": \"\",\n        \"ipAddress\": \"\",\n        \"groupId\": \"\",\n        \"groupFullPath\": \"\",\n        \"managedStatus\": [\n            \"managed\"\n        ],\n        \"isolationStatus\": [],\n        \"platform\": [],\n        \"issue\": \"\",\n        \"onlineStatus\": [],\n        \"tags\": [],\n        \"version\": \"\",\n        \"policy\": \"\",\n        \"includedEndpointIds\": [\n            \"d169d2ee-aad3-47f0-bd1d-6c1829195201\"\n        ],\n        \"excludedEndpointIds\": [],\n        \"organizationIds\": [\n            0\n        ]\n    },\n    \"tags\": [\n        \"tag1\"\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/{{apiPrefix}}/endpoints/tags",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"{{apiPrefix}}",
										"endpoints",
										"tags"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "nginx"
								},
								{
									"key": "Date",
									"value": "Wed, 24 Jan 2024 06:37:14 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "59"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "ETag",
									"value": "W/\"3b-MHtur75ftUyQ2IfDqFjH6SAxAM4\""
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"result\": null,\n    \"statusCode\": 200,\n    \"errors\": []\n}"
						}
					]
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Auto Asset Tags",
			"item": [
				{
					"name": "Create Auto Asset Tag",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const uuid = require('uuid')",
									"",
									"pm.runForTest(() => {",
									"    const payload = JSON.parse(pm.request.body.raw)",
									"    payload.tag = `AAT - ${uuid.v4().substr(0, 8)}`",
									"    pm.request.body.raw = JSON.stringify(payload)",
									"})"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.collectionVariables.set('aatId', JSON.parse(responseBody).result._id)",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"tag\": \"Container\",\n    \"linuxConditions\": {\n        \"operator\": \"and\",\n        \"conditions\": [\n            {\n                \"operator\": \"or\",\n                \"conditions\": [\n                    {\n                        \"field\": \"process\",\n                        \"operator\": \"running\",\n                        \"value\": \"dockerd\"\n                    }\n                ]\n            }\n        ]\n    },\n    \"windowsConditions\": {\n        \"operator\": \"and\",\n        \"conditions\": [\n            {\n                \"operator\": \"or\",\n                \"conditions\": [\n                    {\n                        \"field\": \"process\",\n                        \"operator\": \"running\",\n                        \"value\": \"dockerd.exe\"\n                    }\n                ]\n            }\n        ]\n    },\n    \"macosConditions\": {\n        \"operator\": \"and\",\n        \"conditions\": [\n            {\n                \"operator\": \"or\",\n                \"conditions\": [\n                    {\n                        \"field\": \"process\",\n                        \"operator\": \"running\",\n                        \"value\": \"dockerd\"\n                    }\n                ]\n            }\n        ]\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/{{apiPrefix}}/auto-asset-tag",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"{{apiPrefix}}",
								"auto-asset-tag"
							]
						},
						"description": "### Parameters\n| **Name**                                                                      | **Constraints**                                                                                                                 |\n| ----------------------------------------------------------------------------- | ------------------------------------------------------------------------------------------------------------------------------- |\n| **tag** <br>string / required                                                 |                                                                                                                                 |\n| **linuxConditions** <br>object / required                                     |                                                                                                                                 |\n| **linuxConditions.operator** <br>string / required                            | valid values: and, or                                                                                                           |\n| **linuxConditions.conditions** <br>object array / required                    |                                                                                                                                 |\n| **linuxConditions.conditions.\\*.operator** <br>string / required              | valid values: and, or                                                                                                           |\n| **linuxConditions.conditions.\\*.conditions** <br>object array / required      | valid values: and, or                                                                                                           |\n| **linuxConditions.conditions.\\*.conditions.field** <br>string / required      | valid values: hostname, ip-address, subnet, osquery, process, file, directory                                                   |\n| **linuxConditions.conditions.\\*.conditions.operator** <br>string / required   | valid values: running, exist, is, contains, starts-with, ends-with, in-range, has-result, not-running, not-exist, has-no-result |\n| **linuxConditions.conditions.\\*.conditions.value** <br>string / required      |                                                                                                                                 |\n| **windowsConditions** <br>object / required                                   |                                                                                                                                 |\n| **windowsConditions.operator** <br>string / required                          | valid values: and, or                                                                                                           |\n| **windowsConditions.conditions** <br>object array / required                  |                                                                                                                                 |\n| **windowsConditions.conditions.\\*.operator** <br>string / required            | valid values: and, or                                                                                                           |\n| **windowsConditions.conditions.\\*.conditions** <br>object array / required    | valid values: and, or                                                                                                           |\n| **windowsConditions.conditions.\\*.conditions.field** <br>string / required    | valid values: hostname, ip-address, subnet, osquery, process, file, directory                                                   |\n| **windowsConditions.conditions.\\*.conditions.operator** <br>string / required | valid values: running, exist, is, contains, starts-with, ends-with, in-range, has-result, not-running, not-exist, has-no-result |\n| **windowsConditions.conditions.\\*.conditions.value** <br>string / required    |                                                                                                                                 |\n| **macosConditions** <br>object / required                                     |                                                                                                                                 |\n| **macosConditions.operator** <br>string / required                            | valid values: and, or                                                                                                           |\n| **macosConditions.conditions** <br>object array / required                    |                                                                                                                                 |\n| **macosConditions.conditions.\\*.operator** <br>string / required              | valid values: and, or                                                                                                           |\n| **macosConditions.conditions.\\*.conditions** <br>object array / required      | valid values: and, or                                                                                                           |\n| **macosConditions.conditions.\\*.conditions.field** <br>string / required      | valid values: hostname, ip-address, subnet, osquery, process, file, directory                                                   |\n| **macosConditions.conditions.\\*.conditions.operator** <br>string / required   | valid values: running, exist, is, contains, starts-with, ends-with, in-range, has-result, not-running, not-exist, has-no-result |\n| **macosConditions.conditions.\\*.conditions.value** <br>string / required      |                                                                                                                                 |"
					},
					"response": [
						{
							"name": "Create Auto Asset Tag - 200 OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"tag\": \"Container\",\n    \"linuxConditions\": {\n        \"operator\": \"and\",\n        \"conditions\": [\n            {\n                \"operator\": \"or\",\n                \"conditions\": [\n                    {\n                        \"field\": \"process\",\n                        \"operator\": \"running\",\n                        \"value\": \"dockerd\"\n                    }\n                ]\n            }\n        ]\n    },\n    \"windowsConditions\": {\n        \"operator\": \"and\",\n        \"conditions\": [\n            {\n                \"operator\": \"or\",\n                \"conditions\": [\n                    {\n                        \"field\": \"process\",\n                        \"operator\": \"running\",\n                        \"value\": \"dockerd.exe\"\n                    }\n                ]\n            }\n        ]\n    },\n    \"macosConditions\": {\n        \"operator\": \"and\",\n        \"conditions\": [\n            {\n                \"operator\": \"or\",\n                \"conditions\": [\n                    {\n                        \"field\": \"process\",\n                        \"operator\": \"running\",\n                        \"value\": \"dockerd\"\n                    }\n                ]\n            }\n        ]\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/{{apiPrefix}}/auto-asset-tag",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"{{apiPrefix}}",
										"auto-asset-tag"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "694"
								},
								{
									"key": "ETag",
									"value": "W/\"2b6-yZSAcmWEnCbGmLDwB6i26BglCFY\""
								},
								{
									"key": "Date",
									"value": "Sun, 26 Jun 2022 10:40:23 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"result\": {\n        \"_id\": \"f6kEPhpqMNqJeHfi4RyxiWEm\",\n        \"createdAt\": \"2022-06-26T10:40:23.256Z\",\n        \"updatedAt\": \"2022-06-26T10:40:23.256Z\",\n        \"tag\": \"Container\",\n        \"conditionIdCounter\": 4,\n        \"linuxConditions\": {\n            \"operator\": \"and\",\n            \"conditions\": [\n                {\n                    \"operator\": \"or\",\n                    \"conditions\": [\n                        {\n                            \"field\": \"process\",\n                            \"operator\": \"running\",\n                            \"value\": \"dockerd\",\n                            \"conditionId\": 1\n                        }\n                    ]\n                }\n            ]\n        },\n        \"windowsConditions\": {\n            \"operator\": \"and\",\n            \"conditions\": [\n                {\n                    \"operator\": \"or\",\n                    \"conditions\": [\n                        {\n                            \"field\": \"process\",\n                            \"operator\": \"running\",\n                            \"value\": \"dockerd.exe\",\n                            \"conditionId\": 2\n                        }\n                    ]\n                }\n            ]\n        },\n        \"macosConditions\": {\n            \"operator\": \"and\",\n            \"conditions\": [\n                {\n                    \"operator\": \"or\",\n                    \"conditions\": [\n                        {\n                            \"field\": \"process\",\n                            \"operator\": \"running\",\n                            \"value\": \"dockerd\",\n                            \"conditionId\": 3\n                        }\n                    ]\n                }\n            ]\n        }\n    },\n    \"statusCode\": 200,\n    \"errors\": []\n}"
						},
						{
							"name": "Create Auto Asset Tag - 409 Conflict",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"tag\": \"Container\",\n    \"linuxConditions\": {\n        \"operator\": \"and\",\n        \"conditions\": [\n            {\n                \"operator\": \"or\",\n                \"conditions\": [\n                    {\n                        \"field\": \"process\",\n                        \"operator\": \"running\",\n                        \"value\": \"dockerd\"\n                    }\n                ]\n            }\n        ]\n    },\n    \"windowsConditions\": {\n        \"operator\": \"and\",\n        \"conditions\": [\n            {\n                \"operator\": \"or\",\n                \"conditions\": [\n                    {\n                        \"field\": \"process\",\n                        \"operator\": \"running\",\n                        \"value\": \"dockerd.exe\"\n                    }\n                ]\n            }\n        ]\n    },\n    \"macosConditions\": {\n        \"operator\": \"and\",\n        \"conditions\": [\n            {\n                \"operator\": \"or\",\n                \"conditions\": [\n                    {\n                        \"field\": \"process\",\n                        \"operator\": \"running\",\n                        \"value\": \"dockerd\"\n                    }\n                ]\n            }\n        ]\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/{{apiPrefix}}/auto-asset-tag?Content-Type=application/json",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"{{apiPrefix}}",
										"auto-asset-tag"
									],
									"query": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									]
								}
							},
							"status": "Conflict",
							"code": 409,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "89"
								},
								{
									"key": "ETag",
									"value": "W/\"59-eAnl+DPZFESo3Opd9li6/T8jzMo\""
								},
								{
									"key": "Date",
									"value": "Sun, 26 Jun 2022 10:40:34 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"errors\": [\n        \"Tag Container already exist\"\n    ],\n    \"statusCode\": 409,\n    \"result\": null\n}"
						}
					]
				},
				{
					"name": "Update Auto Asset Tag",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const uuid = require('uuid')",
									"",
									"pm.runForTest(() => {",
									"    pm.request.url.variables.add({",
									"        key: 'id', ",
									"        value: pm.collectionVariables.get('aatId')",
									"    })",
									"",
									"    const payload = JSON.parse(pm.request.body.raw)",
									"    payload.tag = `AAT - ${uuid.v4().substr(0, 8)}`",
									"    pm.request.body.raw = JSON.stringify(payload)",
									"})"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"tag\": \"Container\",\n    \"linuxConditions\": {\n        \"operator\": \"and\",\n        \"conditions\": [\n            {\n                \"operator\": \"or\",\n                \"conditions\": [\n                    {\n                        \"field\": \"process\",\n                        \"operator\": \"running\",\n                        \"value\": \"dockerd\"\n                    }\n                ]\n            }\n        ]\n    },\n    \"windowsConditions\": {\n        \"operator\": \"and\",\n        \"conditions\": [\n            {\n                \"operator\": \"or\",\n                \"conditions\": [\n                    {\n                        \"field\": \"process\",\n                        \"operator\": \"running\",\n                        \"value\": \"dockerd.exe\"\n                    }\n                ]\n            }\n        ]\n    },\n    \"macosConditions\": {}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/{{apiPrefix}}/auto-asset-tag/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"{{apiPrefix}}",
								"auto-asset-tag",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "",
									"description": "Auto Asset Tag ID"
								}
							]
						},
						"description": "### Parameters\n| **Name**                                                                      | **Constraints**                                                                                                                 |\n| ----------------------------------------------------------------------------- | ------------------------------------------------------------------------------------------------------------------------------- |\n| **tag** <br>string / required                                                 |                                                                                                                                 |\n| **linuxConditions** <br>object / required                                     |                                                                                                                                 |\n| **linuxConditions.operator** <br>string / required                            | valid values: and, or                                                                                                           |\n| **linuxConditions.conditions** <br>object array / required                    |                                                                                                                                 |\n| **linuxConditions.conditions.\\*.operator** <br>string / required              | valid values: and, or                                                                                                           |\n| **linuxConditions.conditions.\\*.conditions** <br>object array / required      | valid values: and, or                                                                                                           |\n| **linuxConditions.conditions.\\*.conditions.field** <br>string / required      | valid values: hostname, ip-address, subnet, osquery, process, file, directory                                                   |\n| **linuxConditions.conditions.\\*.conditions.operator** <br>string / required   | valid values: running, exist, is, contains, starts-with, ends-with, in-range, has-result, not-running, not-exist, has-no-result |\n| **linuxConditions.conditions.\\*.conditions.value** <br>string / required      |                                                                                                                                 |\n| **windowsConditions** <br>object / required                                   |                                                                                                                                 |\n| **windowsConditions.operator** <br>string / required                          | valid values: and, or                                                                                                           |\n| **windowsConditions.conditions** <br>object array / required                  |                                                                                                                                 |\n| **windowsConditions.conditions.\\*.operator** <br>string / required            | valid values: and, or                                                                                                           |\n| **windowsConditions.conditions.\\*.conditions** <br>object array / required    | valid values: and, or                                                                                                           |\n| **windowsConditions.conditions.\\*.conditions.field** <br>string / required    | valid values: hostname, ip-address, subnet, osquery, process, file, directory                                                   |\n| **windowsConditions.conditions.\\*.conditions.operator** <br>string / required | valid values: running, exist, is, contains, starts-with, ends-with, in-range, has-result, not-running, not-exist, has-no-result |\n| **windowsConditions.conditions.\\*.conditions.value** <br>string / required    |                                                                                                                                 |\n| **macosConditions** <br>object / required                                     |                                                                                                                                 |\n| **macosConditions.operator** <br>string / required                            | valid values: and, or                                                                                                           |\n| **macosConditions.conditions** <br>object array / required                    |                                                                                                                                 |\n| **macosConditions.conditions.\\*.operator** <br>string / required              | valid values: and, or                                                                                                           |\n| **macosConditions.conditions.\\*.conditions** <br>object array / required      | valid values: and, or                                                                                                           |\n| **macosConditions.conditions.\\*.conditions.field** <br>string / required      | valid values: hostname, ip-address, subnet, osquery, process, file, directory                                                   |\n| **macosConditions.conditions.\\*.conditions.operator** <br>string / required   | valid values: running, exist, is, contains, starts-with, ends-with, in-range, has-result, not-running, not-exist, has-no-result |\n| **macosConditions.conditions.\\*.conditions.value** <br>string / required      |                                                                                                                                 |"
					},
					"response": [
						{
							"name": "Update Auto Asset Tag - 200 OK",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"tag\": \"Container\",\n    \"linuxConditions\": {\n        \"operator\": \"and\",\n        \"conditions\": [\n            {\n                \"operator\": \"or\",\n                \"conditions\": [\n                    {\n                        \"field\": \"process\",\n                        \"operator\": \"running\",\n                        \"value\": \"dockerd\"\n                    }\n                ]\n            }\n        ]\n    },\n    \"windowsConditions\": {\n        \"operator\": \"and\",\n        \"conditions\": [\n            {\n                \"operator\": \"or\",\n                \"conditions\": [\n                    {\n                        \"field\": \"process\",\n                        \"operator\": \"running\",\n                        \"value\": \"dockerd.exe\"\n                    }\n                ]\n            }\n        ]\n    },\n    \"macosConditions\": {}\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/{{apiPrefix}}/auto-asset-tag/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"{{apiPrefix}}",
										"auto-asset-tag",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "f6kEPhpqMNqJeHfi4RyxiWEm",
											"description": "Auto Asset Tag ID"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "555"
								},
								{
									"key": "ETag",
									"value": "W/\"22b-KMoP0HPtF8RTb3HQTFuSyWClspg\""
								},
								{
									"key": "Date",
									"value": "Sun, 26 Jun 2022 10:44:55 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"result\": {\n        \"_id\": \"f6kEPhpqMNqJeHfi4RyxiWEm\",\n        \"createdAt\": \"2022-06-26T10:40:23.256Z\",\n        \"updatedAt\": \"2022-06-26T10:44:55.065Z\",\n        \"tag\": \"Container\",\n        \"conditionIdCounter\": 6,\n        \"linuxConditions\": {\n            \"operator\": \"and\",\n            \"conditions\": [\n                {\n                    \"operator\": \"or\",\n                    \"conditions\": [\n                        {\n                            \"field\": \"process\",\n                            \"operator\": \"running\",\n                            \"value\": \"dockerd\",\n                            \"conditionId\": 4\n                        }\n                    ]\n                }\n            ]\n        },\n        \"windowsConditions\": {\n            \"operator\": \"and\",\n            \"conditions\": [\n                {\n                    \"operator\": \"or\",\n                    \"conditions\": [\n                        {\n                            \"field\": \"process\",\n                            \"operator\": \"running\",\n                            \"value\": \"dockerd.exe\",\n                            \"conditionId\": 5\n                        }\n                    ]\n                }\n            ]\n        },\n        \"macosConditions\": {}\n    },\n    \"statusCode\": 200,\n    \"errors\": []\n}"
						},
						{
							"name": "Update Auto Asset Tag - 404 Not Found",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"tag\": \"Container\",\n    \"linuxConditions\": {\n        \"operator\": \"and\",\n        \"conditions\": [\n            {\n                \"operator\": \"or\",\n                \"conditions\": [\n                    {\n                        \"field\": \"process\",\n                        \"operator\": \"running\",\n                        \"value\": \"dockerd\"\n                    }\n                ]\n            }\n        ]\n    },\n    \"windowsConditions\": {\n        \"operator\": \"and\",\n        \"conditions\": [\n            {\n                \"operator\": \"or\",\n                \"conditions\": [\n                    {\n                        \"field\": \"process\",\n                        \"operator\": \"running\",\n                        \"value\": \"dockerd.exe\"\n                    }\n                ]\n            }\n        ]\n    },\n    \"macosConditions\": {}\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/{{apiPrefix}}/auto-asset-tag/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"{{apiPrefix}}",
										"auto-asset-tag",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "f6kEPhpqMNqJeHfi4RyxiWEma",
											"description": "Auto Asset Tag ID"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "112"
								},
								{
									"key": "ETag",
									"value": "W/\"70-Lbr6+YAsvwpi+cQitVruiSvKuMA\""
								},
								{
									"key": "Date",
									"value": "Sun, 26 Jun 2022 10:45:04 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"errors\": [\n        \"Auto asset tag f6kEPhpqMNqJeHfi4RyxiWEma not found\"\n    ],\n    \"statusCode\": 404,\n    \"result\": null\n}"
						}
					]
				},
				{
					"name": "Get Auto Asset Tags",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/{{apiPrefix}}/auto-asset-tag",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"{{apiPrefix}}",
								"auto-asset-tag"
							],
							"query": [
								{
									"key": "pageNumber",
									"value": "",
									"description": "Which page of results to return",
									"disabled": true
								},
								{
									"key": "pageSize",
									"value": "",
									"description": "How many results to return per page",
									"disabled": true
								},
								{
									"key": "sortBy",
									"value": "",
									"description": "Attribute name to order the responses by",
									"disabled": true
								},
								{
									"key": "sortType",
									"value": "",
									"description": "Either ASC or DESC",
									"disabled": true
								},
								{
									"key": "filter[tag]",
									"value": "",
									"disabled": true
								},
								{
									"key": "filter[searchTerm]",
									"value": "",
									"disabled": true
								}
							]
						},
						"description": "### Parameters\n\n| **Name** | **Constraints** |\n| --- | --- |\n| **pageNumber**  <br>number / optional | default value: 1  <br>min value:1 |\n| **pageSize**  <br>number / optional | default value: 10  <br>min value:1 |\n| **sortBy**  <br>string / optional | default value: createdAt |\n| **sortType**  <br>string / optional | default value: ASC  <br>valid values: ASC, DESC |\n| **filter\\[tag\\]**  <br>string / optional |  |\n| **filter\\[searchTerm\\]**  <br>string / optional |  |"
					},
					"response": [
						{
							"name": "Get Auto Asset Tags - 200 OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/{{apiPrefix}}/auto-asset-tag",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"{{apiPrefix}}",
										"auto-asset-tag"
									],
									"query": [
										{
											"key": "filter[tag]",
											"value": "",
											"disabled": true
										},
										{
											"key": "filter[searchTerm]",
											"value": "",
											"disabled": true
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "5844"
								},
								{
									"key": "ETag",
									"value": "W/\"16d4-tQdLsqBJ3+7MsF6C4kedjdMPSlY\""
								},
								{
									"key": "Date",
									"value": "Sun, 26 Jun 2022 10:42:45 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"result\": {\n        \"entities\": [\n            {\n                \"_id\": \"f6kEPhpqMNqJeHfi4RyxiWEm\",\n                \"tag\": \"Container\",\n                \"linuxConditions\": {\n                    \"operator\": \"and\",\n                    \"conditions\": [\n                        {\n                            \"operator\": \"or\",\n                            \"conditions\": [\n                                {\n                                    \"field\": \"process\",\n                                    \"operator\": \"running\",\n                                    \"value\": \"dockerd\",\n                                    \"conditionId\": 1\n                                }\n                            ]\n                        }\n                    ]\n                },\n                \"windowsConditions\": {\n                    \"operator\": \"and\",\n                    \"conditions\": [\n                        {\n                            \"operator\": \"or\",\n                            \"conditions\": [\n                                {\n                                    \"field\": \"process\",\n                                    \"operator\": \"running\",\n                                    \"value\": \"dockerd.exe\",\n                                    \"conditionId\": 2\n                                }\n                            ]\n                        }\n                    ]\n                },\n                \"macosConditions\": {\n                    \"operator\": \"and\",\n                    \"conditions\": [\n                        {\n                            \"operator\": \"or\",\n                            \"conditions\": [\n                                {\n                                    \"field\": \"process\",\n                                    \"operator\": \"running\",\n                                    \"value\": \"dockerd\",\n                                    \"conditionId\": 3\n                                }\n                            ]\n                        }\n                    ]\n                },\n                \"updatedAt\": \"2022-06-26T10:40:23.256Z\",\n                \"createdAt\": \"2022-06-26T10:40:23.256Z\"\n            },\n            {\n                \"_id\": \"xoJppVmfVWq32uYNGO3HJR4S\",\n                \"tag\": \"Apache\",\n                \"linuxConditions\": {\n                    \"operator\": \"and\",\n                    \"conditions\": [\n                        {\n                            \"operator\": \"or\",\n                            \"conditions\": [\n                                {\n                                    \"field\": \"process\",\n                                    \"operator\": \"running\",\n                                    \"value\": \"apache2\",\n                                    \"conditionId\": 1\n                                },\n                                {\n                                    \"field\": \"directory\",\n                                    \"operator\": \"exist\",\n                                    \"value\": \"/etc/apache2\\u200c\",\n                                    \"conditionId\": 2\n                                },\n                                {\n                                    \"field\": \"directory\",\n                                    \"operator\": \"exist\",\n                                    \"value\": \"/var/log/apache2\\u200c\",\n                                    \"conditionId\": 3\n                                },\n                                {\n                                    \"field\": \"file\",\n                                    \"operator\": \"exists\",\n                                    \"value\": \"/etc/httpd/conf/httpd.conf\",\n                                    \"conditionId\": 4\n                                },\n                                {\n                                    \"field\": \"file\",\n                                    \"operator\": \"exists\",\n                                    \"value\": \"/etc/httpd/httpd.conf\",\n                                    \"conditionId\": 5\n                                }\n                            ]\n                        }\n                    ]\n                },\n                \"windowsConditions\": {},\n                \"macosConditions\": {},\n                \"updatedAt\": \"2022-06-25T11:46:53.466Z\",\n                \"createdAt\": \"2022-06-25T11:46:53.466Z\"\n            },\n            {\n                \"_id\": \"vkgPU9s7pl2bDRTHwRE6lZQb\",\n                \"tag\": \"Redis\",\n                \"linuxConditions\": {\n                    \"operator\": \"and\",\n                    \"conditions\": [\n                        {\n                            \"operator\": \"or\",\n                            \"conditions\": [\n                                {\n                                    \"field\": \"process\",\n                                    \"operator\": \"running\",\n                                    \"value\": \"redis-server\\u200c\",\n                                    \"conditionId\": 1\n                                },\n                                {\n                                    \"field\": \"directory\",\n                                    \"operator\": \"exist\",\n                                    \"value\": \"/etc/redis\\u200c\",\n                                    \"conditionId\": 2\n                                },\n                                {\n                                    \"field\": \"directory\",\n                                    \"operator\": \"exist\",\n                                    \"value\": \"/opt/redislabs\\u200c\",\n                                    \"conditionId\": 3\n                                }\n                            ]\n                        }\n                    ]\n                },\n                \"windowsConditions\": {},\n                \"macosConditions\": {},\n                \"updatedAt\": \"2022-06-25T11:46:53.466Z\",\n                \"createdAt\": \"2022-06-25T11:46:53.466Z\"\n            },\n            {\n                \"_id\": \"KHGeFGS5p6ayApr2B0wx9d8b\",\n                \"tag\": \"Mysql\",\n                \"linuxConditions\": {\n                    \"operator\": \"and\",\n                    \"conditions\": [\n                        {\n                            \"operator\": \"or\",\n                            \"conditions\": [\n                                {\n                                    \"field\": \"process\",\n                                    \"operator\": \"running\",\n                                    \"value\": \"mysqld\\u200c\",\n                                    \"conditionId\": 1\n                                },\n                                {\n                                    \"field\": \"directory\",\n                                    \"operator\": \"exist\",\n                                    \"value\": \"/var/lib/mysql\\u200c\",\n                                    \"conditionId\": 2\n                                },\n                                {\n                                    \"field\": \"directory\",\n                                    \"operator\": \"exist\",\n                                    \"value\": \"/etc/mysql\\u200c\",\n                                    \"conditionId\": 3\n                                },\n                                {\n                                    \"field\": \"directory\",\n                                    \"operator\": \"exist\",\n                                    \"value\": \"/var/log/mysql\\u200c\",\n                                    \"conditionId\": 4\n                                }\n                            ]\n                        }\n                    ]\n                },\n                \"windowsConditions\": {},\n                \"macosConditions\": {},\n                \"updatedAt\": \"2022-06-25T11:46:53.466Z\",\n                \"createdAt\": \"2022-06-25T11:46:53.466Z\"\n            },\n            {\n                \"_id\": \"lYvya4CVodpeBYqUxcmQhWaz\",\n                \"tag\": \"Rabbitmq\",\n                \"linuxConditions\": {\n                    \"operator\": \"and\",\n                    \"conditions\": [\n                        {\n                            \"operator\": \"or\",\n                            \"conditions\": [\n                                {\n                                    \"field\": \"file\",\n                                    \"operator\": \"exists\",\n                                    \"value\": \"/var/log/rabbitmq\",\n                                    \"conditionId\": 1\n                                },\n                                {\n                                    \"field\": \"directory\",\n                                    \"operator\": \"exist\",\n                                    \"value\": \"/etc/rabbitmq\\u200c\",\n                                    \"conditionId\": 2\n                                },\n                                {\n                                    \"field\": \"directory\",\n                                    \"operator\": \"exist\",\n                                    \"value\": \"/var/lib/rabbitmq\\u200c\",\n                                    \"conditionId\": 3\n                                }\n                            ]\n                        }\n                    ]\n                },\n                \"windowsConditions\": {},\n                \"macosConditions\": {},\n                \"updatedAt\": \"2022-06-25T11:46:53.466Z\",\n                \"createdAt\": \"2022-06-25T11:46:53.466Z\"\n            },\n            {\n                \"_id\": \"LTjsKWvzXLulYjkm0LRysfQF\",\n                \"tag\": \"Kubernetes\",\n                \"linuxConditions\": {\n                    \"operator\": \"and\",\n                    \"conditions\": [\n                        {\n                            \"operator\": \"or\",\n                            \"conditions\": [\n                                {\n                                    \"field\": \"process\",\n                                    \"operator\": \"running\",\n                                    \"value\": \"kube-controller-manager\",\n                                    \"conditionId\": 1\n                                },\n                                {\n                                    \"field\": \"process\",\n                                    \"operator\": \"running\",\n                                    \"value\": \"kube-apiserver\",\n                                    \"conditionId\": 2\n                                },\n                                {\n                                    \"field\": \"process\",\n                                    \"operator\": \"running\",\n                                    \"value\": \"kube-scheduler\",\n                                    \"conditionId\": 3\n                                },\n                                {\n                                    \"field\": \"directory\",\n                                    \"operator\": \"exist\",\n                                    \"value\": \"/etc/kubernetes\",\n                                    \"conditionId\": 4\n                                }\n                            ]\n                        }\n                    ]\n                },\n                \"windowsConditions\": {},\n                \"macosConditions\": {},\n                \"updatedAt\": \"2022-06-25T11:46:53.406Z\",\n                \"createdAt\": \"2022-06-25T11:46:53.406Z\"\n            },\n            {\n                \"_id\": \"bVC4sML6oxEqZDSt5hJvNuiV\",\n                \"tag\": \"Docker\",\n                \"linuxConditions\": {\n                    \"operator\": \"and\",\n                    \"conditions\": [\n                        {\n                            \"operator\": \"or\",\n                            \"conditions\": [\n                                {\n                                    \"field\": \"process\",\n                                    \"operator\": \"running\",\n                                    \"value\": \"dockerd\",\n                                    \"conditionId\": 1\n                                },\n                                {\n                                    \"field\": \"directory\",\n                                    \"operator\": \"exist\",\n                                    \"value\": \"/var/lib/docker\",\n                                    \"conditionId\": 2\n                                },\n                                {\n                                    \"field\": \"directory\",\n                                    \"operator\": \"exist\",\n                                    \"value\": \"/etc/docker\",\n                                    \"conditionId\": 3\n                                },\n                                {\n                                    \"field\": \"file\",\n                                    \"operator\": \"exists\",\n                                    \"value\": \"/var/log/docker.log\",\n                                    \"conditionId\": 4\n                                }\n                            ]\n                        }\n                    ]\n                },\n                \"windowsConditions\": {},\n                \"macosConditions\": {},\n                \"updatedAt\": \"2022-06-25T11:46:53.405Z\",\n                \"createdAt\": \"2022-06-25T11:46:53.405Z\"\n            },\n            {\n                \"_id\": \"ziQKfB67Dh4C0VGjEmLR5Zwy\",\n                \"tag\": \"IIS Web Server\",\n                \"linuxConditions\": {},\n                \"windowsConditions\": {\n                    \"operator\": \"and\",\n                    \"conditions\": [\n                        {\n                            \"operator\": \"or\",\n                            \"conditions\": [\n                                {\n                                    \"field\": \"process\",\n                                    \"operator\": \"running\",\n                                    \"value\": \"w3wp.exe\",\n                                    \"conditionId\": 1\n                                },\n                                {\n                                    \"field\": \"directory\",\n                                    \"operator\": \"exist\",\n                                    \"value\": \"C:\\\\inetpub\",\n                                    \"conditionId\": 2\n                                }\n                            ]\n                        }\n                    ]\n                },\n                \"macosConditions\": {},\n                \"updatedAt\": \"2022-06-25T11:46:53.285Z\",\n                \"createdAt\": \"2022-06-25T11:46:53.285Z\"\n            },\n            {\n                \"_id\": \"7EtEEcmsazXiBQqjmd9yJM2Y\",\n                \"tag\": \"Web Server\",\n                \"linuxConditions\": {},\n                \"windowsConditions\": {\n                    \"operator\": \"and\",\n                    \"conditions\": [\n                        {\n                            \"operator\": \"or\",\n                            \"conditions\": [\n                                {\n                                    \"field\": \"process\",\n                                    \"operator\": \"running\",\n                                    \"value\": \"php-cgi.exe\",\n                                    \"conditionId\": 1\n                                },\n                                {\n                                    \"field\": \"process\",\n                                    \"operator\": \"running\",\n                                    \"value\": \"nginx.exe\",\n                                    \"conditionId\": 2\n                                },\n                                {\n                                    \"field\": \"process\",\n                                    \"operator\": \"running\",\n                                    \"value\": \"httpd.exe\",\n                                    \"conditionId\": 3\n                                }\n                            ]\n                        }\n                    ]\n                },\n                \"macosConditions\": {},\n                \"updatedAt\": \"2022-06-25T11:46:53.285Z\",\n                \"createdAt\": \"2022-06-25T11:46:53.285Z\"\n            },\n            {\n                \"_id\": \"Ag7g9TebGYgjMJsJLKUXYiNB\",\n                \"tag\": \"Mail Server\",\n                \"linuxConditions\": {},\n                \"windowsConditions\": {\n                    \"operator\": \"and\",\n                    \"conditions\": [\n                        {\n                            \"operator\": \"or\",\n                            \"conditions\": [\n                                {\n                                    \"field\": \"file\",\n                                    \"operator\": \"exist\",\n                                    \"value\": \"%SystemDrive%\\\\ExchangeSetupLogs\\\\ExchangeSetup.log\",\n                                    \"conditionId\": 1\n                                },\n                                {\n                                    \"field\": \"directory\",\n                                    \"operator\": \"exist\",\n                                    \"value\": \"%WinDir%\\\\Temp\\\\ExchangeSetup\",\n                                    \"conditionId\": 2\n                                },\n                                {\n                                    \"field\": \"directory\",\n                                    \"operator\": \"exist\",\n                                    \"value\": \"C:\\\\Program Files\\\\Microsoft\\\\Exchange Server\",\n                                    \"conditionId\": 3\n                                }\n                            ]\n                        }\n                    ]\n                },\n                \"macosConditions\": {},\n                \"updatedAt\": \"2022-06-25T11:46:53.285Z\",\n                \"createdAt\": \"2022-06-25T11:46:53.285Z\"\n            }\n        ],\n        \"filters\": [\n            {\n                \"name\": \"tag\",\n                \"type\": \"text\",\n                \"options\": [],\n                \"filterUrl\": null\n            }\n        ],\n        \"sortables\": [\n            \"tag\",\n            \"createdAt\"\n        ],\n        \"totalEntityCount\": 12,\n        \"currentPage\": 1,\n        \"pageSize\": 10,\n        \"previousPage\": 0,\n        \"totalPageCount\": 2,\n        \"nextPage\": 2\n    },\n    \"statusCode\": 200,\n    \"errors\": []\n}"
						}
					]
				},
				{
					"name": "Get Auto Asset Tag by ID",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.runForTest(() => {",
									"    pm.request.url.variables.add({",
									"        key: 'id',",
									"        value: pm.collectionVariables.get('aatId')",
									"    })",
									"})"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/{{apiPrefix}}/auto-asset-tag/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"{{apiPrefix}}",
								"auto-asset-tag",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "",
									"description": "Auto Asset Tag"
								}
							]
						}
					},
					"response": [
						{
							"name": "Get Auto Asset Tag by ID - 200 OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/{{apiPrefix}}/auto-asset-tag/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"{{apiPrefix}}",
										"auto-asset-tag",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "f6kEPhpqMNqJeHfi4RyxiWEm",
											"description": "Auto Asset Tag"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "694"
								},
								{
									"key": "ETag",
									"value": "W/\"2b6-yZSAcmWEnCbGmLDwB6i26BglCFY\""
								},
								{
									"key": "Date",
									"value": "Sun, 26 Jun 2022 10:43:09 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"result\": {\n        \"_id\": \"f6kEPhpqMNqJeHfi4RyxiWEm\",\n        \"createdAt\": \"2022-06-26T10:40:23.256Z\",\n        \"updatedAt\": \"2022-06-26T10:40:23.256Z\",\n        \"tag\": \"Container\",\n        \"conditionIdCounter\": 4,\n        \"linuxConditions\": {\n            \"operator\": \"and\",\n            \"conditions\": [\n                {\n                    \"operator\": \"or\",\n                    \"conditions\": [\n                        {\n                            \"field\": \"process\",\n                            \"operator\": \"running\",\n                            \"value\": \"dockerd\",\n                            \"conditionId\": 1\n                        }\n                    ]\n                }\n            ]\n        },\n        \"windowsConditions\": {\n            \"operator\": \"and\",\n            \"conditions\": [\n                {\n                    \"operator\": \"or\",\n                    \"conditions\": [\n                        {\n                            \"field\": \"process\",\n                            \"operator\": \"running\",\n                            \"value\": \"dockerd.exe\",\n                            \"conditionId\": 2\n                        }\n                    ]\n                }\n            ]\n        },\n        \"macosConditions\": {\n            \"operator\": \"and\",\n            \"conditions\": [\n                {\n                    \"operator\": \"or\",\n                    \"conditions\": [\n                        {\n                            \"field\": \"process\",\n                            \"operator\": \"running\",\n                            \"value\": \"dockerd\",\n                            \"conditionId\": 3\n                        }\n                    ]\n                }\n            ]\n        }\n    },\n    \"statusCode\": 200,\n    \"errors\": []\n}"
						},
						{
							"name": "Get Auto Asset Tag by ID - 404 Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/{{apiPrefix}}/auto-asset-tag/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"{{apiPrefix}}",
										"auto-asset-tag",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "f6kEPhpqMNqJeHfi4RyxiWEma",
											"description": "Auto Asset Tag"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "125"
								},
								{
									"key": "ETag",
									"value": "W/\"7d-um4c5FTOTe3Ss3qD5RHvf6Czw9c\""
								},
								{
									"key": "Date",
									"value": "Sun, 26 Jun 2022 10:43:18 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"errors\": [\n        \"Auto asset tag with f6kEPhpqMNqJeHfi4RyxiWEma can not be found!\"\n    ],\n    \"statusCode\": 404,\n    \"result\": null\n}"
						}
					]
				},
				{
					"name": "Delete Auto Asset Tag by ID",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.runForTest(() => {",
									"    pm.request.url.variables.add({",
									"        key: 'id', ",
									"        value: pm.collectionVariables.get('aatId')",
									"    })",
									"})"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/{{apiPrefix}}/auto-asset-tag/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"{{apiPrefix}}",
								"auto-asset-tag",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "",
									"description": "Auto Asset Tag ID"
								}
							]
						}
					},
					"response": [
						{
							"name": "Delete Auto Asset Tag by ID - 200 OK",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/{{apiPrefix}}/auto-asset-tag/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"{{apiPrefix}}",
										"auto-asset-tag",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "IsrHvrFkAfkJjlItUKBAuUTp",
											"description": "Auto Asset Tag ID"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "59"
								},
								{
									"key": "ETag",
									"value": "W/\"3b-MHtur75ftUyQ2IfDqFjH6SAxAM4\""
								},
								{
									"key": "Date",
									"value": "Sun, 26 Jun 2022 10:42:16 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"result\": null,\n    \"statusCode\": 200,\n    \"errors\": []\n}"
						},
						{
							"name": "Delete Auto Asset Tag by ID - 404 Not Found",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/{{apiPrefix}}/auto-asset-tag/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"{{apiPrefix}}",
										"auto-asset-tag",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "IsrHvrFkAfkJjlItUKBAuUTp",
											"description": "Auto Asset Tag ID"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "121"
								},
								{
									"key": "ETag",
									"value": "W/\"79-cWKC/tqPIijpLTKGs7LqIpsjOL4\""
								},
								{
									"key": "Date",
									"value": "Sun, 26 Jun 2022 10:42:29 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"errors\": [\n        \"There is no auto asset tag such as IsrHvrFkAfkJjlItUKBAuUTp\"\n    ],\n    \"statusCode\": 404,\n    \"result\": null\n}"
						}
					]
				},
				{
					"name": "Start Tagging",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.runForTest(() => {",
									"    const payload = JSON.parse(pm.request.body.raw)",
									"    payload.filter.includedEndpointIds = [",
									"        pm.collectionVariables.get('endpointId')",
									"    ]",
									"    pm.request.body.raw = JSON.stringify(payload)",
									"})"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"filter\": {\n        \"searchTerm\": \"\",\n        \"name\": \"\",\n        \"ipAddress\": \"\",\n        \"groupId\": \"\",\n        \"groupFullPath\": \"\",\n        \"managedStatus\": [\n            \"managed\"\n        ],\n        \"isolationStatus\": [],\n        \"platform\": [],\n        \"issue\": \"\",\n        \"onlineStatus\": [],\n        \"tags\": [],\n        \"version\": \"\",\n        \"policy\": \"\",\n        \"includedEndpointIds\": [],\n        \"excludedEndpointIds\": [],\n        \"organizationIds\": [\n            0\n        ]\n    },\n    \"schedulerConfig\": {\n        \"when\": \"now\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/{{apiPrefix}}/auto-asset-tag/start-tagging",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"{{apiPrefix}}",
								"auto-asset-tag",
								"start-tagging"
							]
						},
						"description": "### Parameters\n\n| **Name** | **Constraints** |\n| --- | --- |\n| **filter.organizationIds**  <br>number array / required |  |\n| **filter.searchTerm**  <br>string / optional |  |\n| **filter.name**  <br>string / optional |  |\n| **filter.ipAddress**  <br>string / optional |  |\n| **filter.groupId**  <br>string / optional |  |\n| **filter.groupFullPath**  <br>string / optional |  |\n| **filter.label**  <br>string / optional |  |\n| **filter.lastSeen**  <br>string / optional | Example: 2023-03-06T21:00:00.000Z,2023-03-24T21:00:00.000Z |\n| **filter.managedStatus**  <br>string array / optional | valid values: unmanaged, managed, off-network |\n| **filter.isolationStatus**  <br>string array / optional | valid values: isolating, isolated, unisolating, unisolated |\n| **filter.platform**  <br>string array / optional | valid values: windows, linux, darwin |\n| **filter.issue**  <br>string array / optional | valid values: unreachable, old-version, update-required |\n| **filter.onlineStatus**  <br>string array / optional | valid values: online, offline |\n| **filter.tags**  <br>string array / optional |  |\n| **filter.version**  <br>string / optional |  |\n| **filter.policy**  <br>string / optional |  |\n| **filter.includedEndpointIds**  <br>string array / optional |  |\n| **filter.excludedEndpointIds**  <br>string array / optional |  |\n| **filter.caseId**  <br>string / optional |  |\n| **schedulerConfig.when**  <br>string / required | valid values: now, scheduled |\n| **schedulerConfig.timezoneType**  <br>string / if scheduled: required | valid values: asset, custom |\n| **schedulerConfig.timezone**  <br>string / if scheduled and custom timezone type selected: required | example: Europe/London |\n| **schedulerConfig.startDate**  <br>unix timestamp / if scheduled: required |  |\n| **schedulerConfig.recurrence**  <br>string / if scheduled: required | valid values: onetime, daily, weekly, monthly |\n| **schedulerConfig.repeatEvery**  <br>number / if scheduled and recurrence is daily or monthly: required |  |\n| **schedulerConfig.repeatOnWeek**  <br>string array / if scheduled and recurrence is weekly: required | valid values: array of 3-letter days of week.  <br>example: \\['MON', 'WED'\\] |\n| **schedulerConfig.repeatOnMonth**  <br>number / if scheduled and recurrence is monthly: required | day of month |\n| **schedulerConfig.endRepeatType**  <br>string / if scheduled: required | valid values: never, date, occurrence |\n| **schedulerConfig.endDate**  <br>unix timestamp / if scheduled and end repeat type is date: required |  |\n| **schedulerConfig.limit**  <br>number / if scheduled and end repeat type is occurrence: required |  |"
					},
					"response": [
						{
							"name": "Start Tagging - 200 OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"filter\": {\n        \"searchTerm\": \"\",\n        \"name\": \"\",\n        \"ipAddress\": \"\",\n        \"groupId\": \"\",\n        \"groupFullPath\": \"\",\n        \"managedStatus\": [\n            \"managed\"\n        ],\n        \"isolationStatus\": [],\n        \"platform\": [\n            \"windows\"\n        ],\n        \"issue\": \"\",\n        \"onlineStatus\": [],\n        \"tags\": [],\n        \"version\": \"\",\n        \"policy\": \"\",\n        \"includedEndpointIds\": [],\n        \"excludedEndpointIds\": [],\n        \"organizationIds\": [\n            0\n        ]\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/{{apiPrefix}}/auto-asset-tag/start-tagging",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"{{apiPrefix}}",
										"auto-asset-tag",
										"start-tagging"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "240"
								},
								{
									"key": "ETag",
									"value": "W/\"f0-NqaO0CuhqVlXZi3d+SRokZdpai0\""
								},
								{
									"key": "Date",
									"value": "Sun, 26 Jun 2022 10:50:49 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"result\": [\n        {\n            \"_id\": \"e12bd1ee-e6d1-4c42-88b9-809e94d157dc\",\n            \"name\": \"Auto Tagging 001\",\n            \"organizationId\": 0\n        },\n        {\n            \"_id\": \"b21ec89f-4027-4da9-8c24-c8e70e2be40c\",\n            \"name\": \"Auto Tagging 001\",\n            \"organizationId\": 1\n        }\n    ],\n    \"statusCode\": 200,\n    \"errors\": []\n}"
						},
						{
							"name": "Start Tagging - 400 Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"filter\": {\n        \"searchTerm\": \"\",\n        \"name\": \"\",\n        \"ipAddress\": \"\",\n        \"groupId\": \"\",\n        \"groupFullPath\": \"\",\n        \"managedStatus\": [\n            \"managed\"\n        ],\n        \"isolationStatus\": [],\n        \"platform\": [\n            \"darwin\"\n        ],\n        \"issue\": \"\",\n        \"onlineStatus\": [],\n        \"tags\": [],\n        \"version\": \"\",\n        \"policy\": \"\",\n        \"includedEndpointIds\": [],\n        \"excludedEndpointIds\": [],\n        \"organizationIds\": [\n            2\n        ]\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/{{apiPrefix}}/auto-asset-tag/start-tagging",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"{{apiPrefix}}",
										"auto-asset-tag",
										"start-tagging"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "136"
								},
								{
									"key": "ETag",
									"value": "W/\"88-J5wWFl7U1jImocUF1SgcG9kX4O0\""
								},
								{
									"key": "Date",
									"value": "Sun, 26 Jun 2022 10:51:37 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"errors\": [\n        \"'platform' filter should be only empty, windows and/or linux and/or darwin\"\n    ],\n    \"statusCode\": 400,\n    \"result\": null\n}"
						},
						{
							"name": "Start Tagging - 403 Forbidden",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"filter\": {\n        \"searchTerm\": \"\",\n        \"name\": \"\",\n        \"ipAddress\": \"\",\n        \"groupId\": \"\",\n        \"groupFullPath\": \"\",\n        \"managedStatus\": [\n            \"managed\"\n        ],\n        \"isolationStatus\": [],\n        \"platform\": [\n            \"windows\"\n        ],\n        \"issue\": \"\",\n        \"onlineStatus\": [],\n        \"tags\": [],\n        \"version\": \"\",\n        \"policy\": \"\",\n        \"includedEndpointIds\": [],\n        \"excludedEndpointIds\": [],\n        \"organizationIds\": [\n            2\n        ]\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/{{apiPrefix}}/auto-asset-tag/start-tagging",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"{{apiPrefix}}",
										"auto-asset-tag",
										"start-tagging"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "111"
								},
								{
									"key": "ETag",
									"value": "W/\"6f-eTe46OYVVc3Ki0MtZERbQIABulI\""
								},
								{
									"key": "Date",
									"value": "Sun, 26 Jun 2022 10:51:23 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"errors\": [\n        \"You are not authorized to access the resource(s).\"\n    ],\n    \"statusCode\": 403,\n    \"result\": null\n}"
						},
						{
							"name": "Start Tagging - 404 Not Found",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"filter\": {\n        \"searchTerm\": \"\",\n        \"name\": \"\",\n        \"ipAddress\": \"\",\n        \"groupId\": \"\",\n        \"groupFullPath\": \"\",\n        \"managedStatus\": [\n            \"managed\"\n        ],\n        \"isolationStatus\": [],\n        \"platform\": [\n            \"darwin\"\n        ],\n        \"issue\": \"\",\n        \"onlineStatus\": [],\n        \"tags\": [],\n        \"version\": \"\",\n        \"policy\": \"\",\n        \"includedEndpointIds\": [],\n        \"excludedEndpointIds\": [],\n        \"organizationIds\": [\n            0\n        ]\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/{{apiPrefix}}/auto-asset-tag/start-tagging",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"{{apiPrefix}}",
										"auto-asset-tag",
										"start-tagging"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "119"
								},
								{
									"key": "ETag",
									"value": "W/\"77-jL/xJ1BjlICHfoK4fn7gvvLtZQg\""
								},
								{
									"key": "Date",
									"value": "Sun, 26 Jun 2022 10:51:53 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"errors\": [\n        \"No managed endpoint(s) found by provided filter criteria.\"\n    ],\n    \"statusCode\": 404,\n    \"result\": null\n}"
						},
						{
							"name": "Start Tagging - 406 Not Acceptable",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"assertions\": {\n        \"failIfNumberOfAssetsGreaterThan\": 5\n    },\n    \"filter\": {\n        \"searchTerm\": \"\",\n        \"name\": \"\",\n        \"ipAddress\": \"\",\n        \"groupId\": \"\",\n        \"groupFullPath\": \"\",\n        \"managedStatus\": [\n            \"managed\"\n        ],\n        \"isolationStatus\": [],\n        \"platform\": [],\n        \"issue\": \"\",\n        \"onlineStatus\": [],\n        \"tags\": [],\n        \"version\": \"\",\n        \"policy\": \"\",\n        \"includedEndpointIds\": [],\n        \"excludedEndpointIds\": [],\n        \"organizationIds\": [\n            0\n        ]\n    },\n    \"schedulerConfig\": {\n        \"when\": \"now\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/{{apiPrefix}}/auto-asset-tag/start-tagging",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"{{apiPrefix}}",
										"auto-asset-tag",
										"start-tagging"
									]
								}
							},
							"status": "Not Acceptable",
							"code": 406,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "nginx"
								},
								{
									"key": "Date",
									"value": "Wed, 30 Apr 2025 08:06:24 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "189"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Cache-Control",
									"value": "no-store"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "ETag",
									"value": "W/\"bd-yy1Q5Dlx3fkmXTzVt+u5Fl/RqvQ\""
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"errors\": [\n        \"The number of assets matching the provided filter exceeds the allowed limit. Matching asset count: 39, Maximum allowed asset: 5\"\n    ],\n    \"statusCode\": 406,\n    \"result\": null\n}"
						}
					]
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Baseline",
			"item": [
				{
					"name": "Acquire Baseline by Filter",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.runForTest(() => {",
									"    const payload = JSON.parse(pm.request.body.raw)",
									"    payload.filter.includedEndpointIds = [",
									"        pm.collectionVariables.get('endpointId')",
									"    ]",
									"    pm.request.body.raw = JSON.stringify(payload)",
									"})"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"caseId\":  null,\n    \"filter\": {\n        \"searchTerm\": \"\",\n        \"name\": \"\",\n        \"ipAddress\": \"\",\n        \"groupId\": \"\",\n        \"groupFullPath\": \"\",\n        \"managedStatus\": [],\n        \"isolationStatus\": [],\n        \"platform\": [],\n        \"issue\": \"\",\n        \"onlineStatus\": [],\n        \"tags\": [],\n        \"version\": \"\",\n        \"policy\": \"\",\n        \"includedEndpointIds\": [],\n        \"excludedEndpointIds\": [],\n        \"organizationIds\": [0]\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/{{apiPrefix}}/baseline/acquire",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"{{apiPrefix}}",
								"baseline",
								"acquire"
							]
						},
						"description": "### Parameters\n| **Name** | **Constraints** |\n| ---------------------------------------------------------------------------------------------- | ---------------------------------------------------------- |\n| **caseId** <br>string / optional | |\n| **filter.organizationIds** <br>number array / required | |\n| **filter.searchTerm** <br>string / optional | |\n| **filter.name** <br>string / optional | |\n| **filter.ipAddress** <br>string / optional | |\n| **filter.groupId** <br>string / optional | |\n| **filter.groupFullPath** <br>string / optional | |\n| **filter.label** <br>string / optional | |\n| **filter.lastSeen** <br>string / optional | Example: 2023-03-06T21:00:00.000Z,2023-03-24T21:00:00.000Z |\n| **filter.managedStatus** <br>string array / optional | valid values: unmanaged, managed, off-network |\n| **filter.isolationStatus** <br>string array / optional | valid values: isolating, isolated, unisolating, unisolated |\n| **filter.platform** <br>string array / optional | valid values: windows, linux, darwin |\n| **filter.issue** <br>string array / optional | valid values: unreachable, old-version, update-required |\n| **filter.onlineStatus** <br>string array / optional | valid values: online, offline |\n| **filter.tags** <br>string array / optional | |\n| **filter.version** <br>string / optional | |\n| **filter.policy** <br>string / optional | |\n| **filter.includedEndpointIds** <br>string array / optional | |\n| **filter.excludedEndpointIds** <br>string array / optional | |\n| **filter.awsRegions** <br>string array / optional | |\n| **filter.azureRegions** <br>string array / optional | |"
					},
					"response": [
						{
							"name": "Acquire Baseline by Filter - 200 OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"caseId\": \"C-2022-0001\",\n    \"filter\": {\n        \"searchTerm\": \"\",\n        \"name\": \"\",\n        \"ipAddress\": \"\",\n        \"groupId\": \"\",\n        \"groupFullPath\": \"\",\n        \"managedStatus\": [],\n        \"isolationStatus\": [],\n        \"platform\": [],\n        \"issue\": \"\",\n        \"onlineStatus\": [],\n        \"tags\": [],\n        \"version\": \"\",\n        \"policy\": \"\",\n        \"includedEndpointIds\": [\"391aed05-d43c-49c5-8245-6ea386ab62cf\"],\n        \"excludedEndpointIds\": [],\n        \"organizationIds\": [\n            0\n        ]\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/{{apiPrefix}}/baseline/acquire",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"{{apiPrefix}}",
										"baseline",
										"acquire"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "161"
								},
								{
									"key": "ETag",
									"value": "W/\"a1-XReTt2L9lhtoBSLf//LJnY44wr8\""
								},
								{
									"key": "Date",
									"value": "Sun, 19 Jun 2022 09:27:27 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"result\": [\n        {\n            \"_id\": \"f04666c9-62c7-4cb0-8638-967f05eb7936\",\n            \"name\": \"Test Baseline Acquisition 001\",\n            \"organizationId\": 0\n        }\n    ],\n    \"statusCode\": 200,\n    \"errors\": []\n}"
						},
						{
							"name": "Acquire Baseline by Filter - 400 Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"caseId\": \"C-2022-0001\",\n    \"filter\": {\n        \"searchTerm\": \"\",\n        \"name\": \"\",\n        \"ipAddress\": \"\",\n        \"groupId\": \"\",\n        \"groupFullPath\": \"\",\n        \"managedStatus\": [],\n        \"isolationStatus\": [],\n        \"platform\": [],\n        \"issue\": \"\",\n        \"onlineStatus\": [],\n        \"tags\": [],\n        \"version\": \"\",\n        \"policy\": \"\",\n        \"includedEndpointIds\": [],\n        \"excludedEndpointIds\": [],\n        \"organizationIds\": []\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/{{apiPrefix}}/baseline/acquire",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"{{apiPrefix}}",
										"baseline",
										"acquire"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "100"
								},
								{
									"key": "ETag",
									"value": "W/\"64-0dZahibur8gfpdjDGd/+kpCpojg\""
								},
								{
									"key": "Date",
									"value": "Sun, 19 Jun 2022 09:27:59 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"errors\": [\n        \"'organizationIds' should not be empty.\"\n    ],\n    \"statusCode\": 400,\n    \"result\": null\n}"
						}
					]
				},
				{
					"name": "Compare Baseline Acquisition Tasks by Endpoint ID",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.runForTest(() => {",
									"    const payload = JSON.parse(pm.request.body.raw)",
									"",
									"    payload.endpointId = pm.collectionVariables.get('endpointId')",
									"    payload.taskIds = [\"no-task-id\"]",
									"",
									"    pm.request.body.raw = JSON.stringify(payload)",
									"})"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"",
									"pm.test(\"Should return error 'No task(s) found by provided id(s)'\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.errors).to.eql([\"No task(s) found by provided id(s)\"]);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"endpointId\": \"endpoint-id\",\n    \"taskIds\": [\n        \"task-assignment-id-1\",\n        \"task-assignment-id-2\"\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/{{apiPrefix}}/baseline/compare",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"{{apiPrefix}}",
								"baseline",
								"compare"
							]
						},
						"description": "### Parameters\n\n| **Name** | **Constraints** |\n| --- | --- |\n| **endpointId**  <br>string / required |  |\n| **taskIds**  <br>string array / required | 2 task assignment id |"
					},
					"response": [
						{
							"name": "Compare Baseline Acquisition Tasks by Endpoint ID - 200 OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"endpointId\": \"391aed05-d43c-49c5-8245-6ea386ab62cf\",\n    \"taskIds\": [\n        \"f04666c9-62c7-4cb0-8638-967f05eb7936\",\n        \"a7eb7b97-7302-4ef6-8f23-0dec400f79c3\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/{{apiPrefix}}/baseline/compare",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"{{apiPrefix}}",
										"baseline",
										"compare"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "114"
								},
								{
									"key": "ETag",
									"value": "W/\"72-4IWOWzGKQ+ke12M7JccwftaL3d8\""
								},
								{
									"key": "Date",
									"value": "Sun, 19 Jun 2022 09:29:44 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"result\": [\n        {\n            \"_id\": \"3c801542-d58e-4237-84b9-37651b455a38\",\n            \"name\": \"Example Case Baseline Comparison 001\",\n            \"organizationId\": 0\n        }\n    ],\n    \"statusCode\": 200,\n    \"errors\": []\n}"
						},
						{
							"name": "Compare Baseline Acquisition Tasks by Endpoint ID - 400 Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"endpointId\": \"391aed05-d43c-49c5-8245-6ea386ab62cf\",\n    \"taskIds\": [\n        \"f04666c9-62c7-4cb0-8638-967f05eb7936\",\n        \"a7eb7b97-7302-4ef6-8f23-0dec400f79c3\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/{{apiPrefix}}/baseline/compare",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"{{apiPrefix}}",
										"baseline",
										"compare"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "114"
								},
								{
									"key": "ETag",
									"value": "W/\"72-4IWOWzGKQ+ke12M7JccwftaL3d8\""
								},
								{
									"key": "Date",
									"value": "Sun, 19 Jun 2022 09:29:44 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"errors\": [\n        \"Tasks should be completed while baseline comparison.\"\n    ],\n    \"statusCode\": 400,\n    \"result\": null\n}"
						},
						{
							"name": "Compare Baseline Acquisition Tasks by Endpoint ID - 404 Not Found",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"endpointId\": \"bbcfcd16-f156-47cc-8a33-55ba5d09f8df\",\n    \"taskIds\": [\n        \"b88b3c24-3058-49c1-91ec-80d806a6e7c0\",\n        \"e0993d35-4127-4016-8e77-61fb31c45bf0\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/{{apiPrefix}}/baseline/compare",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"{{apiPrefix}}",
										"baseline",
										"compare"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "100"
								},
								{
									"key": "ETag",
									"value": "W/\"64-azrSR08dm3x2Kb54usGRko3OeVA\""
								},
								{
									"key": "Date",
									"value": "Sun, 19 Jun 2022 09:28:47 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"errors\": [\n        \"No endpoint(s) found by provided id(s)\"\n    ],\n    \"statusCode\": 404,\n    \"result\": null\n}"
						}
					]
				},
				{
					"name": "Show Comparison Result Report",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.runForTest(() => {",
									"    pm.request.url.variables.add({",
									"        key: 'endpointId',",
									"        value: pm.collectionVariables.get('endpointId')",
									"    })",
									"",
									"    pm.request.url.variables.add({",
									"        key: 'taskId',",
									"        value: 'no-task-id'",
									"    })",
									"})"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"",
									"pm.test(\"Should return error 'No task(s) found by provided id(s)'\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.errors).to.eql([\"No task(s) found by provided id(s)\"]);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/{{apiPrefix}}/baseline/comparison/report/:endpointId/:taskId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"{{apiPrefix}}",
								"baseline",
								"comparison",
								"report",
								":endpointId",
								":taskId"
							],
							"variable": [
								{
									"key": "endpointId",
									"value": null,
									"description": "Endpoint ID"
								},
								{
									"key": "taskId",
									"value": null,
									"description": "Task ID"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Cases",
			"item": [
				{
					"name": "Notes",
					"item": [
						{
							"name": "Add Note to Case by Case ID",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.runForTest(() => {",
											"    pm.request.url.variables.add({",
											"        key: 'id',",
											"        value: pm.collectionVariables.get('caseId')",
											"    })",
											"})"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.collectionVariables.set('caseNoteId', JSON.parse(responseBody).result._id)",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"value\": \"This is a note\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/{{apiPrefix}}/cases/:id/notes",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"{{apiPrefix}}",
										"cases",
										":id",
										"notes"
									],
									"variable": [
										{
											"key": "id",
											"value": "",
											"description": "Case ID"
										}
									]
								},
								"description": "### Parameters\n\n| **Name** | **Constraints** |\n| --- | --- |\n| **value**  <br>string / required |  |"
							},
							"response": [
								{
									"name": "Add Note to Case by Case ID - 200 OK",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"value\": \"This is a note\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/{{apiPrefix}}/cases/:id/notes",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"{{apiPrefix}}",
												"cases",
												":id",
												"notes"
											],
											"variable": [
												{
													"key": "id",
													"value": "C-2022-0002",
													"description": "Case ID"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "197"
										},
										{
											"key": "ETag",
											"value": "W/\"c5-RuGjT9eaQ14Ju5XlqtGCSUR7f1A\""
										},
										{
											"key": "Date",
											"value": "Sun, 19 Jun 2022 18:29:37 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"result\": {\n        \"_id\": \"8d9baa16-9aa3-4e4f-a08e-a74341ce2f90\",\n        \"value\": \"This is a note\",\n        \"writtenAt\": \"2022-06-19T18:29:37.170Z\",\n        \"writtenBy\": \"demo@binalyze.com\"\n    },\n    \"statusCode\": 200,\n    \"errors\": []\n}"
								},
								{
									"name": "Add Note to Case by Case ID - 400 Bad Request",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/{{apiPrefix}}/cases/:id/notes",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"{{apiPrefix}}",
												"cases",
												":id",
												"notes"
											],
											"variable": [
												{
													"key": "id",
													"value": "C-2022-0002",
													"description": "Case ID"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "114"
										},
										{
											"key": "ETag",
											"value": "W/\"72-4UEArI3o/M/zTgoS2gFyj7nsJ4s\""
										},
										{
											"key": "Date",
											"value": "Sun, 19 Jun 2022 18:30:13 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": false,\n    \"errors\": [\n        \"value must be a string\",\n        \"value should not be empty\"\n    ],\n    \"statusCode\": 400,\n    \"result\": null\n}"
								},
								{
									"name": "Add Note to Case by Case ID - 404 Not Found",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"value\": \"This is a note\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/{{apiPrefix}}/cases/:id/notes",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"{{apiPrefix}}",
												"cases",
												":id",
												"notes"
											],
											"variable": [
												{
													"key": "id",
													"value": "1",
													"description": "Case ID"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "100"
										},
										{
											"key": "ETag",
											"value": "W/\"64-FSTGVYIvEHKoHFyCla6GZasKk60\""
										},
										{
											"key": "Date",
											"value": "Sun, 19 Jun 2022 18:29:52 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": false,\n    \"errors\": [\n        \"No case container found by provided id\"\n    ],\n    \"statusCode\": 404,\n    \"result\": null\n}"
								}
							]
						},
						{
							"name": "Update Note of Case by ID",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.runForTest(() => {",
											"    pm.request.url.variables.add({",
											"        key: 'caseId',",
											"        value: pm.collectionVariables.get('caseId')",
											"    })",
											"",
											"    pm.request.url.variables.add({",
											"        key: 'noteId',",
											"        value: pm.collectionVariables.get('caseNoteId')",
											"    })",
											"})"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"value\": \"New Note\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/{{apiPrefix}}/cases/:caseId/notes/:noteId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"{{apiPrefix}}",
										"cases",
										":caseId",
										"notes",
										":noteId"
									],
									"variable": [
										{
											"key": "caseId",
											"value": "",
											"description": "Case ID"
										},
										{
											"key": "noteId",
											"value": "",
											"description": "Note ID"
										}
									]
								},
								"description": "### Parameters\n\n| **Name** | **Constraints** |\n| --- | --- |\n| **value**  <br>string / required |  |"
							},
							"response": [
								{
									"name": "Update Note of Case by ID - 200 OK",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"value\": \"New Note\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/{{apiPrefix}}/cases/:caseId/notes/:noteId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"{{apiPrefix}}",
												"cases",
												":caseId",
												"notes",
												":noteId"
											],
											"variable": [
												{
													"key": "caseId",
													"value": "C-2022-0002",
													"description": "Case ID"
												},
												{
													"key": "noteId",
													"value": "8d9baa16-9aa3-4e4f-a08e-a74341ce2f90",
													"description": "Note ID"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "191"
										},
										{
											"key": "ETag",
											"value": "W/\"bf-vytaxGEGn+kXU3t1VR7qCIXQqic\""
										},
										{
											"key": "Date",
											"value": "Sun, 19 Jun 2022 18:31:48 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"result\": {\n        \"_id\": \"8d9baa16-9aa3-4e4f-a08e-a74341ce2f90\",\n        \"value\": \"New Note\",\n        \"writtenAt\": \"2022-06-19T18:31:34.134Z\",\n        \"writtenBy\": \"demo@binalyze.com\"\n    },\n    \"statusCode\": 200,\n    \"errors\": []\n}"
								},
								{
									"name": "Update Note of Case by ID - 404 Not Found",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"value\": \"New Note\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/{{apiPrefix}}/cases/:caseId/notes/:noteId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"{{apiPrefix}}",
												"cases",
												":caseId",
												"notes",
												":noteId"
											],
											"variable": [
												{
													"key": "caseId",
													"value": "C-2022-0002",
													"description": "Case ID"
												},
												{
													"key": "noteId",
													"value": "1",
													"description": "Note ID"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "93"
										},
										{
											"key": "ETag",
											"value": "W/\"5d-rz0hgfjVC2t54I5Zg4Ub9g5M8wA\""
										},
										{
											"key": "Date",
											"value": "Sun, 19 Jun 2022 18:34:37 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": false,\n    \"errors\": [\n        \"Note not found by provided id 1\"\n    ],\n    \"statusCode\": 404,\n    \"result\": null\n}"
								}
							]
						},
						{
							"name": "Delete Note of Case by ID",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.runForTest(() => {",
											"    pm.request.url.variables.add({",
											"        key: 'caseId',",
											"        value: pm.collectionVariables.get('caseId')",
											"    })",
											"",
											"    pm.request.url.variables.add({",
											"        key: 'noteId',",
											"        value: pm.collectionVariables.get('caseNoteId')",
											"    })",
											"})"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/{{apiPrefix}}/cases/:caseId/notes/:noteId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"{{apiPrefix}}",
										"cases",
										":caseId",
										"notes",
										":noteId"
									],
									"variable": [
										{
											"key": "caseId",
											"value": "",
											"description": "Case ID"
										},
										{
											"key": "noteId",
											"value": "",
											"description": "Note ID"
										}
									]
								}
							},
							"response": [
								{
									"name": "Delete Note of Case by ID - 200 OK",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/{{apiPrefix}}/cases/:caseId/notes/:noteId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"{{apiPrefix}}",
												"cases",
												":caseId",
												"notes",
												":noteId"
											],
											"variable": [
												{
													"key": "caseId",
													"value": "C-2022-0002",
													"description": "Case ID"
												},
												{
													"key": "noteId",
													"value": "2a43380a-1811-4a2a-8dee-898b8d222b00",
													"description": "Note ID"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "59"
										},
										{
											"key": "ETag",
											"value": "W/\"3b-MHtur75ftUyQ2IfDqFjH6SAxAM4\""
										},
										{
											"key": "Date",
											"value": "Sun, 19 Jun 2022 18:37:53 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"result\": null,\n    \"statusCode\": 200,\n    \"errors\": []\n}"
								},
								{
									"name": "Delete Note of Case by ID - 404 Not Found",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/{{apiPrefix}}/cases/:caseId/notes/:noteId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"{{apiPrefix}}",
												"cases",
												":caseId",
												"notes",
												":noteId"
											],
											"variable": [
												{
													"key": "caseId",
													"value": "C-2022-0002",
													"description": "Case ID"
												},
												{
													"key": "noteId",
													"value": "2a43380a-1811-4a2a-8dee-898b8d222b00",
													"description": "Note ID"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "128"
										},
										{
											"key": "ETag",
											"value": "W/\"80-bNXCFXnm8iIsz4rycQm6UgBC5jY\""
										},
										{
											"key": "Date",
											"value": "Sun, 19 Jun 2022 18:39:34 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": false,\n    \"errors\": [\n        \"Note not found by provided id 2a43380a-1811-4a2a-8dee-898b8d222b00\"\n    ],\n    \"statusCode\": 404,\n    \"result\": null\n}"
								}
							]
						}
					]
				},
				{
					"name": "Export",
					"item": [
						{
							"name": "Export Cases",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/{{apiPrefix}}/cases/export?filter[organizationIds]=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"{{apiPrefix}}",
										"cases",
										"export"
									],
									"query": [
										{
											"key": "pageSize",
											"value": "10",
											"description": "How many results to return per page",
											"disabled": true
										},
										{
											"key": "pageNumber",
											"value": "1",
											"description": "Which page of results to return",
											"disabled": true
										},
										{
											"key": "sortBy",
											"value": "",
											"description": "Attribute name to order the responses by",
											"disabled": true
										},
										{
											"key": "sortType",
											"value": "",
											"description": "Either ASC or DESC",
											"disabled": true
										},
										{
											"key": "filter[searchTerm]",
											"value": "",
											"disabled": true
										},
										{
											"key": "filter[startedOn]",
											"value": "2021-09-17T00:00:00.000Z,2021-09-18T00:00:00.000Z",
											"disabled": true
										},
										{
											"key": "filter[closedOn]",
											"value": "2021-09-29T00:00:00.000Z,2021-10-01T00:00:00.000Z",
											"disabled": true
										},
										{
											"key": "filter[status]",
											"value": "open",
											"disabled": true
										},
										{
											"key": "filter[organizationIds]",
											"value": "0"
										}
									]
								},
								"description": "### Parameters\n\n| **Name** | **Constraints** |\n| --- | --- |\n| **pageNumber** <br>number / optional                 | default value: 1 <br>min value:1               |\n| **pageSize** <br>number / optional                   | default value: 10 <br>min value:1              |\n| **sortBy** <br>string / optional                     | default value: createdAt                       |\n| **sortType** <br>string / optional                   | default value: ASC <br>valid values: ASC, DESC |\n| **filter\\[organizationIds\\]**  <br>number array / required |  |\n| **filter\\[searchTerm\\]**  <br>string / optional |  |\n| **filter\\[caseId\\]**  <br>string / optional |  |\n| **filter\\[status\\]**  <br>string / optional |  |\n| **filter\\[startedOn\\]**  <br>string / optional |  |\n| **filter\\[closedOn\\]**  <br>string / optional |  |"
							},
							"response": []
						},
						{
							"name": "Export Case Notes by Case ID",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.runForTest(() => {",
											"    pm.request.url.variables.add({",
											"        key: 'id',",
											"        value: pm.collectionVariables.get('caseId')",
											"    })",
											"})"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/{{apiPrefix}}/cases/:id/notes/export",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"{{apiPrefix}}",
										"cases",
										":id",
										"notes",
										"export"
									],
									"variable": [
										{
											"key": "id",
											"value": null,
											"description": "Case ID"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Export Case Endpoints by Case ID",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.runForTest(() => {",
											"    pm.request.url.variables.add({",
											"        key: 'id',",
											"        value: pm.collectionVariables.get('caseId')",
											"    })",
											"})"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/{{apiPrefix}}/cases/:id/endpoints/export?filter[organizationIds]=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"{{apiPrefix}}",
										"cases",
										":id",
										"endpoints",
										"export"
									],
									"query": [
										{
											"key": "filter[searchTerm]",
											"value": "",
											"disabled": true
										},
										{
											"key": "filter[organizationIds]",
											"value": "0"
										},
										{
											"key": "filter[onlineStatus]",
											"value": "",
											"disabled": true
										},
										{
											"key": "filter[issue]",
											"value": "",
											"disabled": true
										},
										{
											"key": "filter[groupFullPath]",
											"value": "",
											"disabled": true
										},
										{
											"key": "filter[groupId]",
											"value": "",
											"disabled": true
										},
										{
											"key": "filter[name]",
											"value": "",
											"disabled": true
										},
										{
											"key": "filter[ipAddress]",
											"value": "",
											"disabled": true
										},
										{
											"key": "filter[managedStatus]",
											"value": "",
											"disabled": true
										},
										{
											"key": "filter[tags]",
											"value": "",
											"disabled": true
										},
										{
											"key": "filter[version]",
											"value": "",
											"disabled": true
										},
										{
											"key": "filter[platform]",
											"value": "",
											"disabled": true
										},
										{
											"key": "filter[unisolated]",
											"value": "",
											"disabled": true
										},
										{
											"key": "filter[includedEndpointIds]",
											"value": "",
											"disabled": true
										}
									],
									"variable": [
										{
											"key": "id",
											"value": null,
											"description": "Case ID"
										}
									]
								},
								"description": "### Parameters\n| **Name** | **Constraints** |\n| ---------------------------------------------------------------------------------------------- | ---------------------------------------------------------- |\n| **filter[organizationIds]** <br>number array / required | |\n| **filter[searchTerm]** <br>string / optional | |\n| **filter[name]** <br>string / optional | |\n| **filter[ipAddress]** <br>string / optional | |\n| **filter[groupId]** <br>string / optional | |\n| **filter[groupFullPath]** <br>string / optional | |\n| **filter[label]** <br>string / optional | |\n| **filter[lastSeen]** <br>string / optional | Example: 2023-03-06T21:00:00.000Z,2023-03-24T21:00:00.000Z |\n| **filter[managedStatus]** <br>string array / optional | valid values: unmanaged, managed, off-network |\n| **filter[isolationStatus]** <br>string array / optional | valid values: isolating, isolated, unisolating, unisolated |\n| **filter[platform]** <br>string array / optional | valid values: windows, linux, darwin |\n| **filter[issue]** <br>string array / optional | valid values: unreachable, old-version, update-required |\n| **filter[onlineStatus]** <br>string array / optional | valid values: online, offline |\n| **filter[tags]** <br>string array / optional | |\n| **filter[version]** <br>string / optional | |\n| **filter[policy]** <br>string / optional | |\n| **filter[includedEndpointIds]** <br>string array / optional | |\n| **filter[excludedEndpointIds]** <br>string array / optional | |\n| **filter[awsRegions]** <br>string array / optional | |\n| **filter[azureRegions]** <br>string array / optional | |"
							},
							"response": []
						},
						{
							"name": "Export Case Activities by Case ID",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.runForTest(() => {",
											"    pm.request.url.variables.add({",
											"        key: 'id',",
											"        value: pm.collectionVariables.get('caseId')",
											"    })",
											"})"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/{{apiPrefix}}/cases/:id/activities/export",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"{{apiPrefix}}",
										"cases",
										":id",
										"activities",
										"export"
									],
									"query": [
										{
											"key": "pageSize",
											"value": "10",
											"description": "How many results to return per page",
											"disabled": true
										},
										{
											"key": "pageNumber",
											"value": "1",
											"description": "Which page of results to return",
											"disabled": true
										},
										{
											"key": "sortBy",
											"value": "",
											"description": "Attribute name to order the responses by",
											"disabled": true
										},
										{
											"key": "sortType",
											"value": "",
											"description": "Either ASC or DESC",
											"disabled": true
										},
										{
											"key": "filter[performedBy]",
											"value": "",
											"disabled": true
										},
										{
											"key": "filter[types]",
											"value": "",
											"disabled": true
										},
										{
											"key": "filter[occurredAt]",
											"value": "",
											"disabled": true
										},
										{
											"key": "filter[searchTerm]",
											"value": "",
											"disabled": true
										}
									],
									"variable": [
										{
											"key": "id",
											"value": null,
											"description": "Case ID"
										}
									]
								},
								"description": "### Parameters\n\n| **Name** | **Constraints** |\n| --- | --- |\n| **pageNumber** <br>number / optional                 | default value: 1 <br>min value:1               |\n| **pageSize** <br>number / optional                   | default value: 10 <br>min value:1              |\n| **sortBy** <br>string / optional                     | default value: createdAt                       |\n| **sortType** <br>string / optional                   | default value: ASC <br>valid values: ASC, DESC |\n| **filter\\[performedBy\\]**  <br>number array / required |  |\n| **filter\\[types\\]**  <br>string / optional |  |\n| **filter\\[searchTerm\\]**  <br>string / optional |  |\n| **filter\\[occurredAt\\]**  <br>string / optional |  |"
							},
							"response": []
						}
					]
				},
				{
					"name": "Get Cases",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/{{apiPrefix}}/cases?filter[organizationIds]=0",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"{{apiPrefix}}",
								"cases"
							],
							"query": [
								{
									"key": "pageNumber",
									"value": "",
									"description": "Which page of results to return",
									"disabled": true
								},
								{
									"key": "pageSize",
									"value": "",
									"description": "How many results to return per page",
									"disabled": true
								},
								{
									"key": "sortBy",
									"value": "",
									"description": "Attribute name to order the responses by",
									"disabled": true
								},
								{
									"key": "sortType",
									"value": "",
									"disabled": true
								},
								{
									"key": "filter[searchTerm]",
									"value": "",
									"disabled": true
								},
								{
									"key": "filter[status]",
									"value": "",
									"disabled": true
								},
								{
									"key": "filter[closedOn]",
									"value": "2021-09-29T00:00:00.000Z,2021-10-01T00:00:00.000Z",
									"disabled": true
								},
								{
									"key": "filter[startedOn]",
									"value": "2022-01-02T09:00:00.000Z,2022-01-16T09:00:00.000Z",
									"disabled": true
								},
								{
									"key": "filter[organizationIds]",
									"value": "0"
								}
							]
						},
						"description": "### Parameters\n\n| **Name** | **Constraints** |\n| --- | --- |\n| **pageNumber**  <br>number / optional | default value: 1  <br>min value:1 |\n| **pageSize**  <br>number / optional | default value: 10  <br>min value:1 |\n| **sortBy**  <br>string / optional | default value: createdAt |\n| **sortType**  <br>string / optional | default value: ASC  <br>valid values: ASC, DESC |\n| **filter\\[organizationIds\\]**  <br>number array / required |  |\n| **filter\\[searchTerm\\]**  <br>string / optional |  |\n| **filter\\[caseId\\]**  <br>string / optional |  |\n| **filter\\[status\\]**  <br>string / optional |  |\n| **filter\\[startedOn\\]**  <br>string / optional |  |\n| **filter\\[closedOn\\]**  <br>string / optional |  |"
					},
					"response": [
						{
							"name": "Get Cases - 200 OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/{{apiPrefix}}/cases?filter[organizationIds]=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"{{apiPrefix}}",
										"cases"
									],
									"query": [
										{
											"key": "pageSize",
											"value": "10",
											"disabled": true
										},
										{
											"key": "pageNumber",
											"value": "1",
											"disabled": true
										},
										{
											"key": "filter[searchTerm]",
											"value": "",
											"disabled": true
										},
										{
											"key": "filter[status]",
											"value": "closed",
											"disabled": true
										},
										{
											"key": "filter[closedOn]",
											"value": "2021-09-29T00:00:00.000Z,2021-10-01T00:00:00.000Z",
											"disabled": true
										},
										{
											"key": "filter[organizationIds]",
											"value": "0"
										},
										{
											"key": "filter[startedOn]",
											"value": "2022-01-02T09:00:00.000Z,2022-01-16T09:00:00.000Z",
											"disabled": true
										},
										{
											"key": "filter[status]",
											"value": "open",
											"disabled": true
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "832"
								},
								{
									"key": "ETag",
									"value": "W/\"340-GWfBs5xI31o3zTcQ2xvK3VZ92+Y\""
								},
								{
									"key": "Date",
									"value": "Sun, 19 Jun 2022 17:40:02 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"result\": {\n        \"entities\": [\n            {\n                \"notes\": [],\n                \"_id\": \"C-2022-0003\",\n                \"createdAt\": \"2022-06-19T17:37:59.775Z\",\n                \"updatedAt\": \"2022-06-19T17:37:59.775Z\",\n                \"name\": \"First Case\",\n                \"ownerUserId\": \"RGRyrQfrbq97ywgkpXSn2UYH\",\n                \"organizationId\": 0,\n                \"status\": \"open\",\n                \"startedOn\": \"2022-06-19T17:37:59.775Z\",\n                \"visibility\": \"public-to-organization\",\n                \"assignedUserIds\": [],\n                \"source\": \"user\",\n                \"totalDays\": 0,\n                \"totalEndpoints\": 0\n            }\n        ],\n        \"filters\": [\n            {\n                \"name\": \"status\",\n                \"type\": \"checkbox\",\n                \"options\": [\n                    \"open\",\n                    \"closed\",\n                    \"archived\"\n                ],\n                \"filterUrl\": null\n            },\n            {\n                \"name\": \"startedOn\",\n                \"type\": \"daterange\",\n                \"options\": [],\n                \"filterUrl\": null\n            },\n            {\n                \"name\": \"closedOn\",\n                \"type\": \"daterange\",\n                \"options\": [],\n                \"filterUrl\": null\n            }\n        ],\n        \"sortables\": [\n            \"name\",\n            \"searchTerm\",\n            \"status\",\n            \"startedOn\",\n            \"closedOn\"\n        ],\n        \"totalEntityCount\": 1,\n        \"currentPage\": 1,\n        \"pageSize\": 10,\n        \"previousPage\": 0,\n        \"totalPageCount\": 1,\n        \"nextPage\": 2\n    },\n    \"statusCode\": 200,\n    \"errors\": []\n}"
						},
						{
							"name": "Get Cases - without Organization ID - 400 Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/{{apiPrefix}}/cases?filter[organizationIds]=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"{{apiPrefix}}",
										"cases"
									],
									"query": [
										{
											"key": "pageSize",
											"value": "",
											"description": "Which page of results to return",
											"disabled": true
										},
										{
											"key": "pageNumber",
											"value": "",
											"description": "How many results to return per page",
											"disabled": true
										},
										{
											"key": "sortBy",
											"value": "",
											"description": "Attribute name to order the responses by",
											"disabled": true
										},
										{
											"key": "sortType",
											"value": "",
											"description": "Either ASC or DESC",
											"disabled": true
										},
										{
											"key": "filter[searchTerm]",
											"value": "",
											"disabled": true
										},
										{
											"key": "filter[status]",
											"value": "closed",
											"disabled": true
										},
										{
											"key": "filter[closedOn]",
											"value": "2021-09-29T00:00:00.000Z,2021-10-01T00:00:00.000Z",
											"disabled": true
										},
										{
											"key": "filter[organizationIds]",
											"value": ""
										},
										{
											"key": "filter[startedOn]",
											"value": "2022-01-02T09:00:00.000Z,2022-01-16T09:00:00.000Z",
											"disabled": true
										},
										{
											"key": "filter[status]",
											"value": "open",
											"disabled": true
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "100"
								},
								{
									"key": "ETag",
									"value": "W/\"64-0dZahibur8gfpdjDGd/+kpCpojg\""
								},
								{
									"key": "Date",
									"value": "Sun, 19 Jun 2022 17:41:17 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"errors\": [\n        \"'organizationIds' should not be empty.\"\n    ],\n    \"statusCode\": 400,\n    \"result\": null\n}"
						}
					]
				},
				{
					"name": "Create Case",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const uuid = require('uuid')",
									"",
									"pm.runForTest(() => {",
									"    const payload = JSON.parse(pm.request.body.raw)",
									"    payload.name = `Case - ${uuid.v4().substr(0, 8)}`",
									"    payload.ownerUserId = pm.collectionVariables.get('globalAdminId')",
									"    pm.request.body.raw = JSON.stringify(payload)",
									"})"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"organizationId\": 0,\n    \"name\": \"First Case\",\n    \"ownerUserId\": \"RGRyrQfrbq97ywgkpXSn2UYH\",\n    \"visibility\": \"public-to-organization\",\n    \"assignedUserIds\": []\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/{{apiPrefix}}/cases",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"{{apiPrefix}}",
								"cases"
							]
						},
						"description": "| **Name** | **Constraints** |\n| --- | --- |\n| **name**  <br>string / required |  |\n| **organizationId**  <br>number / required |  |\n| **ownerUserId**  <br>string / required |  |\n| **visibility**  <br>string / required | valid values: public-to-organization, private-to-users |\n| **assignedUserIds**  <br>string / if visibility is private-to-users: required |  |"
					},
					"response": [
						{
							"name": "Create Case - 200 OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"organizationId\": 0,\n    \"name\": \"First Case\",\n    \"ownerUserId\": \"RGRyrQfrbq97ywgkpXSn2UYH\",\n    \"visibility\": \"public-to-organization\",\n    \"assignedUserIds\": []\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/{{apiPrefix}}/cases",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"{{apiPrefix}}",
										"cases"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "375"
								},
								{
									"key": "ETag",
									"value": "W/\"177-seWbwnOGTB+AJisjqOSacH9mulE\""
								},
								{
									"key": "Date",
									"value": "Sun, 19 Jun 2022 17:37:59 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"result\": {\n        \"notes\": [],\n        \"_id\": \"C-2022-0003\",\n        \"name\": \"First Case\",\n        \"organizationId\": 0,\n        \"ownerUserId\": \"RGRyrQfrbq97ywgkpXSn2UYH\",\n        \"visibility\": \"public-to-organization\",\n        \"assignedUserIds\": [],\n        \"startedOn\": \"2022-06-19T17:37:59.775Z\",\n        \"source\": \"user\",\n        \"status\": \"open\",\n        \"createdAt\": \"2022-06-19T17:37:59.775Z\",\n        \"updatedAt\": \"2022-06-19T17:37:59.775Z\"\n    },\n    \"statusCode\": 200,\n    \"errors\": []\n}"
						},
						{
							"name": "Create Case - 400 Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/{{apiPrefix}}/cases",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"{{apiPrefix}}",
										"cases"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "395"
								},
								{
									"key": "ETag",
									"value": "W/\"18b-he0y1Kb36sk8AAj7rbWo4quyYiU\""
								},
								{
									"key": "Date",
									"value": "Sun, 19 Jun 2022 17:38:34 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"errors\": [\n        \"name must be a string\",\n        \"name should not be empty\",\n        \"ownerUserId must be a string\",\n        \"ownerUserId should not be empty\",\n        \"organizationId must be a number conforming to the specified constraints\",\n        \"organizationId should not be empty\",\n        \"organizationId must be a number\",\n        \"visibility must be a valid enum value\",\n        \"visibility should not be empty\"\n    ],\n    \"statusCode\": 400,\n    \"result\": null\n}"
						},
						{
							"name": "Create Case - 409 Conflict",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"organizationId\": 0,\n    \"name\": \"First Case\",\n    \"ownerUserId\": \"RGRyrQfrbq97ywgkpXSn2UYH\",\n    \"visibility\": \"public-to-organization\",\n    \"assignedUserIds\": []\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/{{apiPrefix}}/cases",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"{{apiPrefix}}",
										"cases"
									]
								}
							},
							"status": "Conflict",
							"code": 409,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "86"
								},
								{
									"key": "ETag",
									"value": "W/\"56-7UzoLoYAt97TE1L6aOquYKEKC4Q\""
								},
								{
									"key": "Date",
									"value": "Sun, 19 Jun 2022 17:39:43 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"errors\": [\n        \"First Case already exist\"\n    ],\n    \"statusCode\": 409,\n    \"result\": null\n}"
						}
					]
				},
				{
					"name": "Update Case by ID",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const uuid = require('uuid')",
									"",
									"pm.runForTest(() => {",
									"    pm.request.url.variables.add({",
									"        key: 'id', ",
									"        value: pm.collectionVariables.get('caseId')",
									"    })",
									"",
									"    const payload = JSON.parse(pm.request.body.raw)",
									"    payload.name = `Case - ${uuid.v4().substr(0, 8)}`",
									"    pm.request.body.raw = JSON.stringify(payload)",
									"})"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Test Case\",\n    \"assignedUserIds\": []\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/{{apiPrefix}}/cases/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"{{apiPrefix}}",
								"cases",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "",
									"description": "Case ID"
								}
							]
						},
						"description": "### Parameters\n\n| **Name** | **Constraints** |\n| --- | --- |\n| **name**  <br>string / required |  |\n| **visibility**  <br>string / required | valid values: public-to-organization, private-to-users |\n| **assignedUserIds**  <br>string array / if visibility is private-to-users: required |  |"
					},
					"response": [
						{
							"name": "Update Case by ID - 200 OK",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Test Case\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/{{apiPrefix}}/cases/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"{{apiPrefix}}",
										"cases",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "C-2022-0003",
											"description": "Case ID"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "374"
								},
								{
									"key": "ETag",
									"value": "W/\"176-uxxwrqI03URz/Yx+AUJ10+XYHe8\""
								},
								{
									"key": "Date",
									"value": "Sun, 19 Jun 2022 17:43:12 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"result\": {\n        \"notes\": [],\n        \"_id\": \"C-2022-0003\",\n        \"createdAt\": \"2022-06-19T17:37:59.775Z\",\n        \"updatedAt\": \"2022-06-19T17:43:12.730Z\",\n        \"name\": \"Test Case\",\n        \"ownerUserId\": \"RGRyrQfrbq97ywgkpXSn2UYH\",\n        \"organizationId\": 0,\n        \"status\": \"open\",\n        \"startedOn\": \"2022-06-19T17:37:59.775Z\",\n        \"visibility\": \"public-to-organization\",\n        \"assignedUserIds\": [],\n        \"source\": \"user\"\n    },\n    \"statusCode\": 200,\n    \"errors\": []\n}"
						},
						{
							"name": "Update Case by ID - 400 Bad Request",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Test Case\",\n    \"visibility\": \"private-to-users\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/{{apiPrefix}}/cases/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"{{apiPrefix}}",
										"cases",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "C-2022-0003",
											"description": "Case ID"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "134"
								},
								{
									"key": "ETag",
									"value": "W/\"86-H9au1WRf1ped4xXGmLW2mjjk9AY\""
								},
								{
									"key": "Date",
									"value": "Sun, 19 Jun 2022 17:43:41 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"errors\": [\n        [\n            \"assignedUserIds should not be empty\",\n            \"assignedUserIds must be an array\"\n        ]\n    ],\n    \"statusCode\": 400,\n    \"result\": null\n}"
						}
					]
				},
				{
					"name": "Get Case by ID",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.runForTest(() => {",
									"    pm.request.url.variables.add({",
									"        key: 'id',",
									"        value: pm.collectionVariables.get('caseId')",
									"    })",
									"})"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/{{apiPrefix}}/cases/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"{{apiPrefix}}",
								"cases",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "",
									"description": "Case ID"
								}
							]
						}
					},
					"response": [
						{
							"name": "Get Case by ID - 200 OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/{{apiPrefix}}/cases/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"{{apiPrefix}}",
										"cases",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "C-2022-0003",
											"description": "Case ID"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "408"
								},
								{
									"key": "ETag",
									"value": "W/\"198-AmhcPr9e0vBU+NDT/8C0kPFUeCA\""
								},
								{
									"key": "Date",
									"value": "Sun, 19 Jun 2022 17:42:26 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"result\": {\n        \"notes\": [],\n        \"_id\": \"C-2022-0003\",\n        \"createdAt\": \"2022-06-19T17:37:59.775Z\",\n        \"updatedAt\": \"2022-06-19T17:37:59.775Z\",\n        \"name\": \"First Case\",\n        \"ownerUserId\": \"RGRyrQfrbq97ywgkpXSn2UYH\",\n        \"organizationId\": 0,\n        \"status\": \"open\",\n        \"startedOn\": \"2022-06-19T17:37:59.775Z\",\n        \"visibility\": \"public-to-organization\",\n        \"assignedUserIds\": [],\n        \"source\": \"user\",\n        \"totalDays\": 0,\n        \"totalEndpoints\": 0\n    },\n    \"statusCode\": 200,\n    \"errors\": []\n}"
						},
						{
							"name": "Get Case by ID - 404 Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/{{apiPrefix}}/cases/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"{{apiPrefix}}",
										"cases",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "1",
											"description": "Case ID"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "100"
								},
								{
									"key": "ETag",
									"value": "W/\"64-FSTGVYIvEHKoHFyCla6GZasKk60\""
								},
								{
									"key": "Date",
									"value": "Sun, 19 Jun 2022 17:42:36 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"errors\": [\n        \"No case container found by provided id\"\n    ],\n    \"statusCode\": 404,\n    \"result\": null\n}"
						}
					]
				},
				{
					"name": "Close Case by ID",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.runForTest(() => {",
									"    pm.request.url.variables.add({",
									"        key: 'id',",
									"        value: pm.collectionVariables.get('caseId')",
									"    })",
									"})"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/{{apiPrefix}}/cases/:id/close",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"{{apiPrefix}}",
								"cases",
								":id",
								"close"
							],
							"variable": [
								{
									"key": "id",
									"value": "",
									"description": "Case ID"
								}
							]
						}
					},
					"response": [
						{
							"name": "Close Case by ID - 200 OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/{{apiPrefix}}/cases/:id/close",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"{{apiPrefix}}",
										"cases",
										":id",
										"close"
									],
									"variable": [
										{
											"key": "id",
											"value": "C-2022-0003",
											"description": "Case ID"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "408"
								},
								{
									"key": "ETag",
									"value": "W/\"198-ncipGe8kTO6mUCr7P0Qb6PCFJxI\""
								},
								{
									"key": "Date",
									"value": "Sun, 19 Jun 2022 17:44:23 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"result\": {\n        \"notes\": [],\n        \"_id\": \"C-2022-0003\",\n        \"createdAt\": \"2022-06-19T17:37:59.775Z\",\n        \"updatedAt\": \"2022-06-19T17:44:23.069Z\",\n        \"name\": \"Test Case\",\n        \"ownerUserId\": \"RGRyrQfrbq97ywgkpXSn2UYH\",\n        \"organizationId\": 0,\n        \"status\": \"closed\",\n        \"startedOn\": \"2022-06-19T17:37:59.775Z\",\n        \"closedOn\": \"2022-06-19T17:44:23.069Z\",\n        \"visibility\": \"private-to-users\",\n        \"assignedUserIds\": [],\n        \"source\": \"user\"\n    },\n    \"statusCode\": 200,\n    \"errors\": []\n}"
						},
						{
							"name": "Close Case by ID - 404 Not Found",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/{{apiPrefix}}/cases/:id/close",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"{{apiPrefix}}",
										"cases",
										":id",
										"close"
									],
									"variable": [
										{
											"key": "id",
											"value": "1",
											"description": "Case ID"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "100"
								},
								{
									"key": "ETag",
									"value": "W/\"64-FSTGVYIvEHKoHFyCla6GZasKk60\""
								},
								{
									"key": "Date",
									"value": "Sun, 19 Jun 2022 17:44:37 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"errors\": [\n        \"No case container found by provided id\"\n    ],\n    \"statusCode\": 404,\n    \"result\": null\n}"
						},
						{
							"name": "Close Case by ID - 412 Precondition Failed",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/{{apiPrefix}}/cases/:id/close",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"{{apiPrefix}}",
										"cases",
										":id",
										"close"
									],
									"variable": [
										{
											"key": "id",
											"value": "C-2022-0003",
											"description": "Case ID"
										}
									]
								}
							},
							"status": "Precondition Failed",
							"code": 412,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "96"
								},
								{
									"key": "ETag",
									"value": "W/\"60-QzirC4I8Dg+hL3CVD0Fn8QT2HZs\""
								},
								{
									"key": "Date",
									"value": "Sun, 19 Jun 2022 17:44:51 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"errors\": [\n        \"Case status is not open but closed\"\n    ],\n    \"statusCode\": 412,\n    \"result\": null\n}"
						}
					]
				},
				{
					"name": "Open Case by ID",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.runForTest(() => {",
									"    pm.request.url.variables.add({",
									"        key: 'id',",
									"        value: pm.collectionVariables.get('caseId')",
									"    })",
									"})"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/{{apiPrefix}}/cases/:id/open",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"{{apiPrefix}}",
								"cases",
								":id",
								"open"
							],
							"variable": [
								{
									"key": "id",
									"value": "",
									"description": "Case ID"
								}
							]
						}
					},
					"response": [
						{
							"name": "Open Case by ID - 200 OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/{{apiPrefix}}/cases/:id/open",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"{{apiPrefix}}",
										"cases",
										":id",
										"open"
									],
									"variable": [
										{
											"key": "id",
											"value": "C-2022-0003",
											"description": "Case ID"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "406"
								},
								{
									"key": "ETag",
									"value": "W/\"196-DiEN0W+sUGTUlT/Chz36R1mF7m0\""
								},
								{
									"key": "Date",
									"value": "Sun, 19 Jun 2022 17:46:26 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"result\": {\n        \"_id\": \"C-2022-0003\",\n        \"notes\": [],\n        \"name\": \"Test Case\",\n        \"organizationId\": 0,\n        \"ownerUserId\": \"RGRyrQfrbq97ywgkpXSn2UYH\",\n        \"visibility\": \"private-to-users\",\n        \"assignedUserIds\": [],\n        \"startedOn\": \"2022-06-19T17:37:59.775Z\",\n        \"source\": \"user\",\n        \"status\": \"open\",\n        \"createdAt\": \"2022-06-19T17:37:59.775Z\",\n        \"updatedAt\": \"2022-06-19T17:46:26.200Z\",\n        \"closedOn\": \"2022-06-19T17:44:23.069Z\"\n    },\n    \"statusCode\": 200,\n    \"errors\": []\n}"
						},
						{
							"name": "Open Case by ID - 404 Not Found",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/{{apiPrefix}}/cases/:id/open",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"{{apiPrefix}}",
										"cases",
										":id",
										"open"
									],
									"variable": [
										{
											"key": "id",
											"value": "2",
											"description": "Case ID"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "100"
								},
								{
									"key": "ETag",
									"value": "W/\"64-FSTGVYIvEHKoHFyCla6GZasKk60\""
								},
								{
									"key": "Date",
									"value": "Sun, 19 Jun 2022 17:46:38 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"errors\": [\n        \"No case container found by provided id\"\n    ],\n    \"statusCode\": 404,\n    \"result\": null\n}"
						},
						{
							"name": "Open Case by ID - 412 Precondition Failed",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/{{apiPrefix}}/cases/:id/open",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"{{apiPrefix}}",
										"cases",
										":id",
										"open"
									],
									"variable": [
										{
											"key": "id",
											"value": "C-2022-0003",
											"description": "Case ID"
										}
									]
								}
							},
							"status": "Precondition Failed",
							"code": 412,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "96"
								},
								{
									"key": "ETag",
									"value": "W/\"60-C654pLckOtf/tkllkdFdv0rRes8\""
								},
								{
									"key": "Date",
									"value": "Sun, 19 Jun 2022 17:46:49 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"errors\": [\n        \"Case status is not closed but open\"\n    ],\n    \"statusCode\": 412,\n    \"result\": null\n}"
						}
					]
				},
				{
					"name": "Archive Case by ID",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.runForTest(() => {",
									"    pm.request.url.variables.add({",
									"        key: 'id',",
									"        value: pm.collectionVariables.get('caseId')",
									"    })",
									"})"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 412\", function () {",
									"    pm.response.to.have.status(412);",
									"});",
									"",
									"pm.test(\"Should return error 'Case status is not closed but open'\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.errors).to.eql([\"Case status is not closed but open\"]);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/{{apiPrefix}}/cases/:id/archive",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"{{apiPrefix}}",
								"cases",
								":id",
								"archive"
							],
							"variable": [
								{
									"key": "id",
									"value": "",
									"description": "Case ID"
								}
							]
						}
					},
					"response": [
						{
							"name": "Archive Case by ID - 200 OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/{{apiPrefix}}/cases/:id/archive",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"{{apiPrefix}}",
										"cases",
										":id",
										"archive"
									],
									"variable": [
										{
											"key": "id",
											"value": "C-2022-0003",
											"description": "Case ID"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "410"
								},
								{
									"key": "ETag",
									"value": "W/\"19a-Njk/f7S/MkixQnV4DD3KTg1+Gps\""
								},
								{
									"key": "Date",
									"value": "Sun, 19 Jun 2022 17:47:51 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"result\": {\n        \"_id\": \"C-2022-0003\",\n        \"notes\": [],\n        \"name\": \"Test Case\",\n        \"organizationId\": 0,\n        \"ownerUserId\": \"RGRyrQfrbq97ywgkpXSn2UYH\",\n        \"visibility\": \"private-to-users\",\n        \"assignedUserIds\": [],\n        \"startedOn\": \"2022-06-19T17:37:59.775Z\",\n        \"source\": \"user\",\n        \"status\": \"archived\",\n        \"createdAt\": \"2022-06-19T17:37:59.775Z\",\n        \"updatedAt\": \"2022-06-19T17:47:51.671Z\",\n        \"closedOn\": \"2022-06-19T17:47:49.001Z\"\n    },\n    \"statusCode\": 200,\n    \"errors\": []\n}"
						},
						{
							"name": "Archive Case by ID - 404 Not Found",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/{{apiPrefix}}/cases/:id/archive",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"{{apiPrefix}}",
										"cases",
										":id",
										"archive"
									],
									"variable": [
										{
											"key": "id",
											"value": "1",
											"description": "Case ID"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "100"
								},
								{
									"key": "ETag",
									"value": "W/\"64-FSTGVYIvEHKoHFyCla6GZasKk60\""
								},
								{
									"key": "Date",
									"value": "Sun, 19 Jun 2022 17:47:18 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"errors\": [\n        \"No case container found by provided id\"\n    ],\n    \"statusCode\": 404,\n    \"result\": null\n}"
						},
						{
							"name": "Archive Case by ID - 412 Precondition Failed",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/{{apiPrefix}}/cases/:id/archive",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"{{apiPrefix}}",
										"cases",
										":id",
										"archive"
									],
									"variable": [
										{
											"key": "id",
											"value": "C-2022-0003",
											"description": "Case ID"
										}
									]
								}
							},
							"status": "Precondition Failed",
							"code": 412,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "96"
								},
								{
									"key": "ETag",
									"value": "W/\"60-C654pLckOtf/tkllkdFdv0rRes8\""
								},
								{
									"key": "Date",
									"value": "Sun, 19 Jun 2022 17:47:28 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"errors\": [\n        \"Case status is not closed but open\"\n    ],\n    \"statusCode\": 412,\n    \"result\": null\n}"
						}
					]
				},
				{
					"name": "Change Owner of Case by ID",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const uuid = require('uuid')",
									"",
									"pm.runForTest(() => {",
									"    pm.request.url.variables.add({",
									"        key: 'id',",
									"        value: pm.collectionVariables.get('caseId')",
									"    })",
									"    ",
									"    const payload = JSON.parse(pm.request.body.raw)",
									"    payload.newOwnerId = uuid.v4().substr(0, 8);",
									"    pm.request.body.raw = JSON.stringify(payload)",
									"})"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"",
									"pm.test(\"Should return error 'Case status is not closed but open'\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.errors[0]).to.contains(\"not found.\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"newOwnerId\": \"user-id\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/{{apiPrefix}}/cases/:id/change-owner",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"{{apiPrefix}}",
								"cases",
								":id",
								"change-owner"
							],
							"variable": [
								{
									"key": "id",
									"value": "C-2022-0002",
									"description": "Case ID"
								}
							]
						},
						"description": "### Parameters\n\n| **Name**                             | **Constraints** |\n| ------------------------------------ | --------------- |\n| **newOwnerId** <br>string / required |                 |"
					},
					"response": [
						{
							"name": "Change Owner of Case by ID - 200 OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"newOwnerId\": \"RGRyrQfrbq97ywgkpXSn2UYH\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/{{apiPrefix}}/cases/:id/change-owner",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"{{apiPrefix}}",
										"cases",
										":id",
										"change-owner"
									],
									"variable": [
										{
											"key": "id",
											"value": "C-2022-0002",
											"description": "Case ID"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "372"
								},
								{
									"key": "ETag",
									"value": "W/\"174-/oZ0NCfUpN4rS5HdX5dcDgzEX6M\""
								},
								{
									"key": "Date",
									"value": "Sun, 19 Jun 2022 17:48:42 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"result\": {\n        \"_id\": \"C-2022-0002\",\n        \"notes\": [],\n        \"name\": \"Example\",\n        \"organizationId\": 2,\n        \"ownerUserId\": \"RGRyrQfrbq97ywgkpXSn2UYH\",\n        \"visibility\": \"public-to-organization\",\n        \"assignedUserIds\": [],\n        \"startedOn\": \"2022-06-19T13:01:12.479Z\",\n        \"source\": \"user\",\n        \"status\": \"open\",\n        \"createdAt\": \"2022-06-19T13:01:12.479Z\",\n        \"updatedAt\": \"2022-06-19T17:48:42.227Z\"\n    },\n    \"statusCode\": 200,\n    \"errors\": []\n}"
						},
						{
							"name": "Change Owner of Case by ID - 400 Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/{{apiPrefix}}/cases/:id/change-owner",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"{{apiPrefix}}",
										"cases",
										":id",
										"change-owner"
									],
									"variable": [
										{
											"key": "id",
											"value": "C-2022-0002",
											"description": "Case ID"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "124"
								},
								{
									"key": "ETag",
									"value": "W/\"7c-uAcjvwuyydYjPJaeQXMlsG7pJUY\""
								},
								{
									"key": "Date",
									"value": "Sun, 19 Jun 2022 17:51:59 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"errors\": [\n        \"newOwnerId must be a string\",\n        \"newOwnerId should not be empty\"\n    ],\n    \"statusCode\": 400,\n    \"result\": null\n}"
						},
						{
							"name": "Change Owner of Case by ID - 403 Forbidden",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"newOwnerId\": \"RGRyrQfrbq97ywgkpXSn2UYH\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/{{apiPrefix}}/cases/:id/change-owner",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"{{apiPrefix}}",
										"cases",
										":id",
										"change-owner"
									],
									"variable": [
										{
											"key": "id",
											"value": "C-2022-0002",
											"description": "Case ID"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "111"
								},
								{
									"key": "ETag",
									"value": "W/\"6f-eTe46OYVVc3Ki0MtZERbQIABulI\""
								},
								{
									"key": "Date",
									"value": "Sun, 19 Jun 2022 18:13:47 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"errors\": [\n        \"You are not authorized to access the resource(s).\"\n    ],\n    \"statusCode\": 403,\n    \"result\": null\n}"
						},
						{
							"name": "Change Owner of Case by ID - 404 Not Found",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"newOwnerId\": \"RGRyrQfrbq97ywgkpXSn2UYHa\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/{{apiPrefix}}/cases/:id/change-owner",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"{{apiPrefix}}",
										"cases",
										":id",
										"change-owner"
									],
									"variable": [
										{
											"key": "id",
											"value": "C-2022-00021",
											"description": "Case ID"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "100"
								},
								{
									"key": "ETag",
									"value": "W/\"64-FSTGVYIvEHKoHFyCla6GZasKk60\""
								},
								{
									"key": "Date",
									"value": "Sun, 19 Jun 2022 18:12:37 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"errors\": [\n        \"No case container found by provided id\"\n    ],\n    \"statusCode\": 404,\n    \"result\": null\n}"
						}
					]
				},
				{
					"name": "Check Case Name",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const uuid = require('uuid')",
									"",
									"pm.runForTest(() => {",
									"    pm.request.url.addQueryParams([`name=${uuid.v4()}`])",
									"})"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/{{apiPrefix}}/cases/check",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"{{apiPrefix}}",
								"cases",
								"check"
							],
							"query": [
								{
									"key": "name",
									"value": "First Case",
									"disabled": true
								}
							]
						}
					},
					"response": [
						{
							"name": "Check Case Name - 200 OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/{{apiPrefix}}/cases/check?name=First Case",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"{{apiPrefix}}",
										"cases",
										"check"
									],
									"query": [
										{
											"key": "name",
											"value": "First Case"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "60"
								},
								{
									"key": "ETag",
									"value": "W/\"3c-TTtmLYCE8mk8xBDYJQ3uAlPbpvA\""
								},
								{
									"key": "Date",
									"value": "Sun, 19 Jun 2022 17:51:39 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"result\": false,\n    \"statusCode\": 200,\n    \"errors\": []\n}"
						}
					]
				},
				{
					"name": "Get Case Activities by Case ID",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.runForTest(() => {",
									"    pm.request.url.variables.add({",
									"        key: 'id',",
									"        value: pm.collectionVariables.get('caseId')",
									"    })",
									"})"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/{{apiPrefix}}/cases/:id/activities",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"{{apiPrefix}}",
								"cases",
								":id",
								"activities"
							],
							"query": [
								{
									"key": "pageSize",
									"value": "10",
									"description": "How many results to return per page",
									"disabled": true
								},
								{
									"key": "pageNumber",
									"value": "1",
									"description": "Which page of results to return",
									"disabled": true
								},
								{
									"key": "sortBy",
									"value": "",
									"description": "Attribute name to order the responses by",
									"disabled": true
								},
								{
									"key": "sortType",
									"value": "",
									"description": "Either ASC or DESC",
									"disabled": true
								},
								{
									"key": "filter[performedBy]",
									"value": "",
									"disabled": true
								},
								{
									"key": "filter[startDate]",
									"value": "",
									"disabled": true
								},
								{
									"key": "filter[endDate]",
									"value": "",
									"disabled": true
								},
								{
									"key": "filter[types]",
									"value": "",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "",
									"description": "Case ID"
								}
							]
						},
						"description": "### Parameters\n\n| **Name** | **Constraints** |\n| --- | --- |\n| **pageNumber** <br>number / optional                 | default value: 1 <br>min value:1               |\n| **pageSize** <br>number / optional                   | default value: 10 <br>min value:1              |\n| **sortBy** <br>string / optional                     | default value: createdAt                       |\n| **sortType** <br>string / optional                   | default value: ASC <br>valid values: ASC, DESC |\n| **filter\\[performedBy\\]**  <br>number array / required |  |\n| **filter\\[types\\]**  <br>string / optional |  |\n| **filter\\[searchTerm\\]**  <br>string / optional |  |\n| **filter\\[occurredAt\\]**  <br>string / optional |  |"
					},
					"response": [
						{
							"name": "Get Case Activities by Case ID - 200 OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/{{apiPrefix}}/cases/:id/activities",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"{{apiPrefix}}",
										"cases",
										":id",
										"activities"
									],
									"query": [
										{
											"key": "performedBy",
											"value": "",
											"description": "Username",
											"disabled": true
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "C-2022-0002",
											"description": "Case ID"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "5767"
								},
								{
									"key": "ETag",
									"value": "W/\"1687-1Fh+PsO56FjjQ+N6BlJchfUbUwc\""
								},
								{
									"key": "Date",
									"value": "Sun, 19 Jun 2022 18:20:55 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"result\": {\n        \"entities\": [\n            {\n                \"_id\": 778256164190000,\n                \"createdAt\": \"2022-06-19T18:13:36.426Z\",\n                \"updatedAt\": \"2022-06-19T18:13:36.426Z\",\n                \"type\": \"CaseOwnerChangedEvent\",\n                \"performedBy\": \"Test\",\n                \"data\": {\n                    \"options\": {\n                        \"organizationIds\": [\n                            2\n                        ],\n                        \"username\": \"demo@binalyze.com\",\n                        \"apiTokenName\": \"Test\"\n                    },\n                    \"publishedDate\": \"2022-06-19T18:13:36.419Z\",\n                    \"eventVersion\": 4,\n                    \"eventSource\": \"API\",\n                    \"caseId\": \"C-2022-0002\",\n                    \"name\": \"Example\",\n                    \"oldCaseOwnerName\": \"test@binalyze.com\",\n                    \"newCaseOwnerName\": \"test@binalyze.com\"\n                },\n                \"organizationIds\": [\n                    2\n                ],\n                \"description\": \"Case “Example”'s owner is changed from “test@binalyze.com” to “test@binalyze.com”\"\n            },\n            {\n                \"_id\": 778256144220000,\n                \"createdAt\": \"2022-06-19T18:13:34.426Z\",\n                \"updatedAt\": \"2022-06-19T18:13:34.426Z\",\n                \"type\": \"CaseOwnerChangedEvent\",\n                \"performedBy\": \"Test\",\n                \"data\": {\n                    \"options\": {\n                        \"organizationIds\": [\n                            2\n                        ],\n                        \"username\": \"demo@binalyze.com\",\n                        \"apiTokenName\": \"Test\"\n                    },\n                    \"publishedDate\": \"2022-06-19T18:13:34.422Z\",\n                    \"eventVersion\": 4,\n                    \"eventSource\": \"API\",\n                    \"caseId\": \"C-2022-0002\",\n                    \"name\": \"Example\",\n                    \"oldCaseOwnerName\": \"test@binalyze.com\",\n                    \"newCaseOwnerName\": \"test@binalyze.com\"\n                },\n                \"organizationIds\": [\n                    2\n                ],\n                \"description\": \"Case “Example”'s owner is changed from “test@binalyze.com” to “test@binalyze.com”\"\n            },\n            {\n                \"_id\": 778256007640000,\n                \"createdAt\": \"2022-06-19T18:13:20.770Z\",\n                \"updatedAt\": \"2022-06-19T18:13:20.770Z\",\n                \"type\": \"CaseOwnerChangedEvent\",\n                \"performedBy\": \"Test\",\n                \"data\": {\n                    \"options\": {\n                        \"organizationIds\": [\n                            2\n                        ],\n                        \"username\": \"demo@binalyze.com\",\n                        \"apiTokenName\": \"Test\"\n                    },\n                    \"publishedDate\": \"2022-06-19T18:13:20.764Z\",\n                    \"eventVersion\": 4,\n                    \"eventSource\": \"API\",\n                    \"caseId\": \"C-2022-0002\",\n                    \"name\": \"Example\",\n                    \"oldCaseOwnerName\": \"test@binalyze.com\",\n                    \"newCaseOwnerName\": \"test@binalyze.com\"\n                },\n                \"organizationIds\": [\n                    2\n                ],\n                \"description\": \"Case “Example”'s owner is changed from “test@binalyze.com” to “test@binalyze.com”\"\n            },\n            {\n                \"_id\": 778252933130000,\n                \"createdAt\": \"2022-06-19T18:08:13.319Z\",\n                \"updatedAt\": \"2022-06-19T18:08:13.319Z\",\n                \"type\": \"CaseVisibilityTypeChangedEvent\",\n                \"performedBy\": \"demo@binalyze.com\",\n                \"data\": {\n                    \"options\": {\n                        \"organizationIds\": [\n                            2\n                        ],\n                        \"username\": \"demo@binalyze.com\"\n                    },\n                    \"publishedDate\": \"2022-06-19T18:08:13.313Z\",\n                    \"eventVersion\": 4,\n                    \"eventSource\": \"User\",\n                    \"caseId\": \"C-2022-0002\",\n                    \"name\": \"Example\",\n                    \"visibility\": \"public-to-organization\"\n                },\n                \"organizationIds\": [\n                    2\n                ],\n                \"description\": \"Case “Example” visibility changed to “public-to-organization”\"\n            },\n            {\n                \"_id\": 778252898940000,\n                \"createdAt\": \"2022-06-19T18:08:09.903Z\",\n                \"updatedAt\": \"2022-06-19T18:08:09.903Z\",\n                \"type\": \"CaseVisibilityTypeChangedEvent\",\n                \"performedBy\": \"demo@binalyze.com\",\n                \"data\": {\n                    \"options\": {\n                        \"organizationIds\": [\n                            2\n                        ],\n                        \"username\": \"demo@binalyze.com\"\n                    },\n                    \"publishedDate\": \"2022-06-19T18:08:09.894Z\",\n                    \"eventVersion\": 4,\n                    \"eventSource\": \"User\",\n                    \"caseId\": \"C-2022-0002\",\n                    \"name\": \"Example\",\n                    \"visibility\": \"private-to-users\"\n                },\n                \"organizationIds\": [\n                    2\n                ],\n                \"description\": \"Case “Example” visibility changed to “private-to-users”\"\n            },\n            {\n                \"_id\": 778243149850000,\n                \"createdAt\": \"2022-06-19T17:51:54.988Z\",\n                \"updatedAt\": \"2022-06-19T17:51:54.988Z\",\n                \"type\": \"CaseOwnerChangedEvent\",\n                \"performedBy\": \"Test\",\n                \"data\": {\n                    \"options\": {\n                        \"organizationIds\": [\n                            2\n                        ],\n                        \"username\": \"demo@binalyze.com\",\n                        \"apiTokenName\": \"Test\"\n                    },\n                    \"publishedDate\": \"2022-06-19T17:51:54.985Z\",\n                    \"eventVersion\": 4,\n                    \"eventSource\": \"API\",\n                    \"caseId\": \"C-2022-0002\",\n                    \"name\": \"Example\",\n                    \"newCaseOwnerName\": \"test@binalyze.com\"\n                },\n                \"organizationIds\": [\n                    2\n                ],\n                \"description\": \"Case “Example”'s owner is changed from “undefined” to “test@binalyze.com”\"\n            },\n            {\n                \"_id\": 778241332260000,\n                \"createdAt\": \"2022-06-19T17:48:53.234Z\",\n                \"updatedAt\": \"2022-06-19T17:48:53.234Z\",\n                \"type\": \"CaseOwnerChangedEvent\",\n                \"performedBy\": \"Test\",\n                \"data\": {\n                    \"options\": {\n                        \"organizationIds\": [\n                            2\n                        ],\n                        \"username\": \"demo@binalyze.com\",\n                        \"apiTokenName\": \"Test\"\n                    },\n                    \"publishedDate\": \"2022-06-19T17:48:53.226Z\",\n                    \"eventVersion\": 4,\n                    \"eventSource\": \"API\",\n                    \"caseId\": \"C-2022-0002\",\n                    \"name\": \"Example\",\n                    \"oldCaseOwnerName\": \"test@binalyze.com\",\n                    \"newCaseOwnerName\": \"test@binalyze.com\"\n                },\n                \"organizationIds\": [\n                    2\n                ],\n                \"description\": \"Case “Example”'s owner is changed from “test@binalyze.com” to “test@binalyze.com”\"\n            },\n            {\n                \"_id\": 778241222290000,\n                \"createdAt\": \"2022-06-19T17:48:42.231Z\",\n                \"updatedAt\": \"2022-06-19T17:48:42.231Z\",\n                \"type\": \"CaseOwnerChangedEvent\",\n                \"performedBy\": \"Test\",\n                \"data\": {\n                    \"options\": {\n                        \"organizationIds\": [\n                            2\n                        ],\n                        \"username\": \"demo@binalyze.com\",\n                        \"apiTokenName\": \"Test\"\n                    },\n                    \"publishedDate\": \"2022-06-19T17:48:42.229Z\",\n                    \"eventVersion\": 4,\n                    \"eventSource\": \"API\",\n                    \"caseId\": \"C-2022-0002\",\n                    \"name\": \"Example\",\n                    \"oldCaseOwnerName\": \"demo@binalyze.com\",\n                    \"newCaseOwnerName\": \"test@binalyze.com\"\n                },\n                \"organizationIds\": [\n                    2\n                ],\n                \"description\": \"Case “Example”'s owner is changed from “demo@binalyze.com” to “test@binalyze.com”\"\n            },\n            {\n                \"_id\": 778068724870000,\n                \"createdAt\": \"2022-06-19T13:01:12.490Z\",\n                \"updatedAt\": \"2022-06-19T13:01:12.490Z\",\n                \"type\": \"CaseCreatedEvent\",\n                \"performedBy\": \"demo@binalyze.com\",\n                \"data\": {\n                    \"options\": {\n                        \"organizationIds\": [\n                            2\n                        ],\n                        \"username\": \"demo@binalyze.com\"\n                    },\n                    \"publishedDate\": \"2022-06-19T13:01:12.487Z\",\n                    \"eventVersion\": 4,\n                    \"eventSource\": \"User\",\n                    \"caseId\": \"C-2022-0002\",\n                    \"name\": \"Example\",\n                    \"visibility\": \"public-to-organization\",\n                    \"ownerUser\": \"demo@binalyze.com\",\n                    \"assignedUsers\": []\n                },\n                \"organizationIds\": [\n                    2\n                ],\n                \"description\": \"Case “Example” is created\"\n            }\n        ],\n        \"filters\": [\n            {\n                \"name\": \"types\",\n                \"type\": \"checkbox\",\n                \"options\": [\n                    \"CaseClosedEvent\",\n                    \"EndpointAddedToCaseEvent\",\n                    \"EndpointTaskAddedToCaseEvent\",\n                    \"TaskAssignmentAddedToCaseEvent\",\n                    \"EndpointRemovedFromCaseEvent\",\n                    \"TaskAssignmentRemovedFromCaseEvent\",\n                    \"CaseNoteAddedEvent\",\n                    \"CaseArchivedEvent\",\n                    \"CaseOwnerChangedEvent\",\n                    \"CaseCreatedEvent\",\n                    \"CaseNoteDeletedEvent\",\n                    \"CaseDeletedEvent\",\n                    \"CaseNoteEditedEvent\",\n                    \"CaseReopenedEvent\",\n                    \"CaseAssignedUsersChangedEvent\",\n                    \"CaseNameChangedEvent\",\n                    \"CaseVisibilityTypeChangedEvent\"\n                ],\n                \"filterUrl\": null\n            },\n            {\n                \"name\": \"occurredAt\",\n                \"type\": \"daterange\",\n                \"options\": [],\n                \"filterUrl\": null\n            }\n        ],\n        \"sortables\": [\n            \"types\",\n            \"performedBy\",\n            \"occurredAt\"\n        ],\n        \"totalEntityCount\": 9,\n        \"currentPage\": 1,\n        \"pageSize\": 10,\n        \"previousPage\": 0,\n        \"totalPageCount\": 1,\n        \"nextPage\": 2\n    },\n    \"statusCode\": 200,\n    \"errors\": []\n}"
						},
						{
							"name": "Get Case Activities by Case ID - 404 Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/{{apiPrefix}}/cases/:id/activities",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"{{apiPrefix}}",
										"cases",
										":id",
										"activities"
									],
									"query": [
										{
											"key": "performedBy",
											"value": "",
											"description": "Username",
											"disabled": true
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "1",
											"description": "Case ID"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "100"
								},
								{
									"key": "ETag",
									"value": "W/\"64-FSTGVYIvEHKoHFyCla6GZasKk60\""
								},
								{
									"key": "Date",
									"value": "Sun, 19 Jun 2022 18:21:32 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"errors\": [\n        \"No case container found by provided id\"\n    ],\n    \"statusCode\": 404,\n    \"result\": null\n}"
						}
					]
				},
				{
					"name": "Get Case Endpoints by Case ID",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.runForTest(() => {",
									"    pm.request.url.variables.add({",
									"        key: 'id',",
									"        value: pm.collectionVariables.get('caseId')",
									"    })",
									"})"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/{{apiPrefix}}/cases/:id/endpoints?filter[organizationIds]=0",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"{{apiPrefix}}",
								"cases",
								":id",
								"endpoints"
							],
							"query": [
								{
									"key": "filter[searchTerm]",
									"value": "",
									"disabled": true
								},
								{
									"key": "filter[onlineStatus]",
									"value": "",
									"disabled": true
								},
								{
									"key": "filter[issue]",
									"value": "",
									"disabled": true
								},
								{
									"key": "filter[groupFullPath]",
									"value": "",
									"disabled": true
								},
								{
									"key": "filter[groupId]",
									"value": "",
									"disabled": true
								},
								{
									"key": "filter[name]",
									"value": "",
									"disabled": true
								},
								{
									"key": "filter[ipAddress]",
									"value": "",
									"disabled": true
								},
								{
									"key": "filter[managedStatus]",
									"value": "",
									"disabled": true
								},
								{
									"key": "filter[tags]",
									"value": "",
									"disabled": true
								},
								{
									"key": "filter[version]",
									"value": "",
									"disabled": true
								},
								{
									"key": "filter[policy]",
									"value": "",
									"disabled": true
								},
								{
									"key": "filter[platform]",
									"value": "",
									"disabled": true
								},
								{
									"key": "filter[unisolated]",
									"value": "",
									"disabled": true
								},
								{
									"key": "pageNumber",
									"value": "10",
									"description": "Which page of results to return",
									"disabled": true
								},
								{
									"key": "pageSize",
									"value": "1",
									"description": "How many results to return per page",
									"disabled": true
								},
								{
									"key": "sortBy",
									"value": "",
									"description": "Attribute name to order the responses by",
									"disabled": true
								},
								{
									"key": "sortType",
									"value": "",
									"description": "Either ASC or DESC",
									"disabled": true
								},
								{
									"key": "filter[organizationIds]",
									"value": "0"
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "",
									"description": "Case ID"
								}
							]
						},
						"description": "### Parameters\n\n| **Name** | **Constraints** |\n| --- | --- |\n| **pageNumber** <br>number / optional                 | default value: 1 <br>min value:1               |\n| **pageSize** <br>number / optional                   | default value: 10 <br>min value:1              |\n| **sortBy** <br>string / optional                     | default value: createdAt                       |\n| **sortType** <br>string / optional                   | default value: ASC <br>valid values: ASC, DESC |\n| **filter\\[organizationIds\\]**  <br>number array / required |  |\n| **filter\\[searchTerm\\]**  <br>string / optional |  |\n| **filter\\[name\\]**  <br>string / optional |  |\n| **filter\\[ipAddress\\]**  <br>string / optional |  |\n| **filter\\[groupId\\]**  <br>string / optional |  |\n| **filter\\[groupFullPath\\]**  <br>string / optional |  |\n| **filter\\[label\\]**  <br>string / optional |  |\n| **filter\\[lastSeen\\]**  <br>string / optional | Example: 2023-03-06T21:00:00.000Z,2023-03-24T21:00:00.000Z |\n| **filter\\[managedStatus\\]**  <br>string array / optional | valid values: unmanaged, managed, off-network |\n| **filter\\[isolationStatus\\]**  <br>string array / optional | valid values: isolating, isolated, unisolating, unisolated |\n| **filter\\[platform\\]**  <br>string array / optional | valid values: windows, linux, darwin |\n| **filter\\[issue\\]**  <br>string array / optional | valid values: unreachable, old-version, update-required |\n| **filter\\[onlineStatus\\]**  <br>string array / optional | valid values: online, offline |\n| **filter\\[tags\\]**  <br>string array / optional |  |\n| **filter\\[version\\]**  <br>string / optional |  |\n| **filter\\[policy\\]**  <br>string / optional |  |\n| **filter\\[includedEndpointIds\\]**  <br>string array / optional |  |\n| **filter\\[excludedEndpointIds\\]**  <br>string array / optional |  |\n| **filter\\[awsRegions\\]**  <br>string array / optional |  |\n| **filter\\[azureRegions\\]**  <br>string array / optional |  |"
					},
					"response": [
						{
							"name": "Get Case Endpoints by Case ID - 200 OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/{{apiPrefix}}/cases/:id/endpoints?filter[organizationIds]=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"{{apiPrefix}}",
										"cases",
										":id",
										"endpoints"
									],
									"query": [
										{
											"key": "filter[searchTerm]",
											"value": "windows",
											"disabled": true
										},
										{
											"key": "filter[onlineStatus]",
											"value": "offline",
											"disabled": true
										},
										{
											"key": "filter[issue]",
											"value": "unreachable",
											"disabled": true
										},
										{
											"key": "filter[groupFullPath]",
											"value": "All Endpoints\\Computers",
											"disabled": true
										},
										{
											"key": "filter[groupId]",
											"value": "60d119fb-e740-441c-8ef1-dc86ab684231",
											"disabled": true
										},
										{
											"key": "filter[name]",
											"value": "PC-0",
											"disabled": true
										},
										{
											"key": "filter[ipAddress]",
											"value": "133",
											"disabled": true
										},
										{
											"key": "filter[managedStatus]",
											"value": "managed",
											"disabled": true
										},
										{
											"key": "filter[tags]",
											"value": "sZY3BS3kQZbsao6paM5pkrKo",
											"disabled": true
										},
										{
											"key": "filter[version]",
											"value": "2.5.9",
											"disabled": true
										},
										{
											"key": "filter[policy]",
											"value": "test-policy",
											"disabled": true
										},
										{
											"key": "filter[platform]",
											"value": "windows,linux",
											"disabled": true
										},
										{
											"key": "filter[unisolated]",
											"value": "unisolated",
											"disabled": true
										},
										{
											"key": "pageSize",
											"value": "100",
											"disabled": true
										},
										{
											"key": "pageNumber",
											"value": "1",
											"disabled": true
										},
										{
											"key": "sortBy",
											"value": "name",
											"disabled": true
										},
										{
											"key": "sortType",
											"value": "ASC",
											"disabled": true
										},
										{
											"key": "filter[organizationIds]",
											"value": "0"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "C-2022-0001",
											"description": "Case ID"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "7867"
								},
								{
									"key": "ETag",
									"value": "W/\"1ebb-O/i99Q5yobFa1mFwYWszrqjjn8U\""
								},
								{
									"key": "Date",
									"value": "Sun, 19 Jun 2022 18:40:17 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"result\": {\n        \"entities\": [\n            {\n                \"platform\": \"windows\",\n                \"tags\": [],\n                \"isolationStatus\": \"unisolated\",\n                \"_id\": \"0c456814-7aab-4456-826a-c1c805512cc0\",\n                \"createdAt\": \"2022-06-19T09:24:43.655Z\",\n                \"updatedAt\": \"2022-06-19T09:24:43.655Z\",\n                \"organizationId\": 0,\n                \"ipAddress\": \"127.0.0.1\",\n                \"name\": \"My windows 6\",\n                \"groupId\": \"b6f33983-539c-4c07-a2ca-52af67fafbf9\",\n                \"groupFullPath\": \"Computers\",\n                \"os\": \"windows\",\n                \"isServer\": false,\n                \"isManaged\": true,\n                \"lastSeen\": \"2022-06-19T09:24:43.655Z\",\n                \"version\": \"2.10.0\",\n                \"versionNo\": 2010000,\n                \"registeredAt\": \"2022-06-19T09:24:43.655Z\",\n                \"securityToken\": \"f8576144-0f4c-4f9e-b502-a57f446c4d02\",\n                \"onlineStatus\": \"offline\",\n                \"issues\": [],\n                \"label\": null,\n                \"waitingForVersionUpdateFix\": false\n            },\n            {\n                \"platform\": \"windows\",\n                \"tags\": [],\n                \"isolationStatus\": \"unisolated\",\n                \"_id\": \"ab028d1a-9501-4d21-926b-d05652bbb37e\",\n                \"createdAt\": \"2022-06-19T09:24:42.769Z\",\n                \"updatedAt\": \"2022-06-19T09:24:42.769Z\",\n                \"organizationId\": 0,\n                \"ipAddress\": \"127.0.0.1\",\n                \"name\": \"My windows 5\",\n                \"groupId\": \"b6f33983-539c-4c07-a2ca-52af67fafbf9\",\n                \"groupFullPath\": \"Computers\",\n                \"os\": \"windows\",\n                \"isServer\": false,\n                \"isManaged\": true,\n                \"lastSeen\": \"2022-06-19T09:24:42.769Z\",\n                \"version\": \"2.10.0\",\n                \"versionNo\": 2010000,\n                \"registeredAt\": \"2022-06-19T09:24:42.769Z\",\n                \"securityToken\": \"ff260390-0087-4fd0-8c21-b3ff8caf9640\",\n                \"onlineStatus\": \"offline\",\n                \"issues\": [],\n                \"label\": null,\n                \"waitingForVersionUpdateFix\": false\n            },\n            {\n                \"platform\": \"windows\",\n                \"tags\": [],\n                \"isolationStatus\": \"unisolated\",\n                \"_id\": \"66937d78-8860-445f-8abd-0bc07de3f01d\",\n                \"createdAt\": \"2022-06-19T09:24:41.411Z\",\n                \"updatedAt\": \"2022-06-19T09:24:41.411Z\",\n                \"organizationId\": 0,\n                \"ipAddress\": \"127.0.0.1\",\n                \"name\": \"My windows 4\",\n                \"groupId\": \"b6f33983-539c-4c07-a2ca-52af67fafbf9\",\n                \"groupFullPath\": \"Computers\",\n                \"os\": \"windows\",\n                \"isServer\": false,\n                \"isManaged\": true,\n                \"lastSeen\": \"2022-06-19T09:24:41.410Z\",\n                \"version\": \"2.10.0\",\n                \"versionNo\": 2010000,\n                \"registeredAt\": \"2022-06-19T09:24:41.411Z\",\n                \"securityToken\": \"3e3066ca-ad54-48ba-ba29-15ddc9b51a87\",\n                \"onlineStatus\": \"offline\",\n                \"issues\": [],\n                \"label\": null,\n                \"waitingForVersionUpdateFix\": false\n            },\n            {\n                \"platform\": \"windows\",\n                \"tags\": [],\n                \"isolationStatus\": \"unisolated\",\n                \"_id\": \"32ff604a-9867-4ab1-8015-d60a0e778d9a\",\n                \"createdAt\": \"2022-06-19T09:24:36.710Z\",\n                \"updatedAt\": \"2022-06-19T09:24:36.710Z\",\n                \"organizationId\": 0,\n                \"ipAddress\": \"127.0.0.1\",\n                \"name\": \"My windows 2\",\n                \"groupId\": \"b6f33983-539c-4c07-a2ca-52af67fafbf9\",\n                \"groupFullPath\": \"Computers\",\n                \"os\": \"Linux\",\n                \"isServer\": false,\n                \"isManaged\": true,\n                \"lastSeen\": \"2022-06-19T09:24:36.709Z\",\n                \"version\": \"2.10.0\",\n                \"versionNo\": 2010000,\n                \"registeredAt\": \"2022-06-19T09:24:36.709Z\",\n                \"securityToken\": \"c57c37b4-ea75-440e-bbad-b70d9e73939b\",\n                \"onlineStatus\": \"offline\",\n                \"issues\": [],\n                \"label\": null,\n                \"waitingForVersionUpdateFix\": false\n            },\n            {\n                \"platform\": \"windows\",\n                \"tags\": [],\n                \"isolationStatus\": \"unisolated\",\n                \"_id\": \"eb1eedca-d461-4c5c-8e71-c686c4c7d9da\",\n                \"createdAt\": \"2022-06-19T09:24:35.799Z\",\n                \"updatedAt\": \"2022-06-19T09:24:35.799Z\",\n                \"organizationId\": 0,\n                \"ipAddress\": \"127.0.0.1\",\n                \"name\": \"My windows 1\",\n                \"groupId\": \"b6f33983-539c-4c07-a2ca-52af67fafbf9\",\n                \"groupFullPath\": \"Computers\",\n                \"os\": \"Linux\",\n                \"isServer\": false,\n                \"isManaged\": true,\n                \"lastSeen\": \"2022-06-19T09:24:35.799Z\",\n                \"version\": \"2.10.0\",\n                \"versionNo\": 2010000,\n                \"registeredAt\": \"2022-06-19T09:24:35.799Z\",\n                \"securityToken\": \"43fbb0fc-6690-45e3-9bd1-48ea51e62ecf\",\n                \"onlineStatus\": \"offline\",\n                \"issues\": [],\n                \"label\": null,\n                \"waitingForVersionUpdateFix\": false\n            },\n            {\n                \"platform\": \"linux\",\n                \"tags\": [],\n                \"isolationStatus\": \"unisolated\",\n                \"_id\": \"666de928-47f0-474e-8204-a3191195cef6\",\n                \"createdAt\": \"2022-06-19T09:24:26.462Z\",\n                \"updatedAt\": \"2022-06-19T09:24:26.462Z\",\n                \"organizationId\": 0,\n                \"ipAddress\": \"127.0.0.1\",\n                \"name\": \"My Linux 10\",\n                \"groupId\": \"b6f33983-539c-4c07-a2ca-52af67fafbf9\",\n                \"groupFullPath\": \"Computers\",\n                \"os\": \"Linux\",\n                \"isServer\": false,\n                \"isManaged\": true,\n                \"lastSeen\": \"2022-06-19T09:24:26.462Z\",\n                \"version\": \"2.10.0\",\n                \"versionNo\": 2010000,\n                \"registeredAt\": \"2022-06-19T09:24:26.462Z\",\n                \"securityToken\": \"ca3f62ee-c59c-4131-9681-2104d249a7eb\",\n                \"onlineStatus\": \"offline\",\n                \"issues\": [],\n                \"label\": null,\n                \"waitingForVersionUpdateFix\": false\n            },\n            {\n                \"platform\": \"linux\",\n                \"tags\": [],\n                \"isolationStatus\": \"unisolated\",\n                \"_id\": \"c6fa76d8-fc17-4ad9-9891-6db4678c2aab\",\n                \"createdAt\": \"2022-06-19T09:24:25.085Z\",\n                \"updatedAt\": \"2022-06-19T09:24:25.085Z\",\n                \"organizationId\": 0,\n                \"ipAddress\": \"127.0.0.1\",\n                \"name\": \"My Linux 9\",\n                \"groupId\": \"b6f33983-539c-4c07-a2ca-52af67fafbf9\",\n                \"groupFullPath\": \"Computers\",\n                \"os\": \"Linux\",\n                \"isServer\": false,\n                \"isManaged\": true,\n                \"lastSeen\": \"2022-06-19T09:24:25.085Z\",\n                \"version\": \"2.10.0\",\n                \"versionNo\": 2010000,\n                \"registeredAt\": \"2022-06-19T09:24:25.085Z\",\n                \"securityToken\": \"907924bb-e627-4869-82ed-8c45629807f6\",\n                \"onlineStatus\": \"offline\",\n                \"issues\": [],\n                \"label\": null,\n                \"waitingForVersionUpdateFix\": false\n            },\n            {\n                \"platform\": \"linux\",\n                \"tags\": [],\n                \"isolationStatus\": \"unisolated\",\n                \"_id\": \"d78fde88-0cd0-4c8f-be9b-46ca60072f35\",\n                \"createdAt\": \"2022-06-19T09:24:23.385Z\",\n                \"updatedAt\": \"2022-06-19T09:24:23.385Z\",\n                \"organizationId\": 0,\n                \"ipAddress\": \"127.0.0.1\",\n                \"name\": \"My Linux 8\",\n                \"groupId\": \"b6f33983-539c-4c07-a2ca-52af67fafbf9\",\n                \"groupFullPath\": \"Computers\",\n                \"os\": \"Linux\",\n                \"isServer\": false,\n                \"isManaged\": true,\n                \"lastSeen\": \"2022-06-19T09:24:23.385Z\",\n                \"version\": \"2.10.0\",\n                \"versionNo\": 2010000,\n                \"registeredAt\": \"2022-06-19T09:24:23.385Z\",\n                \"securityToken\": \"569a6ed5-947a-45e6-a3f1-82d0ebc94ab5\",\n                \"onlineStatus\": \"offline\",\n                \"issues\": [],\n                \"label\": null,\n                \"waitingForVersionUpdateFix\": false\n            },\n            {\n                \"platform\": \"linux\",\n                \"tags\": [],\n                \"isolationStatus\": \"unisolated\",\n                \"_id\": \"6e7ac334-a9e1-4b2b-8cc7-9cbed25e5a06\",\n                \"createdAt\": \"2022-06-19T09:24:21.707Z\",\n                \"updatedAt\": \"2022-06-19T09:24:21.707Z\",\n                \"organizationId\": 0,\n                \"ipAddress\": \"127.0.0.1\",\n                \"name\": \"My Linux 7\",\n                \"groupId\": \"b6f33983-539c-4c07-a2ca-52af67fafbf9\",\n                \"groupFullPath\": \"Computers\",\n                \"os\": \"Linux\",\n                \"isServer\": false,\n                \"isManaged\": true,\n                \"lastSeen\": \"2022-06-19T09:24:21.707Z\",\n                \"version\": \"2.10.0\",\n                \"versionNo\": 2010000,\n                \"registeredAt\": \"2022-06-19T09:24:21.707Z\",\n                \"securityToken\": \"ad5035b4-32cd-4bb8-aee9-019c50e0b750\",\n                \"onlineStatus\": \"offline\",\n                \"issues\": [],\n                \"label\": null,\n                \"waitingForVersionUpdateFix\": false\n            },\n            {\n                \"platform\": \"linux\",\n                \"tags\": [],\n                \"isolationStatus\": \"unisolated\",\n                \"_id\": \"371b0408-536a-4bb8-9031-0fc4d3fa3d74\",\n                \"createdAt\": \"2022-06-19T09:24:20.641Z\",\n                \"updatedAt\": \"2022-06-19T09:24:20.641Z\",\n                \"organizationId\": 0,\n                \"ipAddress\": \"127.0.0.1\",\n                \"name\": \"My Linux 6\",\n                \"groupId\": \"b6f33983-539c-4c07-a2ca-52af67fafbf9\",\n                \"groupFullPath\": \"Computers\",\n                \"os\": \"Linux\",\n                \"isServer\": false,\n                \"isManaged\": true,\n                \"lastSeen\": \"2022-06-19T09:24:20.640Z\",\n                \"version\": \"2.10.0\",\n                \"versionNo\": 2010000,\n                \"registeredAt\": \"2022-06-19T09:24:20.640Z\",\n                \"securityToken\": \"1ca448bd-77d9-4e40-bf90-62f2932dd3f2\",\n                \"onlineStatus\": \"offline\",\n                \"issues\": [],\n                \"label\": null,\n                \"waitingForVersionUpdateFix\": false\n            }\n        ],\n        \"filters\": [\n            {\n                \"name\": \"name\",\n                \"type\": \"text\",\n                \"options\": [],\n                \"filterUrl\": null\n            },\n            {\n                \"name\": \"label\",\n                \"type\": \"text\",\n                \"options\": [],\n                \"filterUrl\": null\n            },\n            {\n                \"name\": \"ipAddress\",\n                \"type\": \"text\",\n                \"options\": [],\n                \"filterUrl\": null\n            },\n            {\n                \"name\": \"version\",\n                \"type\": \"text\",\n                \"options\": [],\n                \"filterUrl\": null\n            },\n            {\n                \"name\": \"managedStatus\",\n                \"type\": \"checkbox\",\n                \"options\": [\n                    \"unmanaged\",\n                    \"managed\"\n                ],\n                \"filterUrl\": null\n            },\n            {\n                \"name\": \"isolationStatus\",\n                \"type\": \"checkbox\",\n                \"options\": [\n                    \"isolating\",\n                    \"isolated\",\n                    \"unisolating\",\n                    \"unisolated\"\n                ],\n                \"filterUrl\": null\n            },\n            {\n                \"name\": \"onlineStatus\",\n                \"type\": \"checkbox\",\n                \"options\": [\n                    \"online\",\n                    \"offline\"\n                ],\n                \"filterUrl\": null\n            },\n            {\n                \"name\": \"issue\",\n                \"type\": \"radio\",\n                \"options\": [\n                    \"unreachable\",\n                    \"old-version\",\n                    \"update-required\"\n                ],\n                \"filterUrl\": null\n            },\n            {\n                \"name\": \"platform\",\n                \"type\": \"checkbox\",\n                \"options\": [\n                    \"windows\",\n                    \"linux\",\n                    \"darwin\"\n                ],\n                \"filterUrl\": null\n            },\n            {\n                \"name\": \"groupFullPath\",\n                \"type\": \"text\",\n                \"options\": [],\n                \"filterUrl\": null\n            },\n            {\n                \"name\": \"tags\",\n                \"type\": \"checkbox\",\n                \"options\": [\n                    \"Domain Controller\",\n                    \"IIS Web Server\",\n                    \"Web Server\",\n                    \"Mail Server\",\n                    \"MSSQL Server\",\n                    \"Docker\",\n                    \"Kubernetes\",\n                    \"Apache\",\n                    \"Redis\",\n                    \"Mysql\",\n                    \"Rabbitmq\"\n                ],\n                \"filterUrl\": null\n            },\n            {\n                \"name\": \"organizationIds\",\n                \"type\": \"checkbox\",\n                \"options\": [\n                    {\n                        \"label\": \"Binalyze\",\n                        \"value\": 0\n                    },\n                    {\n                        \"label\": \"Binalyze UK\",\n                        \"value\": 1\n                    },\n                    {\n                        \"label\": \"Binalyze EU\",\n                        \"value\": 2\n                    }\n                ],\n                \"filterUrl\": null\n            },\n            {\n                \"name\": \"policy\",\n                \"type\": \"checkbox\",\n                \"options\": [\n                    \"Default Policy\"\n                ],\n                \"filterUrl\": null\n            }\n        ],\n        \"sortables\": [\n            \"name\",\n            \"isManaged\",\n            \"ipAddress\",\n            \"lastSeen\",\n            \"version\"\n        ],\n        \"totalEntityCount\": 19,\n        \"currentPage\": 1,\n        \"pageSize\": 10,\n        \"previousPage\": 0,\n        \"totalPageCount\": 2,\n        \"nextPage\": 2\n    },\n    \"statusCode\": 200,\n    \"errors\": []\n}"
						}
					]
				},
				{
					"name": "Get Case Tasks by Case ID",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.runForTest(() => {",
									"    pm.request.url.variables.add({",
									"        key: 'id',",
									"        value: pm.collectionVariables.get('caseId')",
									"    })",
									"})"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/{{apiPrefix}}/cases/:id/tasks?filter[organizationIds]=0",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"{{apiPrefix}}",
								"cases",
								":id",
								"tasks"
							],
							"query": [
								{
									"key": "filter[searchTerm]",
									"value": "",
									"disabled": true
								},
								{
									"key": "filter[name]",
									"value": "",
									"disabled": true
								},
								{
									"key": "filter[status]",
									"value": "",
									"disabled": true
								},
								{
									"key": "pageSize",
									"value": "10",
									"description": "How many results to return per page",
									"disabled": true
								},
								{
									"key": "pageNumber",
									"value": "1",
									"description": "Which page of results to return",
									"disabled": true
								},
								{
									"key": "sortBy",
									"value": "",
									"description": "Attribute name to order the responses by",
									"disabled": true
								},
								{
									"key": "sortType",
									"value": "",
									"description": "Either ASC or DESC",
									"disabled": true
								},
								{
									"key": "filter[startedBy]",
									"value": "",
									"disabled": true
								},
								{
									"key": "filter[type]",
									"value": "",
									"disabled": true
								},
								{
									"key": "filter[executionType]",
									"value": "",
									"disabled": true
								},
								{
									"key": "filter[organizationIds]",
									"value": "0"
								},
								{
									"key": "filter[assetNames]",
									"value": "",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "id",
									"value": ""
								}
							]
						},
						"description": "| **Name** | **Constraints** |\n| --- | --- |\n| **pageNumber**  <br>number / optional | default value: 1  <br>min value:1 |\n| **pageSize**  <br>number / optional | default value: 10  <br>min value:1 |\n| **sortBy**  <br>string / optional | default value: createdAt |\n| **sortType**  <br>string / optional | default value: ASC  <br>valid values: ASC, DESC |\n| **filter\\[searchTerm\\]**  <br>string / optional |  |\n| **filter\\[name\\]**  <br>string / optional |  |\n| **filter\\[endpointIds\\]**  <br>string / optional |  |\n| **filter\\[executionType\\]**  <br>string / optional | valid values: instant, scheduled |\n| **filter\\[status\\]**  <br>string / optional | valid values: scheduled, assigned, processing, completed, failed, expired, cancelled, compressing, uploading, analyzing, partially-completed |\n| **filter\\[type\\]**  <br>string / optional | valid values: acquisition, offline-acquisition, triage, offline-triage, investigation, interact-shell, baseline-comparison, baseline-acquisition, acquire-image |\n| **filter\\[assetNames\\]**  <br>string / optional | comma separated asset names can be provided |"
					},
					"response": [
						{
							"name": "Get Case Tasks by Case ID - 200 OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/{{apiPrefix}}/cases/:id/tasks?filter[organizationIds]=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"{{apiPrefix}}",
										"cases",
										":id",
										"tasks"
									],
									"query": [
										{
											"key": "filter[searchTerm]",
											"value": "",
											"disabled": true
										},
										{
											"key": "filter[name]",
											"value": "PC-0",
											"disabled": true
										},
										{
											"key": "filter[status]",
											"value": "open",
											"disabled": true
										},
										{
											"key": "pageSize",
											"value": "100",
											"disabled": true
										},
										{
											"key": "pageNumber",
											"value": "1",
											"disabled": true
										},
										{
											"key": "sortBy",
											"value": "name",
											"disabled": true
										},
										{
											"key": "sortType",
											"value": "ASC",
											"disabled": true
										},
										{
											"key": "filter[startedBy]",
											"value": "air2@binalyze.com",
											"disabled": true
										},
										{
											"key": "filter[type]",
											"value": "triage",
											"disabled": true
										},
										{
											"key": "filter[executionType]",
											"value": "instant",
											"disabled": true
										},
										{
											"key": "filter[organizationIds]",
											"value": "0"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "C-2022-0001"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "5305"
								},
								{
									"key": "ETag",
									"value": "W/\"14b9-kc7BJU1YYT5tTqeV/yUs4+/fi7k\""
								},
								{
									"key": "Date",
									"value": "Sun, 19 Jun 2022 18:40:32 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"result\": {\n        \"entities\": [\n            {\n                \"_id\": \"cdba5bbd-890f-4014-9715-8dcbe7eaebfb\",\n                \"taskId\": \"f04666c9-62c7-4cb0-8638-967f05eb7936\",\n                \"name\": \"Test Baseline Acquisition 001\",\n                \"type\": \"baseline-acquisition\",\n                \"endpointId\": \"391aed05-d43c-49c5-8245-6ea386ab62cf\",\n                \"endpointName\": \"My Linux 2\",\n                \"organizationId\": 0,\n                \"status\": \"assigned\",\n                \"recurrence\": null,\n                \"progress\": 0,\n                \"duration\": null,\n                \"caseIds\": [\n                    \"C-2022-0001\"\n                ],\n                \"isComparable\": true,\n                \"createdAt\": \"2022-06-19T09:27:27.614Z\",\n                \"updatedAt\": \"2022-06-19T09:27:27.614Z\",\n                \"response\": null\n            },\n            {\n                \"_id\": \"a558a789-4990-41f4-82a8-c2835fc8fb33\",\n                \"taskId\": \"692cf100-4ee6-455e-a9d6-2ee81ba85579\",\n                \"name\": \"Test Triage 002\",\n                \"type\": \"triage\",\n                \"endpointId\": \"391aed05-d43c-49c5-8245-6ea386ab62cf\",\n                \"endpointName\": \"My Linux 2\",\n                \"organizationId\": 0,\n                \"status\": \"assigned\",\n                \"recurrence\": null,\n                \"progress\": 0,\n                \"duration\": null,\n                \"caseIds\": [\n                    \"C-2022-0001\"\n                ],\n                \"isComparable\": false,\n                \"createdAt\": \"2022-06-19T09:27:06.976Z\",\n                \"updatedAt\": \"2022-06-19T09:27:06.976Z\",\n                \"response\": null\n            },\n            {\n                \"_id\": \"a973ab3b-5aae-4228-8d60-dea520a44fe0\",\n                \"taskId\": \"692cf100-4ee6-455e-a9d6-2ee81ba85579\",\n                \"name\": \"Test Triage 002\",\n                \"type\": \"triage\",\n                \"endpointId\": \"11add684-9434-43f6-8240-1eb647bf3ba8\",\n                \"endpointName\": \"My Linux 1\",\n                \"organizationId\": 0,\n                \"status\": \"assigned\",\n                \"recurrence\": null,\n                \"progress\": 0,\n                \"duration\": null,\n                \"caseIds\": [\n                    \"C-2022-0001\"\n                ],\n                \"isComparable\": false,\n                \"createdAt\": \"2022-06-19T09:27:06.976Z\",\n                \"updatedAt\": \"2022-06-19T09:27:06.976Z\",\n                \"response\": null\n            },\n            {\n                \"_id\": \"ad53e7ec-012b-4463-8d40-72d57917ae29\",\n                \"taskId\": \"692cf100-4ee6-455e-a9d6-2ee81ba85579\",\n                \"name\": \"Test Triage 002\",\n                \"type\": \"triage\",\n                \"endpointId\": \"6adba65f-4e55-4836-9b24-94ed1f512698\",\n                \"endpointName\": \"My Linux\",\n                \"organizationId\": 0,\n                \"status\": \"assigned\",\n                \"recurrence\": null,\n                \"progress\": 0,\n                \"duration\": null,\n                \"caseIds\": [\n                    \"C-2022-0001\"\n                ],\n                \"isComparable\": false,\n                \"createdAt\": \"2022-06-19T09:27:06.976Z\",\n                \"updatedAt\": \"2022-06-19T09:27:06.976Z\",\n                \"response\": null\n            },\n            {\n                \"_id\": \"ea730f46-f343-407a-bf75-3d0717a61771\",\n                \"taskId\": \"692cf100-4ee6-455e-a9d6-2ee81ba85579\",\n                \"name\": \"Test Triage 002\",\n                \"type\": \"triage\",\n                \"endpointId\": \"9b57fe00-48ef-483d-9e3b-f992afd0990b\",\n                \"endpointName\": \"My Linux 4\",\n                \"organizationId\": 0,\n                \"status\": \"assigned\",\n                \"recurrence\": null,\n                \"progress\": 0,\n                \"duration\": null,\n                \"caseIds\": [\n                    \"C-2022-0001\"\n                ],\n                \"isComparable\": false,\n                \"createdAt\": \"2022-06-19T09:27:06.975Z\",\n                \"updatedAt\": \"2022-06-19T09:27:06.975Z\",\n                \"response\": null\n            },\n            {\n                \"_id\": \"2c900d17-eea0-42c9-b247-b7cc56b572b2\",\n                \"taskId\": \"692cf100-4ee6-455e-a9d6-2ee81ba85579\",\n                \"name\": \"Test Triage 002\",\n                \"type\": \"triage\",\n                \"endpointId\": \"65941725-3ed3-4503-8eb3-a3878a983051\",\n                \"endpointName\": \"My Linux 4\",\n                \"organizationId\": 0,\n                \"status\": \"assigned\",\n                \"recurrence\": null,\n                \"progress\": 0,\n                \"duration\": null,\n                \"caseIds\": [\n                    \"C-2022-0001\"\n                ],\n                \"isComparable\": false,\n                \"createdAt\": \"2022-06-19T09:27:06.975Z\",\n                \"updatedAt\": \"2022-06-19T09:27:06.975Z\",\n                \"response\": null\n            },\n            {\n                \"_id\": \"431daf72-2feb-4b26-88cd-1e074a1c6302\",\n                \"taskId\": \"692cf100-4ee6-455e-a9d6-2ee81ba85579\",\n                \"name\": \"Test Triage 002\",\n                \"type\": \"triage\",\n                \"endpointId\": \"2557d71b-e259-4208-8624-0d7cceba369f\",\n                \"endpointName\": \"My Linux 3\",\n                \"organizationId\": 0,\n                \"status\": \"assigned\",\n                \"recurrence\": null,\n                \"progress\": 0,\n                \"duration\": null,\n                \"caseIds\": [\n                    \"C-2022-0001\"\n                ],\n                \"isComparable\": false,\n                \"createdAt\": \"2022-06-19T09:27:06.975Z\",\n                \"updatedAt\": \"2022-06-19T09:27:06.975Z\",\n                \"response\": null\n            },\n            {\n                \"_id\": \"0da08301-f105-4edd-930c-a6930f3ae1d1\",\n                \"taskId\": \"692cf100-4ee6-455e-a9d6-2ee81ba85579\",\n                \"name\": \"Test Triage 002\",\n                \"type\": \"triage\",\n                \"endpointId\": \"62428812-7a96-44fc-a7be-d98db10f0e71\",\n                \"endpointName\": \"My Linux 5\",\n                \"organizationId\": 0,\n                \"status\": \"assigned\",\n                \"recurrence\": null,\n                \"progress\": 0,\n                \"duration\": null,\n                \"caseIds\": [\n                    \"C-2022-0001\"\n                ],\n                \"isComparable\": false,\n                \"createdAt\": \"2022-06-19T09:27:06.974Z\",\n                \"updatedAt\": \"2022-06-19T09:27:06.974Z\",\n                \"response\": null\n            },\n            {\n                \"_id\": \"8645181b-a5ad-467f-bb76-6156b1deb163\",\n                \"taskId\": \"692cf100-4ee6-455e-a9d6-2ee81ba85579\",\n                \"name\": \"Test Triage 002\",\n                \"type\": \"triage\",\n                \"endpointId\": \"371b0408-536a-4bb8-9031-0fc4d3fa3d74\",\n                \"endpointName\": \"My Linux 6\",\n                \"organizationId\": 0,\n                \"status\": \"assigned\",\n                \"recurrence\": null,\n                \"progress\": 0,\n                \"duration\": null,\n                \"caseIds\": [\n                    \"C-2022-0001\"\n                ],\n                \"isComparable\": false,\n                \"createdAt\": \"2022-06-19T09:27:06.973Z\",\n                \"updatedAt\": \"2022-06-19T09:27:06.973Z\",\n                \"response\": null\n            },\n            {\n                \"_id\": \"8d294c09-93e3-408f-bd79-55b01e4aae55\",\n                \"taskId\": \"692cf100-4ee6-455e-a9d6-2ee81ba85579\",\n                \"name\": \"Test Triage 002\",\n                \"type\": \"triage\",\n                \"endpointId\": \"4ed12e19-ea07-4f20-8239-bd52dc68b0f7\",\n                \"endpointName\": \"My Linux 5\",\n                \"organizationId\": 0,\n                \"status\": \"assigned\",\n                \"recurrence\": null,\n                \"progress\": 0,\n                \"duration\": null,\n                \"caseIds\": [\n                    \"C-2022-0001\"\n                ],\n                \"isComparable\": false,\n                \"createdAt\": \"2022-06-19T09:27:06.973Z\",\n                \"updatedAt\": \"2022-06-19T09:27:06.973Z\",\n                \"response\": null\n            }\n        ],\n        \"filters\": [\n            {\n                \"name\": \"type\",\n                \"type\": \"checkbox\",\n                \"options\": [\n                    \"triage\",\n                    \"acquisition\",\n                    \"shutdown\",\n                    \"reboot\",\n                    \"uninstall\",\n                    \"isolation\",\n                    \"cancel\",\n                    \"investigation\",\n                    \"log-retrieval\",\n                    \"auto-tagging\",\n                    \"version-update\",\n                    \"offline-acquisition\",\n                    \"migration\",\n                    \"interact-shell\",\n                    \"baseline-comparison\",\n                    \"baseline-acquisition\"\n                ],\n                \"filterUrl\": null\n            },\n            {\n                \"name\": \"status\",\n                \"type\": \"checkbox\",\n                \"options\": [\n                    \"scheduled\",\n                    \"assigned\",\n                    \"processing\",\n                    \"completed\",\n                    \"failed\",\n                    \"expired\",\n                    \"cancelled\",\n                    \"compressing\",\n                    \"uploading\",\n                    \"analyzing\",\n                    \"partially-completed\"\n                ],\n                \"filterUrl\": null\n            },\n            {\n                \"name\": \"executionType\",\n                \"type\": \"checkbox\",\n                \"options\": [\n                    \"instant\",\n                    \"scheduled\"\n                ],\n                \"filterUrl\": null\n            }\n        ],\n        \"sortables\": [\n            \"name\",\n            \"type\",\n            \"status\",\n            \"progress\",\n            \"duration\",\n            \"createdAt\"\n        ],\n        \"totalEntityCount\": 22,\n        \"currentPage\": 1,\n        \"pageSize\": 10,\n        \"previousPage\": 0,\n        \"totalPageCount\": 3,\n        \"nextPage\": 2\n    },\n    \"statusCode\": 200,\n    \"errors\": []\n}"
						}
					]
				},
				{
					"name": "Get Case Users by Case ID",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.runForTest(() => {",
									"    pm.request.url.variables.add({",
									"        key: 'id',",
									"        value: pm.collectionVariables.get('caseId')",
									"    })",
									"})"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/{{apiPrefix}}/cases/:id/users?filter[organizationIds]=0",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"{{apiPrefix}}",
								"cases",
								":id",
								"users"
							],
							"query": [
								{
									"key": "pageSize",
									"value": "10",
									"description": "How many results to return per page",
									"disabled": true
								},
								{
									"key": "pageNumber",
									"value": "1",
									"description": "Which page of results to return",
									"disabled": true
								},
								{
									"key": "sortBy",
									"value": "name",
									"description": "Attribute name to order the responses by",
									"disabled": true
								},
								{
									"key": "sortType",
									"value": "ASC",
									"description": "Either ASC or DESC",
									"disabled": true
								},
								{
									"key": "filter[searchTerm]",
									"value": "admin",
									"disabled": true
								},
								{
									"key": "filter[organizationIds]",
									"value": "0"
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "",
									"description": "Case ID"
								}
							]
						},
						"description": "### Parameters\n\n| **Name**                                                  | **Constraints**                                |\n| --------------------------------------------------------- | ---------------------------------------------- |\n| **pageNumber** <br>number / optional                      | default value: 1 <br>min value:1               |\n| **pageSize** <br>number / optional                        | default value: 10 <br>min value:1              |\n| **sortBy** <br>string / optional                          | default value: createdAt                       |\n| **sortType** <br>string / optional                        | default value: ASC <br>valid values: ASC, DESC |\n| **filter\\[searchTerm\\]** <br>string / optional            |                                                |\n| **filter\\[organizationIds\\]** <br>number array / required |                                                |"
					},
					"response": [
						{
							"name": "Get Case Users by Case ID - 200 OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/{{apiPrefix}}/cases/:id/users?filter[organizationIds]=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"{{apiPrefix}}",
										"cases",
										":id",
										"users"
									],
									"query": [
										{
											"key": "pageSize",
											"value": "100",
											"disabled": true
										},
										{
											"key": "pageNumber",
											"value": "1",
											"disabled": true
										},
										{
											"key": "sortBy",
											"value": "name",
											"disabled": true
										},
										{
											"key": "sortType",
											"value": "ASC",
											"disabled": true
										},
										{
											"key": "filter[searchTerm]",
											"value": "admin",
											"disabled": true
										},
										{
											"key": "filter[organizationIds]",
											"value": "0"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "C-2022-0001",
											"description": "Case ID"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "1254"
								},
								{
									"key": "ETag",
									"value": "W/\"4e6-2NmSJqh3kyy0h2n5ICL9QdmOx6k\""
								},
								{
									"key": "Date",
									"value": "Sun, 19 Jun 2022 18:41:11 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"result\": {\n        \"entities\": [\n            {\n                \"_id\": \"RGRyrQfrbq97ywgkpXSn2UYH\",\n                \"email\": \"test@binalyze.com\",\n                \"username\": \"test@binalyze.com\",\n                \"organizationIds\": [\n                    1\n                ],\n                \"strategy\": \"local\",\n                \"profile\": {\n                    \"name\": \"\",\n                    \"surname\": \"\",\n                    \"department\": \"\"\n                },\n                \"tfaEnabled\": false,\n                \"createdAt\": \"2022-06-19T12:01:26.240Z\",\n                \"updatedAt\": \"2022-06-19T18:13:45.958Z\",\n                \"roles\": [\n                    {\n                        \"_id\": \"mmH4rfIg8Ly7G0aEv8QGCmvF\",\n                        \"createdAt\": \"2022-06-18T14:07:26.567Z\",\n                        \"updatedAt\": \"2022-06-18T14:07:26.738Z\",\n                        \"name\": \"Organization Admin\",\n                        \"createdBy\": \"System\",\n                        \"tag\": \"organization_admin\",\n                        \"privilegeTypes\": [\n                            \"user\"\n                        ]\n                    }\n                ]\n            },\n            {\n                \"_id\": \"82fIjSm4wm1GGypxQ45229cA\",\n                \"email\": \"demo@binalyze.com\",\n                \"username\": \"demo@binalyze.com\",\n                \"organizationIds\": \"ALL\",\n                \"strategy\": \"local\",\n                \"profile\": {\n                    \"name\": \"\",\n                    \"surname\": \"\",\n                    \"department\": \"\"\n                },\n                \"tfaEnabled\": false,\n                \"createdAt\": \"2022-06-18T19:44:51.500Z\",\n                \"updatedAt\": \"2022-06-18T19:44:51.500Z\",\n                \"roles\": [\n                    {\n                        \"_id\": \"puR8YPhXCOo9akamzBFzh8oL\",\n                        \"createdAt\": \"2022-06-18T14:07:26.566Z\",\n                        \"updatedAt\": \"2022-06-18T14:07:26.712Z\",\n                        \"name\": \"Global Admin\",\n                        \"createdBy\": \"System\",\n                        \"tag\": \"global_admin\",\n                        \"privilegeTypes\": [\n                            \"global-admin-only\",\n                            \"system\",\n                            \"user\"\n                        ]\n                    }\n                ]\n            }\n        ],\n        \"filters\": [],\n        \"sortables\": [\n            \"username\",\n            \"createdAt\"\n        ],\n        \"totalEntityCount\": 2,\n        \"currentPage\": 1,\n        \"pageSize\": 10,\n        \"previousPage\": 0,\n        \"totalPageCount\": 1,\n        \"nextPage\": 2\n    },\n    \"statusCode\": 200,\n    \"errors\": []\n}"
						}
					]
				},
				{
					"name": "Remove Endpoints from Case by Filter",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.runForTest(() => {",
									"    pm.request.url.variables.add({",
									"        key: 'id',",
									"        value: pm.collectionVariables.get('caseId')",
									"    })",
									"})"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"filter\": {\n        \"searchTerm\": \"\",\n        \"name\": \"\",\n        \"ipAddress\": \"\",\n        \"groupId\": \"\",\n        \"groupFullPath\": \"\",\n        \"managedStatus\": [],\n        \"isolationStatus\": [],\n        \"platform\": [],\n        \"issue\": \"\",\n        \"onlineStatus\": [],\n        \"tags\": [],\n        \"version\": \"\",\n        \"policy\": \"\",\n        \"includedEndpointIds\": [],\n        \"excludedEndpointIds\": [],\n        \"organizationIds\": [0]\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/{{apiPrefix}}/cases/:id/endpoints",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"{{apiPrefix}}",
								"cases",
								":id",
								"endpoints"
							],
							"variable": [
								{
									"key": "id",
									"value": "",
									"description": "Case ID"
								}
							]
						},
						"description": "### Parameters\n| **Name** | **Constraints** |\n| ---------------------------------------------------------------------------------------------- | ---------------------------------------------------------- |\n| **filter.organizationIds** <br>number array / required | |\n| **filter.searchTerm** <br>string / optional | |\n| **filter.name** <br>string / optional | |\n| **filter.ipAddress** <br>string / optional | |\n| **filter.groupId** <br>string / optional | |\n| **filter.groupFullPath** <br>string / optional | |\n| **filter.label** <br>string / optional | |\n| **filter.lastSeen** <br>string / optional | Example: 2023-03-06T21:00:00.000Z,2023-03-24T21:00:00.000Z |\n| **filter.managedStatus** <br>string array / optional | valid values: unmanaged, managed, off-network |\n| **filter.isolationStatus** <br>string array / optional | valid values: isolating, isolated, unisolating, unisolated |\n| **filter.platform** <br>string array / optional | valid values: windows, linux, darwin |\n| **filter.issue** <br>string array / optional | valid values: unreachable, old-version, update-required |\n| **filter.onlineStatus** <br>string array / optional | valid values: online, offline |\n| **filter.tags** <br>string array / optional | |\n| **filter.version** <br>string / optional | |\n| **filter.policy** <br>string / optional | |\n| **filter.includedEndpointIds** <br>string array / optional | |\n| **filter.excludedEndpointIds** <br>string array / optional | |\n| **filter.awsRegions** <br>string array / optional | |\n| **filter.azureRegions** <br>string array / optional | |"
					},
					"response": [
						{
							"name": "Remove Endpoints from Case by Filter - 200 OK",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"filter\": {\n        \"searchTerm\": \"\",\n        \"name\": \"\",\n        \"ipAddress\": \"\",\n        \"groupId\": \"\",\n        \"groupFullPath\": \"\",\n        \"managedStatus\": [],\n        \"isolationStatus\": [],\n        \"platform\": [],\n        \"issue\": \"\",\n        \"onlineStatus\": [],\n        \"tags\": [],\n        \"version\": \"\",\n        \"policy\": \"\",\n        \"includedEndpointIds\": [\"0c456814-7aab-4456-826a-c1c805512cc0\"],\n        \"excludedEndpointIds\": [],\n        \"organizationIds\": [0]\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/{{apiPrefix}}/cases/:id/endpoints",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"{{apiPrefix}}",
										"cases",
										":id",
										"endpoints"
									],
									"variable": [
										{
											"key": "id",
											"value": "C-2022-0001",
											"description": "Case ID"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "59"
								},
								{
									"key": "ETag",
									"value": "W/\"3b-MHtur75ftUyQ2IfDqFjH6SAxAM4\""
								},
								{
									"key": "Date",
									"value": "Sun, 19 Jun 2022 18:41:54 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"result\": null,\n    \"statusCode\": 200,\n    \"errors\": []\n}"
						},
						{
							"name": "Remove Endpoints from Case by Filter - 404 Not Found",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"filter\": {\n        \"searchTerm\": \"\",\n        \"name\": \"\",\n        \"ipAddress\": \"\",\n        \"groupId\": \"\",\n        \"groupFullPath\": \"\",\n        \"managedStatus\": [],\n        \"isolationStatus\": [],\n        \"platform\": [],\n        \"issue\": \"\",\n        \"onlineStatus\": [],\n        \"tags\": [],\n        \"version\": \"\",\n        \"policy\": \"\",\n        \"includedEndpointIds\": [\"0c456814-7aab-4456-826a-c1c805512cc0\"],\n        \"excludedEndpointIds\": [],\n        \"organizationIds\": [0]\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/{{apiPrefix}}/cases/:id/endpoints",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"{{apiPrefix}}",
										"cases",
										":id",
										"endpoints"
									],
									"variable": [
										{
											"key": "id",
											"value": "1",
											"description": "Case ID"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "100"
								},
								{
									"key": "ETag",
									"value": "W/\"64-FSTGVYIvEHKoHFyCla6GZasKk60\""
								},
								{
									"key": "Date",
									"value": "Sun, 19 Jun 2022 18:42:04 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"errors\": [\n        \"No case container found by provided id\"\n    ],\n    \"statusCode\": 404,\n    \"result\": null\n}"
						}
					]
				},
				{
					"name": "Remove Task Assignments from Case by Filter",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.runForTest(() => {",
									"    pm.request.url.variables.add({",
									"        key: 'caseId',",
									"        value: pm.collectionVariables.get('caseId')",
									"    })",
									"",
									"    pm.request.url.variables.add({",
									"        key: 'taskAssignmentId',",
									"        value: 'no-task-assignment-id'",
									"    })",
									"    ",
									"})"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"",
									"pm.test(\"Should return error 'Task assignment with no-task-assignment-id can not be found!'\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.errors).to.includes(\"Task assignment with no-task-assignment-id can not be found!\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/{{apiPrefix}}/cases/:caseId/task-assignments/:taskAssignmentId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"{{apiPrefix}}",
								"cases",
								":caseId",
								"task-assignments",
								":taskAssignmentId"
							],
							"variable": [
								{
									"key": "caseId",
									"value": "",
									"description": "Case ID"
								},
								{
									"key": "taskAssignmentId",
									"value": "",
									"description": "Task Assignment ID"
								}
							]
						}
					},
					"response": [
						{
							"name": "Remove Task Assignments from Case by Filter - 404 Not Found",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/{{apiPrefix}}/cases/:caseId/task-assignments/:taskAssignmentId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"{{apiPrefix}}",
										"cases",
										":caseId",
										"task-assignments",
										":taskAssignmentId"
									],
									"variable": [
										{
											"key": "caseId",
											"value": "C-2022-0001",
											"description": "Case ID"
										},
										{
											"key": "taskAssignmentId",
											"value": "f04666c9-62c7-4cb0-8638-967f05eb7936",
											"description": "Task Assignment ID"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "137"
								},
								{
									"key": "ETag",
									"value": "W/\"89-YYvMDg7D1C8Y9t/UzOfpak/ZJQI\""
								},
								{
									"key": "Date",
									"value": "Sun, 19 Jun 2022 18:42:45 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"errors\": [\n        \"Task assignment with f04666c9-62c7-4cb0-8638-967f05eb7936 can not be found!\"\n    ],\n    \"statusCode\": 404,\n    \"result\": null\n}"
						},
						{
							"name": "Remove Task Assignments from Case by Filter - 200 OK",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/{{apiPrefix}}/cases/:caseId/task-assignments/:taskAssignmentId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"{{apiPrefix}}",
										"cases",
										":caseId",
										"task-assignments",
										":taskAssignmentId"
									],
									"variable": [
										{
											"key": "caseId",
											"value": "C-2022-0001",
											"description": "Case ID"
										},
										{
											"key": "taskAssignmentId",
											"value": "cdba5bbd-890f-4014-9715-8dcbe7eaebfb",
											"description": "Task Assignment ID"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "59"
								},
								{
									"key": "ETag",
									"value": "W/\"3b-MHtur75ftUyQ2IfDqFjH6SAxAM4\""
								},
								{
									"key": "Date",
									"value": "Sun, 19 Jun 2022 18:43:09 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"result\": null,\n    \"statusCode\": 200,\n    \"errors\": []\n}"
						}
					]
				},
				{
					"name": "Import Task Assignment to Case",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.runForTest(() => {",
									"    pm.request.url.variables.add({",
									"        key: 'id',",
									"        value: pm.collectionVariables.get('caseId')",
									"    })",
									"})"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 406\", function () {",
									"    pm.response.to.have.status(406);",
									"});",
									"",
									"pm.test(\"Should return error 'The following task assignments are out of expected task types..'\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.errors[0]).to.contains(\"The following task assignments are out of expected task types\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"taskAssignmentIds\": [\n        \"task-assignment-id\"\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/{{apiPrefix}}/cases/:id/import-task-assignments",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"{{apiPrefix}}",
								"cases",
								":id",
								"import-task-assignments"
							],
							"variable": [
								{
									"key": "id",
									"value": "",
									"description": "Case ID"
								}
							]
						},
						"description": "### Parameters\n\n| **Name** | **Constraints** |\n| --- | --- |\n| **taskAssignmentIds**  <br>string array / required | 2 task assignment id |"
					},
					"response": [
						{
							"name": "Import Task Assignment to Case - 200 OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"taskAssignmentIds\": [\"cdba5bbd-890f-4014-9715-8dcbe7eaebfb\"]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/{{apiPrefix}}/cases/:id/import-task-assignments",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"{{apiPrefix}}",
										"cases",
										":id",
										"import-task-assignments"
									],
									"variable": [
										{
											"key": "id",
											"value": "C-2022-0004",
											"description": "Case ID"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "59"
								},
								{
									"key": "ETag",
									"value": "W/\"3b-MHtur75ftUyQ2IfDqFjH6SAxAM4\""
								},
								{
									"key": "Date",
									"value": "Sun, 19 Jun 2022 18:45:45 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"result\": null,\n    \"statusCode\": 200,\n    \"errors\": []\n}"
						},
						{
							"name": "Import Task Assignment to Case - 406 Not Acceptable",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"taskAssignmentIds\": [\"cdba5bbd-890f-4014-9715-8dcbe7eaebfb\"]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/{{apiPrefix}}/cases/:id/import-task-assignments",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"{{apiPrefix}}",
										"cases",
										":id",
										"import-task-assignments"
									],
									"variable": [
										{
											"key": "id",
											"value": "C-2022-0002",
											"description": "Case ID"
										}
									]
								}
							},
							"status": "Not Acceptable",
							"code": 406,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "207"
								},
								{
									"key": "ETag",
									"value": "W/\"cf-JtqItS9NXbHytdKRja1TTxAvw64\""
								},
								{
									"key": "Date",
									"value": "Sun, 19 Jun 2022 18:44:23 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"errors\": [\n        \"The following task assignments are out of expected task types (acquisition, offline-acquisition, baseline-acquisition, triage, investigation): []\"\n    ],\n    \"statusCode\": 406,\n    \"result\": null\n}"
						}
					]
				}
			]
		},
		{
			"name": "Evidence",
			"item": [
				{
					"name": "Repositories",
					"item": [
						{
							"name": "Get Repositories",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/{{apiPrefix}}/evidences/repositories?filter[organizationIds]=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"{{apiPrefix}}",
										"evidences",
										"repositories"
									],
									"query": [
										{
											"key": "pageNumber",
											"value": "1",
											"description": "Which page of results to return",
											"disabled": true
										},
										{
											"key": "pageSize",
											"value": "10",
											"description": "How many results to return per page",
											"disabled": true
										},
										{
											"key": "sortBy",
											"value": "createdAt",
											"description": "Attribute name to order the responses by",
											"disabled": true
										},
										{
											"key": "sortType",
											"value": "DESC",
											"description": "Either ASC or DESC",
											"disabled": true
										},
										{
											"key": "filter[type]",
											"value": "",
											"disabled": true
										},
										{
											"key": "filter[searchTerm]",
											"value": "",
											"disabled": true
										},
										{
											"key": "filter[organizationIds]",
											"value": "0"
										},
										{
											"key": "filter[allOrganizations]",
											"value": "true",
											"disabled": true
										}
									]
								},
								"description": "### Parameters\n\n| **Name**                                             | **Constraints**                                |\n| ---------------------------------------------------- | ---------------------------------------------- |\n| **pageNumber** <br>number / optional                 | default value: 1 <br>min value:1               |\n| **pageSize** <br>number / optional                   | default value: 10 <br>min value:1              |\n| **sortBy** <br>string / optional                     | default value: createdAt                       |\n| **sortType** <br>string / optional                   | default value: ASC <br>valid values: ASC, DESC |\n| **filter\\[allOrganizations\\]** <br>string / optional | valid values: true, false                      |\n| **filter\\[type\\]** <br>string / optional             |     valid values: smb, sftp, azure-storage, amazon-s3, ftps                                           |\n| **filter\\[organizationIds\\]** <br>string / required  |                                                |\n| **filter\\[searchTerm\\]** <br>string / optional       |                                                |\n| **filter\\[path\\]** <br>string / optional       |                                                |\n| **filter\\[username\\]** <br>string / optional       |                                                |\n| **filter\\[host\\]** <br>string / optional       |                                                |"
							},
							"response": [
								{
									"name": "Get Repositories - 200 OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/{{apiPrefix}}/evidences/repositories?filter[organizationIds]=0",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"{{apiPrefix}}",
												"evidences",
												"repositories"
											],
											"query": [
												{
													"key": "pageNumber",
													"value": "1",
													"disabled": true
												},
												{
													"key": "pageSize",
													"value": "10",
													"disabled": true
												},
												{
													"key": "sortBy",
													"value": "createdAt",
													"disabled": true
												},
												{
													"key": "sortType",
													"value": "DESC",
													"disabled": true
												},
												{
													"key": "filter[type]",
													"value": "",
													"disabled": true
												},
												{
													"key": "filter[searchTerm]",
													"value": "",
													"disabled": true
												},
												{
													"key": "filter[organizationIds]",
													"value": "0"
												},
												{
													"key": "filter[allOrganizations]",
													"value": "true",
													"disabled": true
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "995"
										},
										{
											"key": "ETag",
											"value": "W/\"3e3-DtL9PigltVRffB6B8ZzRENdOEss\""
										},
										{
											"key": "Date",
											"value": "Sat, 18 Jun 2022 20:17:13 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"result\": {\n        \"entities\": [\n            {\n                \"_id\": \"dOHIYeyPKEWbN9HYC4kyeeO6\",\n                \"createdAt\": \"2022-06-18T20:10:12.291Z\",\n                \"updatedAt\": \"2022-06-18T20:10:12.291Z\",\n                \"name\": \"Example SMB Repository\",\n                \"path\": \"\\\\Network\\\\Share\",\n                \"username\": \"admin\",\n                \"password\": \"admin\",\n                \"type\": \"smb\",\n                \"host\": null,\n                \"port\": null,\n                \"SASUrl\": null,\n                \"region\": null,\n                \"bucket\": null,\n                \"accessKeyId\": null,\n                \"secretAccessKey\": null,\n                \"organizationIds\": [],\n                \"allowSelfSignedSSL\": null,\n                \"publicKey\": null\n            }\n        ],\n        \"filters\": [\n            {\n                \"name\": \"type\",\n                \"type\": \"checkbox\",\n                \"options\": [\n                    \"smb\",\n                    \"sftp\",\n                    \"azure-storage\",\n                    \"amazon-s3\",\n                    \"ftps\"\n                ],\n                \"filterUrl\": null\n            },\n            {\n                \"name\": \"name\",\n                \"type\": \"text\",\n                \"options\": [],\n                \"filterUrl\": null\n            },\n            {\n                \"name\": \"path\",\n                \"type\": \"text\",\n                \"options\": [],\n                \"filterUrl\": null\n            },\n            {\n                \"name\": \"host\",\n                \"type\": \"text\",\n                \"options\": [],\n                \"filterUrl\": null\n            },\n            {\n                \"name\": \"username\",\n                \"type\": \"text\",\n                \"options\": [],\n                \"filterUrl\": null\n            }\n        ],\n        \"sortables\": [\n            \"name\",\n            \"path\",\n            \"username\",\n            \"type\",\n            \"host\",\n            \"createdAt\"\n        ],\n        \"totalEntityCount\": 1,\n        \"currentPage\": 1,\n        \"pageSize\": 10,\n        \"previousPage\": 0,\n        \"totalPageCount\": 1,\n        \"nextPage\": 2\n    },\n    \"statusCode\": 200,\n    \"errors\": []\n}"
								},
								{
									"name": "Get Repositories without Organization ID - 400 Bad Request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/{{apiPrefix}}/evidences/repositories",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"{{apiPrefix}}",
												"evidences",
												"repositories"
											],
											"query": [
												{
													"key": "pageNumber",
													"value": "1",
													"disabled": true
												},
												{
													"key": "pageSize",
													"value": "10",
													"disabled": true
												},
												{
													"key": "sortBy",
													"value": "createdAt",
													"disabled": true
												},
												{
													"key": "sortType",
													"value": "DESC",
													"disabled": true
												},
												{
													"key": "filter[type]",
													"value": "",
													"disabled": true
												},
												{
													"key": "filter[searchTerm]",
													"value": "",
													"disabled": true
												},
												{
													"key": "filter[organizationIds]",
													"value": "0",
													"disabled": true
												},
												{
													"key": "filter[allOrganizations]",
													"value": "true",
													"disabled": true
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "100"
										},
										{
											"key": "ETag",
											"value": "W/\"64-0dZahibur8gfpdjDGd/+kpCpojg\""
										},
										{
											"key": "Date",
											"value": "Sat, 18 Jun 2022 20:17:35 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": false,\n    \"errors\": [\n        \"'organizationIds' should not be empty.\"\n    ],\n    \"statusCode\": 400,\n    \"result\": null\n}"
								}
							]
						},
						{
							"name": "Create SMB Repository",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const uuid = require('uuid')",
											"",
											"pm.runForTest(() => {",
											"    const payload = JSON.parse(pm.request.body.raw)",
											"    payload.name = `Repository - ${uuid.v4()}`",
											"    payload.path = `\\\\\\\\Network\\\\${uuid.v4().substr(0, 8)}`;",
											"    pm.request.body.raw = JSON.stringify(payload)",
											"})"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.collectionVariables.set('repositoryId', JSON.parse(responseBody).result._id)",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Example SMB Repository\",\n    \"path\": \"\\\\Network\\\\Share\",\n    \"username\": \"admin\",\n    \"password\": \"admin\",\n    \"organizationIds\": []\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/{{apiPrefix}}/evidences/repositories/smb",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"{{apiPrefix}}",
										"evidences",
										"repositories",
										"smb"
									]
								},
								"description": "### Parameters\n\n| **Name**                                        | **Constraints** |\n| ----------------------------------------------- | --------------- |\n| **name** <br>string / required                  |                 |\n| **path** <br>string / required                  |                 |\n| **username** <br>string / optional              |                 |\n| **password** <br>string / optional              |                 |\n| **organizationIds** <br>number array / optional |                 |"
							},
							"response": [
								{
									"name": "Create SMB Repository - 200 OK",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"name": "Content-Type",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"Example SMB Repository\",\n    \"path\": \"\\\\Network\\\\Share\",\n    \"username\": \"admin\",\n    \"password\": \"admin\",\n    \"organizationIds\": []\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/{{apiPrefix}}/evidences/repositories/smb",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"{{apiPrefix}}",
												"evidences",
												"repositories",
												"smb"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "448"
										},
										{
											"key": "ETag",
											"value": "W/\"1c0-JwSuTomlnYp6Bts82vBqCSR6jJI\""
										},
										{
											"key": "Date",
											"value": "Sat, 18 Jun 2022 20:10:12 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"result\": {\n        \"_id\": \"dOHIYeyPKEWbN9HYC4kyeeO6\",\n        \"createdAt\": \"2022-06-18T20:10:12.291Z\",\n        \"updatedAt\": \"2022-06-18T20:10:12.291Z\",\n        \"name\": \"Example SMB Repository\",\n        \"path\": \"\\\\Network\\\\Share\",\n        \"username\": \"admin\",\n        \"password\": \"admin\",\n        \"type\": \"smb\",\n        \"host\": null,\n        \"port\": null,\n        \"SASUrl\": null,\n        \"region\": null,\n        \"bucket\": null,\n        \"accessKeyId\": null,\n        \"secretAccessKey\": null,\n        \"organizationIds\": [],\n        \"allowSelfSignedSSL\": null,\n        \"publicKey\": null\n    },\n    \"statusCode\": 200,\n    \"errors\": []\n}"
								},
								{
									"name": "Create SMB Repository - 400 Bad Request",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"name": "Content-Type",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"Example SMB Repository\",\n    \"path\": \"\",\n    \"username\": \"admin\",\n    \"password\": \"admin\",\n    \"organizationIds\": []\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/{{apiPrefix}}/evidences/repositories/smb",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"{{apiPrefix}}",
												"evidences",
												"repositories",
												"smb"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "88"
										},
										{
											"key": "ETag",
											"value": "W/\"58-pXwYoZlMD4na2UJEHtI8i4x92ec\""
										},
										{
											"key": "Date",
											"value": "Sat, 18 Jun 2022 20:10:59 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": false,\n    \"errors\": [\n        \"path should not be empty\"\n    ],\n    \"statusCode\": 400,\n    \"result\": null\n}"
								},
								{
									"name": "Create SMB Repository - 409 Conflict",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"Example SMB Repository\",\n    \"path\": \"\\\\Network\\\\Share\",\n    \"username\": \"admin\",\n    \"password\": \"admin\",\n    \"organizationIds\": []\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/{{apiPrefix}}/evidences/repositories/smb",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"{{apiPrefix}}",
												"evidences",
												"repositories",
												"smb"
											]
										}
									},
									"status": "Conflict",
									"code": 409,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "112"
										},
										{
											"key": "ETag",
											"value": "W/\"70-24nucjqtFPKN4VNtMXvwxUtu38k\""
										},
										{
											"key": "Date",
											"value": "Sat, 18 Jun 2022 20:15:40 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": false,\n    \"errors\": [\n        \"Evidence repo Example SMB Repository already exist\"\n    ],\n    \"statusCode\": 409,\n    \"result\": null\n}"
								}
							]
						},
						{
							"name": "Update SMB Repository by ID",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const uuid = require('uuid')",
											"",
											"pm.runForTest(() => {",
											"    pm.request.url.variables.add({",
											"        key: 'id', value: pm.collectionVariables.get('repositoryId')",
											"    })",
											"",
											"    const payload = JSON.parse(pm.request.body.raw)",
											"    payload.path = `\\\\\\\\Network\\\\${uuid.v4().substr(0, 8)}`;",
											"    pm.request.body.raw = JSON.stringify(payload)",
											"})"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Example SMB Repository\",\n    \"path\": \"\\\\Network\",\n    \"username\": \"admin\",\n    \"password\": \"pass\",\n    \"organizationIds\": []\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/{{apiPrefix}}/evidences/repositories/smb/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"{{apiPrefix}}",
										"evidences",
										"repositories",
										"smb",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "",
											"description": "Repository ID"
										}
									]
								},
								"description": "### Parameters\n\n| **Name**                                        | **Constraints** |\n| ----------------------------------------------- | --------------- |\n| **name** <br>string / required                  |                 |\n| **path** <br>string / required                  |                 |\n| **username** <br>string / optional              |                 |\n| **password** <br>string / optional              |                 |\n| **organizationIds** <br>number array / optional |                 |"
							},
							"response": [
								{
									"name": "Update SMB Repository by ID - 200 OK",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"Example SMB Repository\",\n    \"path\": \"\\\\Network\",\n    \"username\": \"admin\",\n    \"password\": \"pass\",\n    \"organizationIds\": []\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/{{apiPrefix}}/evidences/repositories/smb/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"{{apiPrefix}}",
												"evidences",
												"repositories",
												"smb",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "dOHIYeyPKEWbN9HYC4kyeeO6",
													"description": "Repository ID"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "440"
										},
										{
											"key": "ETag",
											"value": "W/\"1b8-WGpA/pwUhjEFd/XlWVCDWDjCBeQ\""
										},
										{
											"key": "Date",
											"value": "Sat, 18 Jun 2022 20:20:26 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"result\": {\n        \"_id\": \"dOHIYeyPKEWbN9HYC4kyeeO6\",\n        \"createdAt\": \"2022-06-18T20:10:12.291Z\",\n        \"updatedAt\": \"2022-06-18T20:20:26.802Z\",\n        \"name\": \"Example SMB Repository\",\n        \"path\": \"\\\\Network\",\n        \"username\": \"admin\",\n        \"password\": \"pass\",\n        \"type\": \"smb\",\n        \"host\": null,\n        \"port\": null,\n        \"SASUrl\": null,\n        \"region\": null,\n        \"bucket\": null,\n        \"accessKeyId\": null,\n        \"secretAccessKey\": null,\n        \"organizationIds\": [],\n        \"allowSelfSignedSSL\": null,\n        \"publicKey\": null\n    },\n    \"statusCode\": 200,\n    \"errors\": []\n}"
								},
								{
									"name": "Update SMB Repository by ID - 404 Not Found",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"Example SMB Repository\",\n    \"path\": \"\\\\Network\",\n    \"username\": \"admin\",\n    \"password\": \"pass\",\n    \"organizationIds\": []\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/{{apiPrefix}}/evidences/repositories/smb/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"{{apiPrefix}}",
												"evidences",
												"repositories",
												"smb",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "1",
													"description": "Repository ID"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "108"
										},
										{
											"key": "ETag",
											"value": "W/\"6c-aN4UDtK+v+db1tJwGD6A3kIJ+34\""
										},
										{
											"key": "Date",
											"value": "Sat, 18 Jun 2022 20:20:49 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": false,\n    \"errors\": [\n        \"No evidence repository found by provided id(s)\"\n    ],\n    \"statusCode\": 404,\n    \"result\": null\n}"
								}
							]
						},
						{
							"name": "Create SFTP Repository",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const uuid = require('uuid')",
											"",
											"pm.runForTest(() => {",
											"    const payload = JSON.parse(pm.request.body.raw)",
											"    payload.name = `Repository - ${uuid.v4()}`",
											"    payload.host = `${uuid.v4().substr(0, 8)}.com`;",
											"    pm.request.body.raw = JSON.stringify(payload)",
											"})"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Example SFTP Repository\",\n    \"host\": \"sftp.example.com\",\n    \"port\": 22,\n    \"path\": \"/\",\n    \"username\": \"demo\",\n    \"password\": \"pass\",\n    \"organizationIds\": []\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/{{apiPrefix}}/evidences/repositories/sftp",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"{{apiPrefix}}",
										"evidences",
										"repositories",
										"sftp"
									]
								},
								"description": "### Parameters\n\n| **Name**                                                     | **Constraints**        |\n| ------------------------------------------------------------ | ---------------------- |\n| **name** <br>string / required                               |                        |\n| **host** <br>string / required                               |                        |\n| **port** <br>number / required                               | min: 0 <br> max: 65535 |\n| **path** <br>string / required                               |                        |\n| **username** <br>string / optional                           |                        |\n| **password** <br>string / if username is not empty: required |                        |\n| **organizationIds** <br>number array / optional              |                        |"
							},
							"response": [
								{
									"name": "Create SFTP Repository - 200 OK",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"name": "Content-Type",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"Example SFTP Repository\",\n    \"host\": \"sftp.example.com\",\n    \"port\": 22,\n    \"path\": \"/\",\n    \"username\": \"demo\",\n    \"password\": \"pass\",\n    \"organizationIds\": []\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/{{apiPrefix}}/evidences/repositories/sftp",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"{{apiPrefix}}",
												"evidences",
												"repositories",
												"sftp"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "445"
										},
										{
											"key": "ETag",
											"value": "W/\"1bd-LDhUw96ZuP9GT9J5p63IWiMKm10\""
										},
										{
											"key": "Date",
											"value": "Sun, 19 Jun 2022 04:20:09 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"result\": {\n        \"_id\": \"pFYmdNLvirVx7xVnmhu65syt\",\n        \"createdAt\": \"2022-06-19T04:20:09.087Z\",\n        \"updatedAt\": \"2022-06-19T04:20:09.087Z\",\n        \"name\": \"Example SFTP Repository\",\n        \"path\": \"/\",\n        \"username\": \"demo\",\n        \"password\": \"pass\",\n        \"type\": \"sftp\",\n        \"host\": \"sftp.example.com\",\n        \"port\": 22,\n        \"SASUrl\": null,\n        \"region\": null,\n        \"bucket\": null,\n        \"accessKeyId\": null,\n        \"secretAccessKey\": null,\n        \"organizationIds\": [],\n        \"allowSelfSignedSSL\": null,\n        \"publicKey\": null\n    },\n    \"statusCode\": 200,\n    \"errors\": []\n}"
								},
								{
									"name": "Create SFTP Repository - 409 Conflict",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"name": "Content-Type",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"Example SFTP Repository\",\n    \"host\": \"sftp.example.com\",\n    \"port\": 22,\n    \"path\": \"/\",\n    \"username\": \"demo\",\n    \"password\": \"pass\",\n    \"organizationIds\": []\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/{{apiPrefix}}/evidences/repositories/sftp",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"{{apiPrefix}}",
												"evidences",
												"repositories",
												"sftp"
											]
										}
									},
									"status": "Conflict",
									"code": 409,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "113"
										},
										{
											"key": "ETag",
											"value": "W/\"71-xkQm3GP83upao2uvy64Qx4jBgH8\""
										},
										{
											"key": "Date",
											"value": "Sun, 19 Jun 2022 04:20:23 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": false,\n    \"errors\": [\n        \"Evidence repo Example SFTP Repository already exist\"\n    ],\n    \"statusCode\": 409,\n    \"result\": null\n}"
								},
								{
									"name": "Create SFTP Repository - 400 Bad Request",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"name": "Content-Type",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"Example SFTP Repository\",\n    \"host\": \"\",\n    \"port\": 22,\n    \"path\": \"/\",\n    \"username\": \"demo\",\n    \"password\": \"pass\",\n    \"organizationIds\": []\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/{{apiPrefix}}/evidences/repositories/sftp",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"{{apiPrefix}}",
												"evidences",
												"repositories",
												"sftp"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "119"
										},
										{
											"key": "ETag",
											"value": "W/\"77-hrSfkyXH9tB3+1gZxDrfAwAwnkM\""
										},
										{
											"key": "Date",
											"value": "Sun, 19 Jun 2022 04:20:38 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": false,\n    \"errors\": [\n        \"Should be a valid IP or Domain\",\n        \"host should not be empty\"\n    ],\n    \"statusCode\": 400,\n    \"result\": null\n}"
								}
							]
						},
						{
							"name": "Update SFTP Repository by ID",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const uuid = require('uuid')",
											"",
											"pm.runForTest(() => {",
											"    pm.request.url.variables.add({",
											"        key: 'id', value: pm.collectionVariables.get('repositoryId')",
											"    })",
											"",
											"    const payload = JSON.parse(pm.request.body.raw)",
											"    payload.host = `${uuid.v4().substr(0, 8)}.com`;",
											"    pm.request.body.raw = JSON.stringify(payload)",
											"})"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Example SFTP Repository\",\n    \"host\": \"sftp.example.com\",\n    \"port\": 2222,\n    \"path\": \"/\",\n    \"username\": \"demo\",\n    \"password\": \"demo\",\n    \"organizationIds\": []\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/{{apiPrefix}}/evidences/repositories/sftp/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"{{apiPrefix}}",
										"evidences",
										"repositories",
										"sftp",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "",
											"description": "Repository ID"
										}
									]
								},
								"description": "### Parameters\n\n| **Name**                                                     | **Constraints**        |\n| ------------------------------------------------------------ | ---------------------- |\n| **name** <br>string / required                               |                        |\n| **host** <br>string / required                               |                        |\n| **port** <br>number / required                               | min: 0 <br> max: 65535 |\n| **path** <br>string / required                               |                        |\n| **username** <br>string / optional                           |                        |\n| **password** <br>string / if username is not empty: required |                        |\n| **organizationIds** <br>number array / optional              |                        |"
							},
							"response": [
								{
									"name": "Update SFTP Repository by ID - 200 OK",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"name": "Content-Type",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"Example SFTP Repository\",\n    \"host\": \"sftp.example.com\",\n    \"port\": 2222,\n    \"path\": \"/\",\n    \"username\": \"demo\",\n    \"password\": \"demo\",\n    \"organizationIds\": []\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/{{apiPrefix}}/evidences/repositories/sftp/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"{{apiPrefix}}",
												"evidences",
												"repositories",
												"sftp",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "pFYmdNLvirVx7xVnmhu65syt",
													"description": "Repository ID"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "447"
										},
										{
											"key": "ETag",
											"value": "W/\"1bf-q9ugf+P+wknj6HY7Xj0rLZjFcYY\""
										},
										{
											"key": "Date",
											"value": "Sun, 19 Jun 2022 04:24:59 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"result\": {\n        \"_id\": \"pFYmdNLvirVx7xVnmhu65syt\",\n        \"createdAt\": \"2022-06-19T04:20:09.087Z\",\n        \"updatedAt\": \"2022-06-19T04:24:59.793Z\",\n        \"name\": \"Example SFTP Repository\",\n        \"path\": \"/\",\n        \"username\": \"demo\",\n        \"password\": \"demo\",\n        \"type\": \"sftp\",\n        \"host\": \"sftp.example.com\",\n        \"port\": 2222,\n        \"SASUrl\": null,\n        \"region\": null,\n        \"bucket\": null,\n        \"accessKeyId\": null,\n        \"secretAccessKey\": null,\n        \"organizationIds\": [],\n        \"allowSelfSignedSSL\": null,\n        \"publicKey\": null\n    },\n    \"statusCode\": 200,\n    \"errors\": []\n}"
								},
								{
									"name": "Update SFTP Repository by ID - 400 Bad Request",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"name": "Content-Type",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"Example SFTP Repository\",\n    \"host\": \"\",\n    \"port\": 2222,\n    \"path\": \"/\",\n    \"username\": \"demo\",\n    \"password\": \"demo\",\n    \"organizationIds\": []\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/{{apiPrefix}}/evidences/repositories/sftp/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"{{apiPrefix}}",
												"evidences",
												"repositories",
												"sftp",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "pFYmdNLvirVx7xVnmhu65syt",
													"description": "Repository ID"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "119"
										},
										{
											"key": "ETag",
											"value": "W/\"77-hrSfkyXH9tB3+1gZxDrfAwAwnkM\""
										},
										{
											"key": "Date",
											"value": "Sun, 19 Jun 2022 04:25:11 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": false,\n    \"errors\": [\n        \"Should be a valid IP or Domain\",\n        \"host should not be empty\"\n    ],\n    \"statusCode\": 400,\n    \"result\": null\n}"
								},
								{
									"name": "Update SFTP Repository by ID - 404 Not Found",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"name": "Content-Type",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"Example SFTP Repository\",\n    \"host\": \"sftp.example.com\",\n    \"port\": 2222,\n    \"path\": \"/\",\n    \"username\": \"demo\",\n    \"password\": \"demo\",\n    \"organizationIds\": []\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/{{apiPrefix}}/evidences/repositories/sftp/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"{{apiPrefix}}",
												"evidences",
												"repositories",
												"sftp",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "1",
													"description": "Repository ID"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "108"
										},
										{
											"key": "ETag",
											"value": "W/\"6c-aN4UDtK+v+db1tJwGD6A3kIJ+34\""
										},
										{
											"key": "Date",
											"value": "Sun, 19 Jun 2022 04:25:34 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": false,\n    \"errors\": [\n        \"No evidence repository found by provided id(s)\"\n    ],\n    \"statusCode\": 404,\n    \"result\": null\n}"
								}
							]
						},
						{
							"name": "Create FTPS Repository",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 678\", function () {",
											"    pm.response.to.have.status(678);",
											"});",
											"",
											"pm.test(\"Should return error 'getaddrinfo ENOTFOUND ftps.example.com'\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.errors).to.eql([\"getaddrinfo ENOTFOUND ftps.example.com\"]);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Example FTPS Repository\",\n    \"host\": \"ftps.example.com\",\n    \"port\": 22,\n    \"path\": \"/\",\n    \"username\": \"admin\",\n    \"password\": \"admin\",\n    \"allowSelfSignedSSL\": false,\n    \"publicKey\": \"\",\n    \"organizationIds\": []\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/{{apiPrefix}}/evidences/repositories/ftps",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"{{apiPrefix}}",
										"evidences",
										"repositories",
										"ftps"
									]
								},
								"description": "### Parameters\n\n| **Name**                                                     | **Constraints**        |\n| ------------------------------------------------------------ | ---------------------- |\n| **name** <br>string / required                               |                        |\n| **host** <br>string / required                               |                        |\n| **port** <br>number / required                               | min: 0 <br> max: 65535 |\n| **path** <br>string / required                               |                        |\n| **username** <br>string / optional                           |                        |\n| **password** <br>string / if username is not empty: required |                        |\n| **allowSelfSignedSSL** <br>boolean / required                |                        |\n| **publicKey** <br>string / if allowSelfSignedSSL is true: required                          |                        |\n| **organizationIds** <br>number array / optional              |                        |"
							},
							"response": [
								{
									"name": "Create FTPS Repository - 200 OK",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"name": "Content-Type",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"Example FTPS Repository\",\n    \"host\": \"ftps.example.com\",\n    \"port\": 22,\n    \"path\": \"/\",\n    \"username\": \"demo\",\n    \"password\": \"pass\",\n    \"allowSelfSignedSSL\": false,\n    \"publicKey\": null,\n    \"organizationIds\": []\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/{{apiPrefix}}/evidences/repositories/ftps",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"{{apiPrefix}}",
												"evidences",
												"repositories",
												"ftps"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "445"
										},
										{
											"key": "ETag",
											"value": "W/\"1bd-LDhUw96ZuP9GT9J5p63IWiMKm10\""
										},
										{
											"key": "Date",
											"value": "Sun, 19 Jun 2022 04:20:09 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"result\": {\n        \"_id\": \"hFYmdNLvirVx7xVnmhu65syt\",\n        \"createdAt\": \"2022-06-19T04:20:09.087Z\",\n        \"updatedAt\": \"2022-06-19T04:20:09.087Z\",\n        \"name\": \"Example FTPS Repository\",\n        \"path\": \"/\",\n        \"username\": \"demo\",\n        \"password\": \"pass\",\n        \"type\": \"ftps\",\n        \"host\": \"ftps.example.com\",\n        \"port\": 22,\n        \"SASUrl\": null,\n        \"region\": null,\n        \"bucket\": null,\n        \"accessKeyId\": null,\n        \"secretAccessKey\": null,\n        \"organizationIds\": [],\n        \"allowSelfSignedSSL\": false,\n        \"publicKey\": null\n    },\n    \"statusCode\": 200,\n    \"errors\": []\n}"
								},
								{
									"name": "Create FTPS Repository - 400 Bad Request",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"name": "Content-Type",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"Example FTPS Repository\",\n    \"host\": \"\",\n    \"port\": 22,\n    \"path\": \"/\",\n    \"username\": \"admin\",\n    \"password\": \"admin\",\n    \"allowSelfSignedSSL\": false,\n    \"publicKey\": \"\",\n    \"organizationIds\": []\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/{{apiPrefix}}/evidences/repositories/ftps",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"{{apiPrefix}}",
												"evidences",
												"repositories",
												"ftps"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "119"
										},
										{
											"key": "ETag",
											"value": "W/\"77-hrSfkyXH9tB3+1gZxDrfAwAwnkM\""
										},
										{
											"key": "Date",
											"value": "Sun, 19 Jun 2022 04:37:47 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": false,\n    \"errors\": [\n        \"Should be a valid IP or Domain\",\n        \"host should not be empty\"\n    ],\n    \"statusCode\": 400,\n    \"result\": null\n}"
								},
								{
									"name": "Create FTPS Repository - 677 FTPS Connection Closed Transfer Aborted",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"name": "Content-Type",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"Example FTPS Repository\",\n    \"host\": \"ftps.example.com\",\n    \"port\": 22,\n    \"path\": \"/\",\n    \"username\": \"admin\",\n    \"password\": \"admin\",\n    \"allowSelfSignedSSL\": false,\n    \"publicKey\": \"\",\n    \"organizationIds\": []\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/{{apiPrefix}}/evidences/repositories/ftps",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"{{apiPrefix}}",
												"evidences",
												"repositories",
												"ftps"
											]
										}
									},
									"status": "FTPSConnectionClosedTransferAborted",
									"code": 677,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "101"
										},
										{
											"key": "ETag",
											"value": "W/\"65-sXss+JiG423WLjEWMpbxXaJp98w\""
										},
										{
											"key": "Date",
											"value": "Sun, 19 Jun 2022 04:29:17 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": false,\n    \"errors\": [\n        \"Connection Closed\"\n    ],\n    \"statusCode\": 677,\n    \"result\": null\n}"
								},
								{
									"name": "Create FTPS Repository - 678 FTPS Requested Action Aborted",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"name": "Content-Type",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"Example FTPS Repository\",\n    \"host\": \"ftps.example.com\",\n    \"port\": 22,\n    \"path\": \"/\",\n    \"username\": \"admin\",\n    \"password\": \"admin\",\n    \"allowSelfSignedSSL\": false,\n    \"publicKey\": \"\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/{{apiPrefix}}/evidences/repositories/ftps",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"{{apiPrefix}}",
												"evidences",
												"repositories",
												"ftps"
											]
										}
									},
									"status": "FTPSRequestedActionAborted",
									"code": 678,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "101"
										},
										{
											"key": "ETag",
											"value": "W/\"65-sXss+JiG423WLjEWMpbxXaJp98w\""
										},
										{
											"key": "Date",
											"value": "Sun, 19 Jun 2022 04:29:17 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": false,\n    \"errors\": [\n        \"getaddrinfo ENOTFOUND ftps.example.com\"\n    ],\n    \"statusCode\": 678,\n    \"result\": null\n}"
								},
								{
									"name": "Create FTPS Repository - 679 FTPS Not Logged In",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"name": "Content-Type",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"Example FTPS Repository\",\n    \"host\": \"ftps.example.com\",\n    \"port\": 22,\n    \"path\": \"/\",\n    \"username\": \"admin\",\n    \"password\": \"admin\",\n    \"allowSelfSignedSSL\": false,\n    \"publicKey\": \"\",\n    \"organizationIds\": []\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/{{apiPrefix}}/evidences/repositories/ftps",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"{{apiPrefix}}",
												"evidences",
												"repositories",
												"ftps"
											]
										}
									},
									"status": "FTPSNotLoggedIn",
									"code": 679,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "101"
										},
										{
											"key": "ETag",
											"value": "W/\"65-sXss+JiG423WLjEWMpbxXaJp98w\""
										},
										{
											"key": "Date",
											"value": "Sun, 19 Jun 2022 04:29:17 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": false,\n    \"errors\": [\n        \"FTPS connection is not ready\"\n    ],\n    \"statusCode\": 679,\n    \"result\": null\n}"
								}
							]
						},
						{
							"name": "Update FTPS Repository by ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () {",
											"    pm.response.to.have.status(404);",
											"});",
											"",
											"pm.test(\"Should return error 'No evidence repository found by provided id(s)'\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.errors).to.eql([\"No evidence repository found by provided id(s)\"]);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Example FTPS Repository\",\n    \"host\": \"ftps.example.com\",\n    \"port\": 22,\n    \"path\": \"/\",\n    \"username\": \"admin\",\n    \"password\": \"admin\",\n    \"allowSelfSignedSSL\": false,\n    \"publicKey\": \"\",\n    \"organizationIds\": []\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/{{apiPrefix}}/evidences/repositories/ftps/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"{{apiPrefix}}",
										"evidences",
										"repositories",
										"ftps",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": null,
											"description": "Repository ID"
										}
									]
								},
								"description": "### Parameters\n\n| **Name**                                                     | **Constraints**        |\n| ------------------------------------------------------------ | ---------------------- |\n| **name** <br>string / required                               |                        |\n| **host** <br>string / required                               |                        |\n| **port** <br>number / required                               | min: 0 <br> max: 65535 |\n| **path** <br>string / required                               |                        |\n| **username** <br>string / optional                           |                        |\n| **password** <br>string / if username is not empty: required |                        |\n| **allowSelfSignedSSL** <br>boolean / required                |                        |\n| **publicKey** <br>string / if allowSelfSignedSSL is true: required                          |                        |\n| **organizationIds** <br>number array / optional              |                        |"
							},
							"response": [
								{
									"name": "Update FTPS Repository by ID - 200 OK",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"name": "Content-Type",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"Example FTPS Repository\",\n    \"host\": \"ftps.example.com\",\n    \"port\": 22,\n    \"path\": \"/\",\n    \"username\": \"demo\",\n    \"password\": \"demo\",\n    \"allowSelfSignedSSL\": false,\n    \"publicKey\": null,\n    \"organizationIds\": []\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/{{apiPrefix}}/evidences/repositories/ftps/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"{{apiPrefix}}",
												"evidences",
												"repositories",
												"ftps",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "hFYmdNLvirVx7xVnmhu65syt",
													"description": "Repository ID"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "445"
										},
										{
											"key": "ETag",
											"value": "W/\"1bd-LDhUw96ZuP9GT9J5p63IWiMKm10\""
										},
										{
											"key": "Date",
											"value": "Sun, 19 Jun 2022 04:20:09 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"result\": {\n        \"_id\": \"hFYmdNLvirVx7xVnmhu65syt\",\n        \"createdAt\": \"2022-06-19T04:20:09.087Z\",\n        \"updatedAt\": \"2022-06-19T04:20:09.087Z\",\n        \"name\": \"Example FTPS Repository\",\n        \"path\": \"/\",\n        \"username\": \"demo\",\n        \"password\": \"demo\",\n        \"type\": \"ftps\",\n        \"host\": \"ftps.example.com\",\n        \"port\": 22,\n        \"SASUrl\": null,\n        \"region\": null,\n        \"bucket\": null,\n        \"accessKeyId\": null,\n        \"secretAccessKey\": null,\n        \"organizationIds\": [],\n        \"allowSelfSignedSSL\": false,\n        \"publicKey\": null\n    },\n    \"statusCode\": 200,\n    \"errors\": []\n}"
								},
								{
									"name": "Update FTPS Repository by ID - 404 Not Found",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"name": "Content-Type",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"Example FTPS Repository\",\n    \"host\": \"ftps.example.com\",\n    \"port\": 22,\n    \"path\": \"/\",\n    \"username\": \"admin\",\n    \"password\": \"admin\",\n    \"allowSelfSignedSSL\": false,\n    \"publicKey\": \"\",\n    \"organizationIds\": []\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/{{apiPrefix}}/evidences/repositories/ftps/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"{{apiPrefix}}",
												"evidences",
												"repositories",
												"ftps",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": null,
													"description": "Repository ID"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "108"
										},
										{
											"key": "ETag",
											"value": "W/\"6c-aN4UDtK+v+db1tJwGD6A3kIJ+34\""
										},
										{
											"key": "Date",
											"value": "Sun, 19 Jun 2022 04:37:21 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": false,\n    \"errors\": [\n        \"No evidence repository found by provided id(s)\"\n    ],\n    \"statusCode\": 404,\n    \"result\": null\n}"
								}
							]
						},
						{
							"name": "Validate FTPS Repository",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 678\", function () {",
											"    pm.response.to.have.status(678);",
											"});",
											"",
											"pm.test(\"Should return error 'getaddrinfo ENOTFOUND ftps.example.com'\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.errors).to.eql([\"getaddrinfo ENOTFOUND ftps.example.com\"]);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Example FTPS Repository\",\n    \"host\": \"ftps.example.com\",\n    \"port\": 22,\n    \"path\": \"/\",\n    \"username\": \"admin\",\n    \"password\": \"admin\",\n    \"allowSelfSignedSSL\": false,\n    \"publicKey\": \"\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/{{apiPrefix}}/evidences/repositories/validate/ftps",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"{{apiPrefix}}",
										"evidences",
										"repositories",
										"validate",
										"ftps"
									]
								},
								"description": "### Parameters\n\n| **Name**                                                     | **Constraints**        |\n| ------------------------------------------------------------ | ---------------------- |\n| **name** <br>string / required                               |                        |\n| **host** <br>string / required                               |                        |\n| **port** <br>number / required                               | min: 0 <br> max: 65535 |\n| **path** <br>string / required                               |                        |\n| **username** <br>string / optional                           |                        |\n| **password** <br>string / if username is not empty: required |                        |\n| **allowSelfSignedSSL** <br>boolean / required                |                        |\n| **publicKey** <br>string / if allowSelfSignedSSL is true: required                          |                        |\n| **organizationIds** <br>number array / optional              |                        |"
							},
							"response": [
								{
									"name": "Validate FTPS Repository - 200 OK",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"name": "Content-Type",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"Example FTPS Repository\",\n    \"host\": \"ftps.example.com\",\n    \"port\": 22,\n    \"path\": \"/\",\n    \"username\": \"admin\",\n    \"password\": \"admin\",\n    \"allowSelfSignedSSL\": false,\n    \"publicKey\": \"\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/{{apiPrefix}}/evidences/repositories/ftps",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"{{apiPrefix}}",
												"evidences",
												"repositories",
												"ftps"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "100"
										},
										{
											"key": "ETag",
											"value": "W/\"64-hSu22drI+ZITi+AvIDid98hHURs\""
										},
										{
											"key": "Date",
											"value": "Sun, 19 Jun 2022 04:37:08 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"errors\": [],\n    \"statusCode\": 200,\n    \"result\": null\n}"
								},
								{
									"name": "Validate FTPS Repository - 400 Bad Request",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"name": "Content-Type",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"Example FTPS Repository\",\n    \"host\": \"\",\n    \"port\": 22,\n    \"path\": \"/\",\n    \"username\": \"admin\",\n    \"password\": \"admin\",\n    \"allowSelfSignedSSL\": false,\n    \"publicKey\": \"\",\n    \"organizationIds\": []\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/{{apiPrefix}}/evidences/repositories/ftps",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"{{apiPrefix}}",
												"evidences",
												"repositories",
												"ftps"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "119"
										},
										{
											"key": "ETag",
											"value": "W/\"77-hrSfkyXH9tB3+1gZxDrfAwAwnkM\""
										},
										{
											"key": "Date",
											"value": "Sun, 19 Jun 2022 04:38:00 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": false,\n    \"errors\": [\n        \"Should be a valid IP or Domain\",\n        \"host should not be empty\"\n    ],\n    \"statusCode\": 400,\n    \"result\": null\n}"
								},
								{
									"name": "Validate FTPS Repository - 678 FTPS Requested Action Aborted Copy",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"name": "Content-Type",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"Example FTPS Repository\",\n    \"host\": \"ftps.example.com\",\n    \"port\": 22,\n    \"path\": \"/\",\n    \"username\": \"admin\",\n    \"password\": \"admin\",\n    \"allowSelfSignedSSL\": false,\n    \"publicKey\": \"\",\n    \"organizationIds\": []\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/{{apiPrefix}}/evidences/repositories/ftps",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"{{apiPrefix}}",
												"evidences",
												"repositories",
												"ftps"
											]
										}
									},
									"status": "unknown",
									"code": 678,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "100"
										},
										{
											"key": "ETag",
											"value": "W/\"64-hSu22drI+ZITi+AvIDid98hHURs\""
										},
										{
											"key": "Date",
											"value": "Sun, 19 Jun 2022 04:37:08 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": false,\n    \"errors\": [\n        \"getaddrinfo ENOTFOUND ftps.example.com\"\n    ],\n    \"statusCode\": 678,\n    \"result\": null\n}"
								}
							]
						},
						{
							"name": "Create Azure Storage Repository",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"",
											"pm.test(\"Should return error 'SASUrl must be a URL address'\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.errors).to.eql([\"SASUrl must be a URL address\"]);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Example Azure Storage Repository\",\n    \"SASUrl\": \"sasurl\",\n    \"organizationIds\": []\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/{{apiPrefix}}/evidences/repositories/azure-storage",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"{{apiPrefix}}",
										"evidences",
										"repositories",
										"azure-storage"
									]
								},
								"description": "### Parameters\n\n| **Name**                                        | **Constraints** |\n| ----------------------------------------------- | --------------- |\n| **name** <br>string / required                  |                 |\n| **SASUrl** <br>string / required                |                 |\n| **organizationIds** <br>number array / optional |                 |"
							},
							"response": [
								{
									"name": "Create Azure Storage Repository - 200 OK",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"name": "Content-Type",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"Example Azure Storage Repository\",\n    \"SASUrl\": \"<SASUrl>\",\n    \"organizationIds\": []\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/{{apiPrefix}}/evidences/repositories/azure-storage",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"{{apiPrefix}}",
												"evidences",
												"repositories",
												"azure-storage"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "445"
										},
										{
											"key": "ETag",
											"value": "W/\"1bd-LDhUw96ZuP9GT9J5p63IWiMKm10\""
										},
										{
											"key": "Date",
											"value": "Sun, 19 Jun 2022 04:20:09 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"result\": {\n        \"_id\": \"yFYmdNLvirVx7xVnmhu65syt\",\n        \"createdAt\": \"2022-06-19T04:20:09.087Z\",\n        \"updatedAt\": \"2022-06-19T04:20:09.087Z\",\n        \"name\": \"Example Azure Storage Repository\",\n        \"path\": null,\n        \"username\": null,\n        \"password\": null,\n        \"type\": \"azure-storage\",\n        \"host\": null,\n        \"port\": null,\n        \"SASUrl\": \"<SASUrl>\",\n        \"region\": null,\n        \"bucket\": null,\n        \"accessKeyId\": null,\n        \"secretAccessKey\": null,\n        \"organizationIds\": [],\n        \"allowSelfSignedSSL\": null,\n        \"publicKey\": null\n    },\n    \"statusCode\": 200,\n    \"errors\": []\n}"
								},
								{
									"name": "Create Azure Storage Repository - 400 Bad Request",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"name": "Content-Type",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"Example Azure Storage Repository\",\n    \"SASUrl\": \"\",\n    \"organizationIds\": []\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/{{apiPrefix}}/evidences/repositories/azure-storage",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"{{apiPrefix}}",
												"evidences",
												"repositories",
												"azure-storage"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "120"
										},
										{
											"key": "ETag",
											"value": "W/\"78-xLJBdvf4/QvHty5ZpfKE93GtdhM\""
										},
										{
											"key": "Date",
											"value": "Sun, 19 Jun 2022 05:01:27 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": false,\n    \"errors\": [\n        \"SASUrl must be an URL address\",\n        \"SASUrl should not be empty\"\n    ],\n    \"statusCode\": 400,\n    \"result\": null\n}"
								},
								{
									"name": "Create Azure Storage Repository - 603 Forbidden",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"name": "Content-Type",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"Example Azure Storage Repository\",\n    \"SASUrl\": \"sasurl\",\n    \"organizationIds\": []\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/{{apiPrefix}}/evidences/repositories/azure-storage",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"{{apiPrefix}}",
												"evidences",
												"repositories",
												"azure-storage"
											]
										}
									},
									"status": "Forbidden",
									"code": 603,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "193"
										},
										{
											"key": "ETag",
											"value": "W/\"c1-mr8L1xJGeNhcHgWX+XGsCcxfWY4\""
										},
										{
											"key": "Date",
											"value": "Sun, 19 Jun 2022 05:00:11 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": false,\n    \"errors\": [\n        \"Server failed to authenticate the request. Make sure the value of Authorization header is formed correctly including the signature.\"\n    ],\n    \"statusCode\": 603,\n    \"result\": null\n}"
								}
							]
						},
						{
							"name": "Update Azure Storage Repository by ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () {",
											"    pm.response.to.have.status(404);",
											"});",
											"",
											"pm.test(\"Should return error 'No evidence repository found by provided id(s)'\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.errors).to.eql([\"No evidence repository found by provided id(s)\"]);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Example Azure Storage Repository\",\n    \"SASUrl\": \"sasurl\",\n    \"organizationIds\": []\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/{{apiPrefix}}/evidences/repositories/azure-storage/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"{{apiPrefix}}",
										"evidences",
										"repositories",
										"azure-storage",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "",
											"description": "Repository ID"
										}
									]
								},
								"description": "### Parameters\n\n| **Name**                                        | **Constraints** |\n| ----------------------------------------------- | --------------- |\n| **name** <br>string / required                  |                 |\n| **SASUrl** <br>string / required                |                 |\n| **organizationIds** <br>number array / optional |                 |"
							},
							"response": [
								{
									"name": "Update Azure Storage Repository by ID - 200 OK",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"name": "Content-Type",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"Example Azure Storage Repository\",\n    \"SASUrl\": \"<SASUrl_2>\",\n    \"organizationIds\": [1]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/{{apiPrefix}}/evidences/repositories/azure-storage/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"{{apiPrefix}}",
												"evidences",
												"repositories",
												"azure-storage",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "yFYmdNLvirVx7xVnmhu65syt",
													"description": "Repository ID"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "445"
										},
										{
											"key": "ETag",
											"value": "W/\"1bd-LDhUw96ZuP9GT9J5p63IWiMKm10\""
										},
										{
											"key": "Date",
											"value": "Sun, 19 Jun 2022 04:20:09 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"result\": {\n        \"_id\": \"yFYmdNLvirVx7xVnmhu65syt\",\n        \"createdAt\": \"2022-06-19T04:20:09.087Z\",\n        \"updatedAt\": \"2022-06-19T04:20:09.087Z\",\n        \"name\": \"Example Azure Storage Repository\",\n        \"path\": null,\n        \"username\": null,\n        \"password\": null,\n        \"type\": \"azure-storage\",\n        \"host\": null,\n        \"port\": null,\n        \"SASUrl\": \"<SASUrl_2>\",\n        \"region\": null,\n        \"bucket\": null,\n        \"accessKeyId\": null,\n        \"secretAccessKey\": null,\n        \"organizationIds\": [1],\n        \"allowSelfSignedSSL\": null,\n        \"publicKey\": null\n    },\n    \"statusCode\": 200,\n    \"errors\": []\n}"
								},
								{
									"name": "Update Azure Storage Repository by ID - 404 Not Found",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"name": "Content-Type",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"Example Azure Storage Repository\",\n    \"SASUrl\": \"sasurl\",\n    \"organizationIds\": []\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/{{apiPrefix}}/evidences/repositories/azure-storage/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"{{apiPrefix}}",
												"evidences",
												"repositories",
												"azure-storage",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": null,
													"description": "Repository ID"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "108"
										},
										{
											"key": "ETag",
											"value": "W/\"6c-aN4UDtK+v+db1tJwGD6A3kIJ+34\""
										},
										{
											"key": "Date",
											"value": "Sun, 19 Jun 2022 05:05:23 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": false,\n    \"errors\": [\n        \"No evidence repository found by provided id(s)\"\n    ],\n    \"statusCode\": 404,\n    \"result\": null\n}"
								},
								{
									"name": "Update Azure Storage Repository by ID - 400 Bad Request",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"name": "Content-Type",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"Example Azure Storage Repository\",\n    \"SASUrl\": \"\",\n    \"organizationIds\": []\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/{{apiPrefix}}/evidences/repositories/azure-storage/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"{{apiPrefix}}",
												"evidences",
												"repositories",
												"azure-storage",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "1",
													"description": "Repository ID"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "120"
										},
										{
											"key": "ETag",
											"value": "W/\"78-xLJBdvf4/QvHty5ZpfKE93GtdhM\""
										},
										{
											"key": "Date",
											"value": "Sun, 19 Jun 2022 05:09:19 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": false,\n    \"errors\": [\n        \"SASUrl must be an URL address\",\n        \"SASUrl should not be empty\"\n    ],\n    \"statusCode\": 400,\n    \"result\": null\n}"
								}
							]
						},
						{
							"name": "Validate Azure Storage Repository",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"",
											"pm.test(\"Should return error 'SASUrl is not a valid url'\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.errors).to.eql([\"SASUrl is not a valid url\"]);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Example Azure Storage Repository\",\n    \"SASUrl\": \"sasurl\",\n    \"organizationIds\": []\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/{{apiPrefix}}/evidences/repositories/validate/azure-storage",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"{{apiPrefix}}",
										"evidences",
										"repositories",
										"validate",
										"azure-storage"
									]
								},
								"description": "### Parameters\n\n| **Name**                                        | **Constraints** |\n| ----------------------------------------------- | --------------- |\n| **name** <br>string / required                  |                 |\n| **SASUrl** <br>string / required                |                 |\n| **organizationIds** <br>number array / optional |                 |"
							},
							"response": [
								{
									"name": "Validate Azure Storage Repository - 200 OK",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"name": "Content-Type",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"SASUrl\": \"sasurl\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/{{apiPrefix}}/evidences/repositories/validate/azure-storage",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"{{apiPrefix}}",
												"evidences",
												"repositories",
												"validate",
												"azure-storage"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "193"
										},
										{
											"key": "ETag",
											"value": "W/\"c1-mr8L1xJGeNhcHgWX+XGsCcxfWY4\""
										},
										{
											"key": "Date",
											"value": "Sun, 19 Jun 2022 05:10:03 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"errors\": [],\n    \"statusCode\": 200,\n    \"result\": null\n}"
								},
								{
									"name": "Validate Azure Storage Repository - 603 Forbidden",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"name": "Content-Type",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"Example Azure Storage Repository\",\n    \"SASUrl\": \"SASURL\",\n    \"organizationIds\": []\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/{{apiPrefix}}/evidences/repositories/validate/azure-storage",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"{{apiPrefix}}",
												"evidences",
												"repositories",
												"validate",
												"azure-storage"
											]
										}
									},
									"status": "unknown",
									"code": 603,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "193"
										},
										{
											"key": "ETag",
											"value": "W/\"c1-mr8L1xJGeNhcHgWX+XGsCcxfWY4\""
										},
										{
											"key": "Date",
											"value": "Sun, 19 Jun 2022 05:10:03 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": false,\n    \"errors\": [\n        \"Server failed to authenticate the request. Make sure the value of Authorization header is formed correctly including the signature.\"\n    ],\n    \"statusCode\": 603,\n    \"result\": null\n}"
								}
							]
						},
						{
							"name": "Create Amazon S3 Repository",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"",
											"pm.test(\"Should return error 'SASUrl must be a URL address'\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.errors).to.includes(\"region should not be empty\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Example Amazon S3 Repository\",\n    \"region\": \"\",\n    \"bucket\": \"test\",\n    \"accessKeyId\": \"<accessKeyId>\",\n    \"secretAccessKey\": \"<secretAccessKey>\",\n    \"organizationIds\": []\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/{{apiPrefix}}/evidences/repositories/amazon-s3",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"{{apiPrefix}}",
										"evidences",
										"repositories",
										"amazon-s3"
									]
								},
								"description": "### Parameters\n\n| **Name**                                        | **Constraints** |\n| ----------------------------------------------- | --------------- |\n| **name** <br>string / required                  |                 |\n| **region** <br>string / required                |                 |\n| **bucket** <br>string / required                |                 |\n| **accessKeyId** <br>string / required           |                 |\n| **secretAccessKey** <br>string / required       |                 |\n| **organizationIds** <br>number array / optional |                 |"
							},
							"response": [
								{
									"name": "Create Amazon S3 Repository - 200 OK",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"name": "Content-Type",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"Example Amazon S3 Repository\",\n    \"region\": \"eu-west-1\",\n    \"bucket\": \"test\",\n    \"accessKeyId\": \"<accessKeyId>\",\n    \"secretAccessKey\": \"<secretAccessKey>\",\n    \"organizationIds\": []\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/{{apiPrefix}}/evidences/repositories/amazon-s3",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"{{apiPrefix}}",
												"evidences",
												"repositories",
												"amazon-s3"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "445"
										},
										{
											"key": "ETag",
											"value": "W/\"1bd-LDhUw96ZuP9GT9J5p63IWiMKm10\""
										},
										{
											"key": "Date",
											"value": "Sun, 19 Jun 2022 04:20:09 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"result\": {\n        \"_id\": \"aFYmdNLvirVx7xVnmhu65syt\",\n        \"createdAt\": \"2022-06-19T04:20:09.087Z\",\n        \"updatedAt\": \"2022-06-19T04:20:09.087Z\",\n        \"name\": \"Example Amazon S3 Repository\",\n        \"path\": null,\n        \"username\": null,\n        \"password\": null,\n        \"type\": \"amazon-s3\",\n        \"host\": null,\n        \"port\": null,\n        \"SASUrl\": null,\n        \"region\": \"eu-west-1\",\n        \"bucket\": \"test\",\n        \"accessKeyId\": \"<accessKeyId>\",\n        \"secretAccessKey\": \"<secretAccessKey>\",\n        \"organizationIds\": [],\n        \"allowSelfSignedSSL\": null,\n        \"publicKey\": null\n    },\n    \"statusCode\": 200,\n    \"errors\": []\n}"
								},
								{
									"name": "Create Amazon S3 Repository - 400 Bad Request",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"name": "Content-Type",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/{{apiPrefix}}/evidences/repositories/amazon-s3",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"{{apiPrefix}}",
												"evidences",
												"repositories",
												"amazon-s3"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "398"
										},
										{
											"key": "ETag",
											"value": "W/\"18e-yf95p5SL7pv672UpT/+N3BWQr6g\""
										},
										{
											"key": "Date",
											"value": "Sun, 19 Jun 2022 05:20:38 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": false,\n    \"errors\": [\n        \"region should not be empty\",\n        \"region must be a valid enum value\",\n        \"bucket should not be empty\",\n        \"bucket must be a string\",\n        \"accessKeyId should not be empty\",\n        \"accessKeyId must be a string\",\n        \"secretAccessKey should not be empty\",\n        \"secretAccessKey must be a string\",\n        \"name should not be empty\",\n        \"name must not be whitespace\",\n        \"name must be a string\"\n    ],\n    \"statusCode\": 400,\n    \"result\": null\n}"
								},
								{
									"name": "Create Amazon S3 Repository - 603 Forbidden",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"name": "Content-Type",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"Example Amazon S3 Repository\",\n    \"region\": \"eu-west-1\",\n    \"bucket\": \"test\",\n    \"accessKeyId\": \"<accessKeyId>\",\n    \"secretAccessKey\": \"<secretAccessKey>\",\n    \"organizationIds\": []\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/{{apiPrefix}}/evidences/repositories/amazon-s3",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"{{apiPrefix}}",
												"evidences",
												"repositories",
												"amazon-s3"
											]
										}
									},
									"status": "Forbidden",
									"code": 603,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "127"
										},
										{
											"key": "ETag",
											"value": "W/\"7f-B77sQ1LbbCAKoR/D8zRYtXSTR08\""
										},
										{
											"key": "Date",
											"value": "Sun, 19 Jun 2022 05:17:09 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": false,\n    \"errors\": [\n        \"The AWS Access Key Id you provided does not exist in our records.\"\n    ],\n    \"statusCode\": 603,\n    \"result\": null\n}"
								}
							]
						},
						{
							"name": "Update Amazon S3 Repository by ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () {",
											"    pm.response.to.have.status(404);",
											"});",
											"",
											"pm.test(\"Should return error 'No evidence repository found by provided id(s)'\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.errors).to.eql([\"No evidence repository found by provided id(s)\"]);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Example Amazon S3 Repository\",\n    \"region\": \"eu-west-1\",\n    \"bucket\": \"test\",\n    \"accessKeyId\": \"<accessKeyId>\",\n    \"secretAccessKey\": \"<secretAccessKey>\",\n    \"organizationIds\": []\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/{{apiPrefix}}/evidences/repositories/amazon-s3/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"{{apiPrefix}}",
										"evidences",
										"repositories",
										"amazon-s3",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "",
											"description": "Repository ID"
										}
									]
								},
								"description": "### Parameters\n\n| **Name**                                        | **Constraints** |\n| ----------------------------------------------- | --------------- |\n| **name** <br>string / required                  |                 |\n| **region** <br>string / required                |                 |\n| **bucket** <br>string / required                |                 |\n| **accessKeyId** <br>string / required           |                 |\n| **secretAccessKey** <br>string / required       |                 |\n| **organizationIds** <br>number array / optional |                 |"
							},
							"response": [
								{
									"name": "Update Amazon S3 Repository by ID - 200 OK",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"name": "Content-Type",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"Example Amazon S3 Repository\",\n    \"region\": \"eu-west-2\",\n    \"bucket\": \"images\",\n    \"accessKeyId\": \"<accessKeyId>\",\n    \"secretAccessKey\": \"<secretAccessKey>\",\n    \"organizationIds\": [1]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/{{apiPrefix}}/evidences/repositories/amazon-s3/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"{{apiPrefix}}",
												"evidences",
												"repositories",
												"amazon-s3",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "aFYmdNLvirVx7xVnmhu65syt",
													"description": "Repository ID"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "445"
										},
										{
											"key": "ETag",
											"value": "W/\"1bd-LDhUw96ZuP9GT9J5p63IWiMKm10\""
										},
										{
											"key": "Date",
											"value": "Sun, 19 Jun 2022 04:20:09 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"result\": {\n        \"_id\": \"aFYmdNLvirVx7xVnmhu65syt\",\n        \"createdAt\": \"2022-06-19T04:20:09.087Z\",\n        \"updatedAt\": \"2022-06-19T04:20:09.087Z\",\n        \"name\": \"Example Amazon S3 Repository\",\n        \"path\": null,\n        \"username\": null,\n        \"password\": null,\n        \"type\": \"amazon-s3\",\n        \"host\": null,\n        \"port\": null,\n        \"SASUrl\": null,\n        \"region\": \"eu-west-2\",\n        \"bucket\": \"images\",\n        \"accessKeyId\": \"<accessKeyId>\",\n        \"secretAccessKey\": \"<secretAccessKey>\",\n        \"organizationIds\": [\n            1\n        ],\n        \"allowSelfSignedSSL\": null,\n        \"publicKey\": null\n    },\n    \"statusCode\": 200,\n    \"errors\": []\n}"
								},
								{
									"name": "Update Amazon S3 Repository by ID - 400 Bad Request",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"name": "Content-Type",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/{{apiPrefix}}/evidences/repositories/amazon-s3/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"{{apiPrefix}}",
												"evidences",
												"repositories",
												"amazon-s3",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "1",
													"description": "Repository ID"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "398"
										},
										{
											"key": "ETag",
											"value": "W/\"18e-yf95p5SL7pv672UpT/+N3BWQr6g\""
										},
										{
											"key": "Date",
											"value": "Sun, 19 Jun 2022 05:21:27 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": false,\n    \"errors\": [\n        \"region should not be empty\",\n        \"region must be a valid enum value\",\n        \"bucket should not be empty\",\n        \"bucket must be a string\",\n        \"accessKeyId should not be empty\",\n        \"accessKeyId must be a string\",\n        \"secretAccessKey should not be empty\",\n        \"secretAccessKey must be a string\",\n        \"name should not be empty\",\n        \"name must not be whitespace\",\n        \"name must be a string\"\n    ],\n    \"statusCode\": 400,\n    \"result\": null\n}"
								},
								{
									"name": "Update Amazon S3 Repository by ID - 603 Forbidden",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"name": "Content-Type",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"Example Amazon S3 Repository\",\n    \"region\": \"eu-west-1\",\n    \"bucket\": \"test\",\n    \"accessKeyId\": \"<accessKeyId>\",\n    \"secretAccessKey\": \"<secretAccessKey>\",\n    \"organizationIds\": []\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/{{apiPrefix}}/evidences/repositories/amazon-s3/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"{{apiPrefix}}",
												"evidences",
												"repositories",
												"amazon-s3",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "1",
													"description": "Repository ID"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 603,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "127"
										},
										{
											"key": "ETag",
											"value": "W/\"7f-B77sQ1LbbCAKoR/D8zRYtXSTR08\""
										},
										{
											"key": "Date",
											"value": "Sun, 19 Jun 2022 05:17:51 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": false,\n    \"errors\": [\n        \"The AWS Access Key Id you provided does not exist in our records.\"\n    ],\n    \"statusCode\": 603,\n    \"result\": null\n}"
								}
							]
						},
						{
							"name": "Validate Amazon S3 Repository",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 603\", function () {",
											"    pm.response.to.have.status(603);",
											"});",
											"",
											"pm.test(\"Should return error 'The AWS Access Key Id you provided does not exist in our records.'\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.errors).to.eql([\"The AWS Access Key Id you provided does not exist in our records.\"]);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Example Amazon S3 Repository\",\n    \"region\": \"eu-west-1\",\n    \"bucket\": \"test\",\n    \"accessKeyId\": \"<accessKeyId>\",\n    \"secretAccessKey\": \"<secretAccessKey>\",\n    \"organizationIds\": []\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/{{apiPrefix}}/evidences/repositories/validate/amazon-s3",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"{{apiPrefix}}",
										"evidences",
										"repositories",
										"validate",
										"amazon-s3"
									]
								},
								"description": "### Parameters\n\n| **Name**                                        | **Constraints** |\n| ----------------------------------------------- | --------------- |\n| **name** <br>string / required                  |                 |\n| **region** <br>string / required                |                 |\n| **bucket** <br>string / required                |                 |\n| **accessKeyId** <br>string / required           |                 |\n| **secretAccessKey** <br>string / required       |                 |\n| **organizationIds** <br>number array / optional |                 |"
							},
							"response": [
								{
									"name": "Validate Amazon S3 Repository - 200 OK",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"name": "Content-Type",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"Example Amazon S3 Repository\",\n    \"region\": \"eu-west-1\",\n    \"bucket\": \"test\",\n    \"accessKeyId\": \"<accessKeyId>\",\n    \"secretAccessKey\": \"<secretAccessKey>\",\n    \"organizationIds\": []\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/{{apiPrefix}}/evidences/repositories/validate/amazon-s3",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"{{apiPrefix}}",
												"evidences",
												"repositories",
												"validate",
												"amazon-s3"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "127"
										},
										{
											"key": "ETag",
											"value": "W/\"7f-B77sQ1LbbCAKoR/D8zRYtXSTR08\""
										},
										{
											"key": "Date",
											"value": "Sun, 19 Jun 2022 05:18:14 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"errors\": [],\n    \"statusCode\": 200,\n    \"result\": null\n}"
								},
								{
									"name": "Validate Amazon S3 Repository - 603 Forbidden",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"name": "Content-Type",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"Example Amazon S3 Repository\",\n    \"region\": \"eu-west-1\",\n    \"bucket\": \"test\",\n    \"accessKeyId\": \"<accessKeyId>\",\n    \"secretAccessKey\": \"<secretAccessKey>\",\n    \"organizationIds\": []\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/{{apiPrefix}}/evidences/repositories/validate/amazon-s3",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"{{apiPrefix}}",
												"evidences",
												"repositories",
												"validate",
												"amazon-s3"
											]
										}
									},
									"status": "Forbidden",
									"code": 603,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "127"
										},
										{
											"key": "ETag",
											"value": "W/\"7f-B77sQ1LbbCAKoR/D8zRYtXSTR08\""
										},
										{
											"key": "Date",
											"value": "Sun, 19 Jun 2022 05:18:14 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": false,\n    \"errors\": [\n        \"The AWS Access Key Id you provided does not exist in our records.\"\n    ],\n    \"statusCode\": 603,\n    \"result\": null\n}"
								},
								{
									"name": "Validate Amazon S3 Repository - 400 Bad Request",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"name": "Content-Type",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/{{apiPrefix}}/evidences/repositories/validate/amazon-s3",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"{{apiPrefix}}",
												"evidences",
												"repositories",
												"validate",
												"amazon-s3"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "285"
										},
										{
											"key": "ETag",
											"value": "W/\"11d-ykXBKx0tiAjpyeIj9GA+gzYeSWc\""
										},
										{
											"key": "Date",
											"value": "Sun, 19 Jun 2022 05:22:03 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": false,\n    \"errors\": [\n        \"region must be a valid enum value\",\n        \"AWS region is must.\",\n        \"bucket must be a string\",\n        \"S3 bucket is must.\",\n        \"accessKeyId must be a string\",\n        \"AWS Access Key Id is must.\",\n        \"secretAccessKey must be a string\",\n        \"AWS Access Key is must.\"\n    ],\n    \"statusCode\": 400,\n    \"result\": null\n}"
								}
							]
						},
						{
							"name": "Get Repository by ID",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.runForTest(() => {",
											"    pm.request.url.variables.add({",
											"        key: 'id',",
											"        value: pm.collectionVariables.get('repositoryId')",
											"    })",
											"})"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/{{apiPrefix}}/evidences/repositories/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"{{apiPrefix}}",
										"evidences",
										"repositories",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "",
											"description": "Repository ID"
										}
									]
								}
							},
							"response": [
								{
									"name": "Get Repository by ID - 200 OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/{{apiPrefix}}/evidences/repositories/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"{{apiPrefix}}",
												"evidences",
												"repositories",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "dOHIYeyPKEWbN9HYC4kyeeO6",
													"description": "Repository ID"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "466"
										},
										{
											"key": "ETag",
											"value": "W/\"1d2-LzceG6QaANU3vLOh9T6WXOCI/Qg\""
										},
										{
											"key": "Date",
											"value": "Sat, 18 Jun 2022 20:18:53 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"result\": {\n        \"_id\": \"dOHIYeyPKEWbN9HYC4kyeeO6\",\n        \"createdAt\": \"2022-06-18T20:10:12.291Z\",\n        \"updatedAt\": \"2022-06-18T20:10:12.291Z\",\n        \"name\": \"Example SMB Repository\",\n        \"path\": \"\\\\Network\\\\Share\",\n        \"username\": \"admin\",\n        \"password\": \"admin\",\n        \"type\": \"smb\",\n        \"host\": null,\n        \"port\": null,\n        \"SASUrl\": null,\n        \"region\": null,\n        \"bucket\": null,\n        \"accessKeyId\": null,\n        \"secretAccessKey\": null,\n        \"organizationIds\": [],\n        \"allowSelfSignedSSL\": null,\n        \"publicKey\": null,\n        \"relatedItems\": []\n    },\n    \"statusCode\": 200,\n    \"errors\": []\n}"
								},
								{
									"name": "Get Repository by ID - Not Found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/{{apiPrefix}}/evidences/repositories/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"{{apiPrefix}}",
												"evidences",
												"repositories",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "1",
													"description": "Repository ID"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "108"
										},
										{
											"key": "ETag",
											"value": "W/\"6c-aN4UDtK+v+db1tJwGD6A3kIJ+34\""
										},
										{
											"key": "Date",
											"value": "Sat, 18 Jun 2022 20:19:12 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": false,\n    \"errors\": [\n        \"No evidence repository found by provided id(s)\"\n    ],\n    \"statusCode\": 404,\n    \"result\": null\n}"
								}
							]
						},
						{
							"name": "Delete Repository by ID",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.runForTest(() => {",
											"    pm.request.url.variables.add({",
											"        key: 'id', ",
											"        value: pm.collectionVariables.get('repositoryId')",
											"    })",
											"})"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{baseUrl}}/{{apiPrefix}}/evidences/repositories/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"{{apiPrefix}}",
										"evidences",
										"repositories",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "",
											"description": "Repository ID"
										}
									]
								}
							},
							"response": [
								{
									"name": "Delete Repository by ID - 200 OK",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{baseUrl}}/{{apiPrefix}}/evidences/repositories/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"{{apiPrefix}}",
												"evidences",
												"repositories",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "a5LGhKhJyflOcfEMtKPpg4yN",
													"description": "Repository ID"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "59"
										},
										{
											"key": "ETag",
											"value": "W/\"3b-MHtur75ftUyQ2IfDqFjH6SAxAM4\""
										},
										{
											"key": "Date",
											"value": "Sat, 18 Jun 2022 20:05:06 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"result\": null,\n    \"statusCode\": 200,\n    \"errors\": []\n}"
								},
								{
									"name": "Delete Repository by ID - 404 Not Found",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{baseUrl}}/{{apiPrefix}}/evidences/repositories/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"{{apiPrefix}}",
												"evidences",
												"repositories",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "a5LGhKhJyflOcfEMtKPpg4yN",
													"description": "Repository ID"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "108"
										},
										{
											"key": "ETag",
											"value": "W/\"6c-aN4UDtK+v+db1tJwGD6A3kIJ+34\""
										},
										{
											"key": "Date",
											"value": "Sat, 18 Jun 2022 20:05:19 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": false,\n    \"errors\": [\n        \"No evidence repository found by provided id(s)\"\n    ],\n    \"statusCode\": 404,\n    \"result\": null\n}"
								}
							]
						}
					]
				},
				{
					"name": "Download Endpoint PPC File",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.runForTest(() => {",
									"    pm.request.url.variables.add({",
									"        key: 'endpointId',",
									"        value: pm.collectionVariables.get('endpointId')",
									"    })",
									"",
									"    pm.request.url.variables.add({",
									"        key: 'taskId',",
									"        value: 'no-task-id'",
									"    })",
									"})"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"",
									"pm.test(\"Should return error 'No task(s) found by provided id(s)'\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.errors).to.eql([\"No task(s) found by provided id(s)\"]);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/{{apiPrefix}}/evidence/case/ppc/:endpointId/:taskId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"{{apiPrefix}}",
								"evidence",
								"case",
								"ppc",
								":endpointId",
								":taskId"
							],
							"variable": [
								{
									"key": "endpointId",
									"value": "",
									"description": "Endpoint ID"
								},
								{
									"key": "taskId",
									"value": "",
									"description": "Task ID"
								}
							]
						}
					},
					"response": [
						{
							"name": "Download Endpoint PPC File - 404 Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/{{apiPrefix}}/evidence/case/ppc/:endpointId/:taskId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"{{apiPrefix}}",
										"evidence",
										"case",
										"ppc",
										":endpointId",
										":taskId"
									],
									"variable": [
										{
											"key": "endpointId",
											"value": "ep-1"
										},
										{
											"key": "taskId",
											"value": "task-1"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "100"
								},
								{
									"key": "ETag",
									"value": "W/\"64-azrSR08dm3x2Kb54usGRko3OeVA\""
								},
								{
									"key": "Date",
									"value": "Mon, 23 May 2022 05:55:06 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"errors\": [\n        \"No endpoint(s) found by provided id(s)\"\n    ],\n    \"statusCode\": 404,\n    \"result\": null\n}"
						}
					]
				},
				{
					"name": "Download Endpoint Task Report",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.runForTest(() => {",
									"    pm.request.url.variables.add({",
									"        key: 'endpointId',",
									"        value: pm.collectionVariables.get('endpointId')",
									"    })",
									"",
									"    pm.request.url.variables.add({",
									"        key: 'taskId',",
									"        value: 'no-task-id'",
									"    })",
									"})"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"",
									"pm.test(\"Should return error 'No task(s) found by provided id(s)'\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.errors).to.eql([\"No task(s) found by provided id(s)\"]);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/{{apiPrefix}}/evidence/case/report/:endpointId/:taskId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"{{apiPrefix}}",
								"evidence",
								"case",
								"report",
								":endpointId",
								":taskId"
							],
							"variable": [
								{
									"key": "endpointId",
									"value": "",
									"description": "Endpoint ID"
								},
								{
									"key": "taskId",
									"value": "",
									"description": "Task ID"
								}
							]
						}
					},
					"response": [
						{
							"name": "Download Endpoint Task Report - 404 Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/{{apiPrefix}}/evidence/case/report/:endpointId/:taskId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"{{apiPrefix}}",
										"evidence",
										"case",
										"report",
										":endpointId",
										":taskId"
									],
									"variable": [
										{
											"key": "endpointId",
											"value": "1"
										},
										{
											"key": "taskId",
											"value": "1"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "96"
								},
								{
									"key": "ETag",
									"value": "W/\"60-aMfnZiKpibsEnjtgrBqXNzqZzmE\""
								},
								{
									"key": "Date",
									"value": "Mon, 23 May 2022 06:06:03 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"errors\": [\n        \"No task(s) found by provided id(s)\"\n    ],\n    \"statusCode\": 404,\n    \"result\": null\n}"
						}
					]
				},
				{
					"name": "Get Endpoint PPC File Information",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.runForTest(() => {",
									"    pm.request.url.variables.add({",
									"        key: 'endpointId',",
									"        value: pm.collectionVariables.get('endpointId')",
									"    })",
									"",
									"    pm.request.url.variables.add({",
									"        key: 'taskId',",
									"        value: 'no-task-id'",
									"    })",
									"})"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"",
									"pm.test(\"Should return error 'No task(s) found by provided id(s)'\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.errors).to.eql([\"No task(s) found by provided id(s)\"]);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/{{apiPrefix}}/evidence/case/report-file-info/:endpointId/:taskId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"{{apiPrefix}}",
								"evidence",
								"case",
								"report-file-info",
								":endpointId",
								":taskId"
							],
							"variable": [
								{
									"key": "endpointId",
									"value": "",
									"description": "Endpoint ID"
								},
								{
									"key": "taskId",
									"value": "",
									"description": "Task ID"
								}
							]
						}
					},
					"response": [
						{
							"name": "Get Endpoint PPC File Information - 404 Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/{{apiPrefix}}/evidence/case/report-file-info/:endpointId/:taskId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"{{apiPrefix}}",
										"evidence",
										"case",
										"report-file-info",
										":endpointId",
										":taskId"
									],
									"variable": [
										{
											"key": "endpointId",
											"value": "1"
										},
										{
											"key": "taskId",
											"value": "1"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "96"
								},
								{
									"key": "ETag",
									"value": "W/\"60-aMfnZiKpibsEnjtgrBqXNzqZzmE\""
								},
								{
									"key": "Date",
									"value": "Mon, 23 May 2022 05:56:57 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"errors\": [\n        \"No task(s) found by provided id(s)\"\n    ],\n    \"statusCode\": 404,\n    \"result\": null\n}"
						}
					]
				}
			]
		},
		{
			"name": "Organizations",
			"item": [
				{
					"name": "Users",
					"item": [
						{
							"name": "Get Organization Users by ID",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.runForTest(() => {",
											"    pm.request.url.variables.add({",
											"        key: 'id',",
											"        value: '0'",
											"    })",
											"})"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/{{apiPrefix}}/organizations/:id/users",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"{{apiPrefix}}",
										"organizations",
										":id",
										"users"
									],
									"variable": [
										{
											"key": "id",
											"value": "",
											"description": "Organization ID"
										}
									]
								}
							},
							"response": [
								{
									"name": "Get Organization Users by ID - 200 OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/{{apiPrefix}}/organizations/:id/users",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"{{apiPrefix}}",
												"organizations",
												":id",
												"users"
											],
											"variable": [
												{
													"key": "id",
													"value": "2",
													"description": "Organization ID"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "746"
										},
										{
											"key": "ETag",
											"value": "W/\"2ea-rGf44YFknFfsBCboPBSVRxR7ph0\""
										},
										{
											"key": "Date",
											"value": "Sun, 19 Jun 2022 11:59:55 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"result\": {\n        \"entities\": [\n            {\n                \"_id\": \"82fIjSm4wm1GGypxQ45229cA\",\n                \"email\": \"demo@binalyze.com\",\n                \"username\": \"demo@binalyze.com\",\n                \"organizationIds\": \"ALL\",\n                \"strategy\": \"local\",\n                \"profile\": {\n                    \"name\": \"\",\n                    \"surname\": \"\",\n                    \"department\": \"\"\n                },\n                \"tfaEnabled\": false,\n                \"createdAt\": \"2022-06-18T19:44:51.500Z\",\n                \"updatedAt\": \"2022-06-18T19:44:51.500Z\",\n                \"roles\": [\n                    {\n                        \"_id\": \"puR8YPhXCOo9akamzBFzh8oL\",\n                        \"createdAt\": \"2022-06-18T14:07:26.566Z\",\n                        \"updatedAt\": \"2022-06-18T14:07:26.712Z\",\n                        \"name\": \"Global Admin\",\n                        \"createdBy\": \"System\",\n                        \"tag\": \"global_admin\",\n                        \"privilegeTypes\": [\n                            \"global-admin-only\",\n                            \"system\",\n                            \"user\"\n                        ]\n                    }\n                ]\n            }\n        ],\n        \"filters\": [],\n        \"sortables\": [\n            \"username\",\n            \"createdAt\"\n        ],\n        \"totalEntityCount\": 1,\n        \"currentPage\": 1,\n        \"pageSize\": 10,\n        \"previousPage\": 0,\n        \"totalPageCount\": 1,\n        \"nextPage\": 2\n    },\n    \"statusCode\": 200,\n    \"errors\": []\n}"
								},
								{
									"name": "Get Organization Users by ID - 403 Forbidden",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/{{apiPrefix}}/organizations/:id/users",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"{{apiPrefix}}",
												"organizations",
												":id",
												"users"
											],
											"variable": [
												{
													"key": "id",
													"value": "4",
													"description": "Organization ID"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "111"
										},
										{
											"key": "ETag",
											"value": "W/\"6f-eTe46OYVVc3Ki0MtZERbQIABulI\""
										},
										{
											"key": "Date",
											"value": "Sun, 19 Jun 2022 12:00:34 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": false,\n    \"errors\": [\n        \"You are not authorized to access the resource(s).\"\n    ],\n    \"statusCode\": 403,\n    \"result\": null\n}"
								}
							]
						},
						{
							"name": "Assign User to Organization by ID",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.runForTest(() => {",
											"    pm.request.url.variables.add({",
											"        key: 'id',",
											"        value: '0'",
											"    })",
											"})"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"",
											"pm.test(\"Should return error 'userIds should not be empty'\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.errors).to.eql([\"userIds should not be empty\"]);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"userIds\": []\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/{{apiPrefix}}/organizations/:id/assign-users",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"{{apiPrefix}}",
										"organizations",
										":id",
										"assign-users"
									],
									"variable": [
										{
											"key": "id",
											"value": "",
											"description": "Organization ID"
										}
									]
								},
								"description": "### Parameters\n\n| **Name**                                        | **Constraints** |\n| ----------------------------------------------- | --------------- |\n| **userIds** <br>string array / required | |"
							},
							"response": [
								{
									"name": "Assign User to Organization by ID - 200 OK",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"userIds\": [\"RGRyrQfrbq97ywgkpXSn2UYH\"]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/{{apiPrefix}}/organizations/:id/assign-users",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"{{apiPrefix}}",
												"organizations",
												":id",
												"assign-users"
											],
											"variable": [
												{
													"key": "id",
													"value": "1",
													"description": "Organization ID"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "59"
										},
										{
											"key": "ETag",
											"value": "W/\"3b-MHtur75ftUyQ2IfDqFjH6SAxAM4\""
										},
										{
											"key": "Date",
											"value": "Sun, 19 Jun 2022 12:01:43 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"result\": null,\n    \"statusCode\": 200,\n    \"errors\": []\n}"
								},
								{
									"name": "Assign User to Organization by ID - 400 Bad Request",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"userIds\": [\"RGRyrQfrbq97ywgkpXSn2UYH2\"]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/{{apiPrefix}}/organizations/:id/assign-users",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"{{apiPrefix}}",
												"organizations",
												":id",
												"assign-users"
											],
											"variable": [
												{
													"key": "id",
													"value": "2",
													"description": "Organization ID"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "133"
										},
										{
											"key": "ETag",
											"value": "W/\"85-4Tajp/aYNM5O1Fv6ihILc4LrXHI\""
										},
										{
											"key": "Date",
											"value": "Sun, 19 Jun 2022 12:01:57 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": false,\n    \"errors\": [\n        \"Provided user ids 'RGRyrQfrbq97ywgkpXSn2UYH2' could not be found in db!\"\n    ],\n    \"statusCode\": 400,\n    \"result\": null\n}"
								},
								{
									"name": "Assign User to Organization by ID - 400 Bad Request",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"userIds\": []\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/{{apiPrefix}}/organizations/:id/assign-users",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"{{apiPrefix}}",
												"organizations",
												":id",
												"assign-users"
											],
											"variable": [
												{
													"key": "id",
													"value": "2",
													"description": "Organization ID"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "91"
										},
										{
											"key": "ETag",
											"value": "W/\"5b-b+2OPz9sXEtyj0CeKoFE/yf3rac\""
										},
										{
											"key": "Date",
											"value": "Sun, 19 Jun 2022 12:02:21 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": false,\n    \"errors\": [\n        \"userIds should not be empty\"\n    ],\n    \"statusCode\": 400,\n    \"result\": null\n}"
								}
							]
						},
						{
							"name": "Remove User from Organization by ID",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.runForTest(() => {",
											"    pm.request.url.variables.add({",
											"        key: 'organizationId',",
											"        value: '0'",
											"    })",
											"})"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () {",
											"    pm.response.to.have.status(404);",
											"});",
											"",
											"pm.test(\"Should return error 'User not found by provided id :userId!'\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.errors).to.eql([\"User not found by provided id :userId!\"]);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/{{apiPrefix}}/organizations/:organizationId/remove-user/:userId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"{{apiPrefix}}",
										"organizations",
										":organizationId",
										"remove-user",
										":userId"
									],
									"variable": [
										{
											"key": "organizationId",
											"value": "",
											"description": "Organization ID"
										},
										{
											"key": "userId",
											"value": "",
											"description": "User ID"
										}
									]
								}
							},
							"response": [
								{
									"name": "Remove User from Organization by ID - 200 OK",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/{{apiPrefix}}/organizations/:organizationId/remove-user/:userId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"{{apiPrefix}}",
												"organizations",
												":organizationId",
												"remove-user",
												":userId"
											],
											"variable": [
												{
													"key": "organizationId",
													"value": "1",
													"description": "Organization ID"
												},
												{
													"key": "userId",
													"value": "RGRyrQfrbq97ywgkpXSn2UYH",
													"description": "User ID"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "59"
										},
										{
											"key": "ETag",
											"value": "W/\"3b-MHtur75ftUyQ2IfDqFjH6SAxAM4\""
										},
										{
											"key": "Date",
											"value": "Sun, 19 Jun 2022 12:03:35 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"result\": null,\n    \"statusCode\": 200,\n    \"errors\": []\n}"
								},
								{
									"name": "Remove User from Organization by ID - 400 Bad Request",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/{{apiPrefix}}/organizations/:organizationId/remove-user/:userId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"{{apiPrefix}}",
												"organizations",
												":organizationId",
												"remove-user",
												":userId"
											],
											"variable": [
												{
													"key": "organizationId",
													"value": "3",
													"description": "Organization ID"
												},
												{
													"key": "userId",
													"value": "RGRyrQfrbq97ywgkpXSn2UYH",
													"description": "User ID"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "114"
										},
										{
											"key": "ETag",
											"value": "W/\"72-H6nYjQVso5/2RHx+zuFcm6tRlNQ\""
										},
										{
											"key": "Date",
											"value": "Sun, 19 Jun 2022 12:03:13 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": false,\n    \"errors\": [\n        \"The provided user is not authorized to organization!\"\n    ],\n    \"statusCode\": 400,\n    \"result\": null\n}"
								}
							]
						}
					]
				},
				{
					"name": "Get Organizations",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/{{apiPrefix}}/organizations",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"{{apiPrefix}}",
								"organizations"
							],
							"query": [
								{
									"key": "pageNumber",
									"value": "1",
									"description": "Which page of results to return",
									"disabled": true
								},
								{
									"key": "pageSize",
									"value": "10",
									"description": "How many results to return per page",
									"disabled": true
								},
								{
									"key": "sortBy",
									"value": "createdAt",
									"description": "Attribute name to order the responses by",
									"disabled": true
								},
								{
									"key": "sortType",
									"value": "DESC",
									"description": "Either ASC or DESC",
									"disabled": true
								},
								{
									"key": "filter[name]",
									"value": "",
									"disabled": true
								},
								{
									"key": "filter[searchTerm]",
									"value": "",
									"disabled": true
								}
							]
						},
						"description": "### Parameters\n\n| **Name**                                              | **Constraints**                                |\n| ----------------------------------------------------- | ---------------------------------------------- |\n| **pageNumber** <br>number / optional                  | default value: 1 <br>min value:1               |\n| **pageSize** <br>number / optional                    | default value: 10 <br>min value:1              |\n| **sortBy** <br>string / optional                      | default value: createdAt                       |\n| **sortType** <br>string / optional                    | default value: ASC <br>valid values: ASC, DESC |\n| **filter\\[searchTerm\\]** <br>string / optional        |                                                |\n| **filter\\[name\\]** <br>string / optional        |                                                |"
					},
					"response": [
						{
							"name": "Get Organizations",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/{{apiPrefix}}/organizations",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"{{apiPrefix}}",
										"organizations"
									],
									"query": [
										{
											"key": "pageNumber",
											"value": "1",
											"description": "Which page of results to return",
											"disabled": true
										},
										{
											"key": "pageSize",
											"value": "10",
											"description": "How many results to return per page",
											"disabled": true
										},
										{
											"key": "sortBy",
											"value": "createdAt",
											"description": "Attribute name to order the responses by",
											"disabled": true
										},
										{
											"key": "sortType",
											"value": "DESC",
											"description": "Either ASC or DESC",
											"disabled": true
										},
										{
											"key": "filter[name]",
											"value": "",
											"disabled": true
										},
										{
											"key": "filter[searchTerm]",
											"value": "",
											"disabled": true
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "722"
								},
								{
									"key": "ETag",
									"value": "W/\"2d2-C9N5FzvJfifujl9CUYIHIqqO+ww\""
								},
								{
									"key": "Date",
									"value": "Sun, 19 Jun 2022 11:47:55 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"result\": {\n        \"entities\": [\n            {\n                \"_id\": 1,\n                \"name\": \"Binalyze UK\",\n                \"totalEndpoints\": 0,\n                \"owner\": \"demo@binalyze.com\",\n                \"shareableDeploymentEnabled\": false,\n                \"deploymentToken\": \"632c7c0158ae4e15\",\n                \"isDefault\": false,\n                \"updatedAt\": \"2022-06-19T11:47:21.680Z\",\n                \"createdAt\": \"2022-06-18T20:10:01.872Z\"\n            },\n            {\n                \"_id\": 0,\n                \"name\": \"Binalyze\",\n                \"totalEndpoints\": 19,\n                \"shareableDeploymentEnabled\": true,\n                \"deploymentToken\": \"700357eaf8514721\",\n                \"isDefault\": true,\n                \"updatedAt\": \"2022-06-19T11:47:46.235Z\",\n                \"createdAt\": \"2022-06-18T14:07:26.532Z\"\n            }\n        ],\n        \"filters\": [\n            {\n                \"name\": \"name\",\n                \"type\": \"text\",\n                \"options\": [],\n                \"filterUrl\": null\n            }\n        ],\n        \"sortables\": [\n            \"name\"\n        ],\n        \"totalEntityCount\": 2,\n        \"currentPage\": 1,\n        \"pageSize\": 10,\n        \"previousPage\": 0,\n        \"totalPageCount\": 1,\n        \"nextPage\": 2\n    },\n    \"statusCode\": 200,\n    \"errors\": []\n}"
						}
					]
				},
				{
					"name": "Create Organization",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const uuid = require('uuid')",
									"",
									"pm.runForTest(() => {",
									"    const payload = JSON.parse(pm.request.body.raw)",
									"    payload.name = `Org ${uuid.v4().substr(0, 8)}`",
									"    pm.request.body.raw = JSON.stringify(payload)",
									"})"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.collectionVariables.set('organizationId', JSON.parse(responseBody).result._id.toString())",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Binalyze EU\",\n    \"shareableDeploymentEnabled\": true,\n    \"contact\": {\n        \"name\": \"Binalyze\",\n        \"title\": \"\",\n        \"phone\": \"040404044\",\n        \"mobile\": \"040404004\",\n        \"email\": \"info@binalyze.com\"\n    },\n    \"note\": \"Example Note\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/{{apiPrefix}}/organizations",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"{{apiPrefix}}",
								"organizations"
							]
						},
						"description": "### Parameters\n\n| **Name**                                              | **Constraints**     |\n| ----------------------------------------------------- | ------------------- |\n| **name** <br>string / required                        | min: 1 <br> max: 50 |\n| **note** <br>string / optional                        |                     |\n| **shareableDeploymentEnabled** <br>boolean / required |                     |\n| **contact** <br>object / optional                     |                     |\n| **contact.name** <br>string / optional                |                     |\n| **contact.title** <br>string / optional               |                     |\n| **contact.phone** <br>string / optional               |                     |\n| **contact.mobile** <br>string / optional              |                     |\n| **contact.email** <br>string / optional               |                     |"
					},
					"response": [
						{
							"name": "Create Organization - 200 OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Binalyze EU\",\n    \"shareableDeploymentEnabled\": true,\n    \"contact\": {\n        \"name\": \"Binalyze\",\n        \"title\": \"\",\n        \"phone\": \"040404044\",\n        \"mobile\": \"040404004\",\n        \"email\": \"info@binalyze.com\"\n    },\n    \"note\": \"Example Note\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/{{apiPrefix}}/organizations",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"{{apiPrefix}}",
										"organizations"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "412"
								},
								{
									"key": "ETag",
									"value": "W/\"19c-2fJRoHO+zFkx3Cnm+7PBXC8qGUA\""
								},
								{
									"key": "Date",
									"value": "Sun, 19 Jun 2022 11:50:38 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"result\": {\n        \"_id\": 2,\n        \"name\": \"Binalyze EU\",\n        \"isDefault\": false,\n        \"note\": \"Example Note\",\n        \"owner\": \"demo@binalyze.com\",\n        \"contact\": {\n            \"name\": \"Binalyze\",\n            \"title\": \"\",\n            \"phone\": \"040404044\",\n            \"mobile\": \"040404004\",\n            \"email\": \"info@binalyze.com\"\n        },\n        \"shareableDeploymentEnabled\": true,\n        \"deploymentToken\": \"081650dc91bd42e1\",\n        \"createdAt\": \"2022-06-19T11:50:38.274Z\",\n        \"updatedAt\": \"2022-06-19T11:50:38.274Z\"\n    },\n    \"statusCode\": 200,\n    \"errors\": []\n}"
						},
						{
							"name": "Create Organization - 400 Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"shareableDeploymentEnabled\": true,\n    \"contact\": {\n        \"name\": \"Binalyze\",\n        \"title\": \"\",\n        \"phone\": \"040404044\",\n        \"mobile\": \"040404004\",\n        \"email\": \"info@binalyze.com\"\n    },\n    \"note\": \"Example Note\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/{{apiPrefix}}/organizations",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"{{apiPrefix}}",
										"organizations"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "126"
								},
								{
									"key": "ETag",
									"value": "W/\"7e-eRcEToq2IOtltLYU2zY16Y8dcSI\""
								},
								{
									"key": "Date",
									"value": "Sun, 19 Jun 2022 11:51:13 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"errors\": [\n        \"Name should not be empty or whitespace\",\n        \"name must be a string\"\n    ],\n    \"statusCode\": 400,\n    \"result\": null\n}"
						},
						{
							"name": "Create Organization - 409 Conflict",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Binalyze EU\",\n    \"shareableDeploymentEnabled\": true,\n    \"contact\": {\n        \"name\": \"Binalyze\",\n        \"title\": \"\",\n        \"phone\": \"040404044\",\n        \"mobile\": \"040404004\",\n        \"email\": \"info@binalyze.com\"\n    },\n    \"note\": \"Example Note\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/{{apiPrefix}}/organizations",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"{{apiPrefix}}",
										"organizations"
									]
								}
							},
							"status": "Conflict",
							"code": 409,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "98"
								},
								{
									"key": "ETag",
									"value": "W/\"62-xQzrFLoWDcZ2LBd/8pij0U5DxmY\""
								},
								{
									"key": "Date",
									"value": "Sun, 19 Jun 2022 11:52:01 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"errors\": [\n        \"Provided organization already exists\"\n    ],\n    \"statusCode\": 409,\n    \"result\": null\n}"
						}
					]
				},
				{
					"name": "Update Organization by ID",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const uuid = require('uuid')",
									"",
									"pm.runForTest(() => {",
									"    pm.request.url.variables.add({",
									"        key: 'id', ",
									"        value: pm.collectionVariables.get('organizationId')",
									"    })",
									"",
									"    const payload = JSON.parse(pm.request.body.raw)",
									"    payload.note = `Note - ${uuid.v4().substr(0, 8)}`",
									"    pm.request.body.raw = JSON.stringify(payload)",
									"})"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"note\": \"New Note\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/{{apiPrefix}}/organizations/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"{{apiPrefix}}",
								"organizations",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "",
									"description": "Organization ID"
								}
							]
						},
						"description": "### Parameters\n\n| **Name**                                              | **Constraints**     |\n| ----------------------------------------------------- | ------------------- |\n| **name** <br>string / optional                        | min: 1 <br> max: 50 |\n| **note** <br>string / optional                        |                     |\n| **owner** <br>string / optional |                     |\n| **contact** <br>object / optional                     |                     |\n| **contact.name** <br>string / optional                |                     |\n| **contact.title** <br>string / optional               |                     |\n| **contact.phone** <br>string / optional               |                     |\n| **contact.mobile** <br>string / optional              |                     |\n| **contact.email** <br>string / optional               |                     |"
					},
					"response": [
						{
							"name": "Update Organization by ID - 200 OK",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"note\": \"New Note\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/{{apiPrefix}}/organizations/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"{{apiPrefix}}",
										"organizations",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "2",
											"description": "Organization ID"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "408"
								},
								{
									"key": "ETag",
									"value": "W/\"198-pF5vlQywkeXRxKmOqLa0zQWfBBI\""
								},
								{
									"key": "Date",
									"value": "Sun, 19 Jun 2022 11:52:37 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"result\": {\n        \"_id\": 2,\n        \"createdAt\": \"2022-06-19T11:50:38.274Z\",\n        \"updatedAt\": \"2022-06-19T11:52:37.609Z\",\n        \"name\": \"Binalyze EU\",\n        \"isDefault\": false,\n        \"owner\": \"demo@binalyze.com\",\n        \"shareableDeploymentEnabled\": true,\n        \"deploymentToken\": \"081650dc91bd42e1\",\n        \"note\": \"New Note\",\n        \"contact\": {\n            \"name\": \"Binalyze\",\n            \"title\": \"\",\n            \"phone\": \"040404044\",\n            \"mobile\": \"040404004\",\n            \"email\": \"info@binalyze.com\"\n        }\n    },\n    \"statusCode\": 200,\n    \"errors\": []\n}"
						},
						{
							"name": "Update Organization by ID - 400 Bad Request",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/{{apiPrefix}}/organizations/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"{{apiPrefix}}",
										"organizations",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "2",
											"description": "Organization ID"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "90"
								},
								{
									"key": "ETag",
									"value": "W/\"5a-HBwersvxk+ZafHLr0b+wwkeMuQA\""
								},
								{
									"key": "Date",
									"value": "Sun, 19 Jun 2022 11:52:53 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"errors\": [\n        \"No field provided to update!\"\n    ],\n    \"statusCode\": 400,\n    \"result\": null\n}"
						}
					]
				},
				{
					"name": "Get Organization by ID",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.runForTest(() => {",
									"    pm.request.url.variables.add({",
									"        key: 'id',",
									"        value: pm.collectionVariables.get('organizationId')",
									"    })",
									"})"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/{{apiPrefix}}/organizations/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"{{apiPrefix}}",
								"organizations",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "",
									"description": "Organization ID"
								}
							]
						}
					},
					"response": [
						{
							"name": "Get Organization by ID - 200 OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/{{apiPrefix}}/organizations/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"{{apiPrefix}}",
										"organizations",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "2",
											"description": "Organization ID"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "510"
								},
								{
									"key": "ETag",
									"value": "W/\"1fe-zy1VKNaFWeBoH4IPostVmsEwq4A\""
								},
								{
									"key": "Date",
									"value": "Sun, 19 Jun 2022 11:54:15 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"result\": {\n        \"_id\": 2,\n        \"createdAt\": \"2022-06-19T11:50:38.274Z\",\n        \"updatedAt\": \"2022-06-19T11:52:37.609Z\",\n        \"name\": \"Binalyze EU\",\n        \"isDefault\": false,\n        \"owner\": \"demo@binalyze.com\",\n        \"shareableDeploymentEnabled\": true,\n        \"deploymentToken\": \"081650dc91bd42e1\",\n        \"note\": \"New Note\",\n        \"contact\": {\n            \"name\": \"Binalyze\",\n            \"title\": \"\",\n            \"phone\": \"040404044\",\n            \"mobile\": \"040404004\",\n            \"email\": \"info@binalyze.com\"\n        },\n        \"statistics\": {\n            \"endpoint\": {\n                \"total\": 0,\n                \"managed\": 0\n            },\n            \"case\": {\n                \"total\": 0,\n                \"open\": 0,\n                \"closed\": 0,\n                \"archived\": 0\n            }\n        }\n    },\n    \"statusCode\": 200,\n    \"errors\": []\n}"
						},
						{
							"name": "Get Organization by ID - 403 Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/{{apiPrefix}}/organizations/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"{{apiPrefix}}",
										"organizations",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "23",
											"description": "Organization ID"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "111"
								},
								{
									"key": "ETag",
									"value": "W/\"6f-eTe46OYVVc3Ki0MtZERbQIABulI\""
								},
								{
									"key": "Date",
									"value": "Sun, 19 Jun 2022 11:54:29 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"errors\": [\n        \"You are not authorized to access the resource(s).\"\n    ],\n    \"statusCode\": 403,\n    \"result\": null\n}"
						}
					]
				},
				{
					"name": "Check Organization Name Exists",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const uuid = require('uuid')",
									"",
									"pm.runForTest(() => {",
									"    pm.request.url.addQueryParams([`name=${uuid.v4()}`])",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/{{apiPrefix}}/organizations/check",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"{{apiPrefix}}",
								"organizations",
								"check"
							],
							"query": [
								{
									"key": "name",
									"value": "Binalyze",
									"description": "Organization Name",
									"disabled": true
								}
							]
						}
					},
					"response": [
						{
							"name": "Check Organization Name Exists - 200 OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/{{apiPrefix}}/organizations/check?name=Binalyze",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"{{apiPrefix}}",
										"organizations",
										"check"
									],
									"query": [
										{
											"key": "name",
											"value": "Binalyze",
											"description": "Organization Name"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "59"
								},
								{
									"key": "ETag",
									"value": "W/\"3b-FeU7lcDMrpQrHrjoJjY5YuYw0gw\""
								},
								{
									"key": "Date",
									"value": "Sun, 19 Jun 2022 11:55:26 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"result\": true,\n    \"statusCode\": 200,\n    \"errors\": []\n}"
						},
						{
							"name": "Check Organization Name Exists - 400 Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/{{apiPrefix}}/organizations/check",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"{{apiPrefix}}",
										"organizations",
										"check"
									],
									"query": [
										{
											"key": "name",
											"value": "Binalyze",
											"description": "Organization Name",
											"disabled": true
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "83"
								},
								{
									"key": "ETag",
									"value": "W/\"53-y13K/9AIqnNeo7SMEI1OnYmGCuM\""
								},
								{
									"key": "Date",
									"value": "Sun, 19 Jun 2022 11:55:52 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"errors\": [\n        \"Name cannot be empty!\"\n    ],\n    \"statusCode\": 400,\n    \"result\": null\n}"
						}
					]
				},
				{
					"name": "Get Shareable Deployment Information by Token",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.runForTest(() => {",
									"    pm.request.url.variables.add({",
									"        key: 'deploymentToken',",
									"        value: pm.collectionVariables.get('deploymentToken')",
									"    })",
									"})"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/{{apiPrefix}}/organizations/shareable-deployment-info/:deploymentToken",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"{{apiPrefix}}",
								"organizations",
								"shareable-deployment-info",
								":deploymentToken"
							],
							"variable": [
								{
									"key": "deploymentToken",
									"value": "",
									"description": "Deployment Token"
								}
							]
						}
					},
					"response": [
						{
							"name": "Get Shareable Deployment Information by Token - 200 OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/{{apiPrefix}}/organizations/shareable-deployment-info/:deploymentToken",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"{{apiPrefix}}",
										"organizations",
										"shareable-deployment-info",
										":deploymentToken"
									],
									"variable": [
										{
											"key": "deploymentToken",
											"value": "081650dc91bd42e1",
											"description": "Deployment Token"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "132"
								},
								{
									"key": "ETag",
									"value": "W/\"84-iDvsb71e/COpx2OxwKSk/cIFu3E\""
								},
								{
									"key": "Date",
									"value": "Sun, 19 Jun 2022 11:56:25 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"result\": {\n        \"organizationId\": 2,\n        \"consoleAddress\": \"1.2.3.4\",\n        \"agentVersion\": \"2.10.0\"\n    },\n    \"statusCode\": 200,\n    \"errors\": []\n}"
						},
						{
							"name": "Get Shareable Deployment Information by Token - 403 Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/{{apiPrefix}}/organizations/shareable-deployment-info/:deploymentToken",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"{{apiPrefix}}",
										"organizations",
										"shareable-deployment-info",
										":deploymentToken"
									],
									"variable": [
										{
											"key": "deploymentToken",
											"value": "x",
											"description": "Deployment Token"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "98"
								},
								{
									"key": "ETag",
									"value": "W/\"62-kT9Ci2vWH9Nc+AYe1u3i5LYZ2kU\""
								},
								{
									"key": "Date",
									"value": "Sun, 19 Jun 2022 11:56:48 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"errors\": [\n        \"Invalid deployment token provided: x\"\n    ],\n    \"statusCode\": 403,\n    \"result\": null\n}"
						}
					]
				},
				{
					"name": "Update Organization Shareable Deployment Settings by ID",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.runForTest(() => {",
									"    pm.request.url.variables.add({",
									"        key: 'id',",
									"        value: pm.collectionVariables.get('organizationId')",
									"    })",
									"})"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"status\": false\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/{{apiPrefix}}/organizations/:id/shareable-deployment",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"{{apiPrefix}}",
								"organizations",
								":id",
								"shareable-deployment"
							],
							"variable": [
								{
									"key": "id",
									"value": "",
									"description": "Organization ID"
								}
							]
						},
						"description": "### Parameters\n\n| **Name**                                              | **Constraints**     |\n| ----------------------------------------------------- | ------------------- |\n| **status** <br>boolean / required                        | |"
					},
					"response": [
						{
							"name": "Update Organization Shareable Deployment Settings by ID - 200 OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"status\": false\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/{{apiPrefix}}/organizations/:id/shareable-deployment",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"{{apiPrefix}}",
										"organizations",
										":id",
										"shareable-deployment"
									],
									"variable": [
										{
											"key": "id",
											"value": "2",
											"description": "Organization ID"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "59"
								},
								{
									"key": "ETag",
									"value": "W/\"3b-MHtur75ftUyQ2IfDqFjH6SAxAM4\""
								},
								{
									"key": "Date",
									"value": "Sun, 19 Jun 2022 11:57:37 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"result\": null,\n    \"statusCode\": 200,\n    \"errors\": []\n}"
						},
						{
							"name": "Update Organization Shareable Deployment Settings by ID - 409 Conflict",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"status\": true\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/{{apiPrefix}}/organizations/:id/shareable-deployment",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"{{apiPrefix}}",
										"organizations",
										":id",
										"shareable-deployment"
									],
									"variable": [
										{
											"key": "id",
											"value": "2",
											"description": "Organization ID"
										}
									]
								}
							},
							"status": "Conflict",
							"code": 409,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "102"
								},
								{
									"key": "ETag",
									"value": "W/\"66-Buiwd6y40ECOACmH+qYdu68uu7M\""
								},
								{
									"key": "Date",
									"value": "Sun, 19 Jun 2022 11:57:21 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"errors\": [\n        \"Shareable deployment is already enabled!\"\n    ],\n    \"statusCode\": 409,\n    \"result\": null\n}"
						},
						{
							"name": "Update Organization Shareable Deployment Settings by ID - 400 Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/{{apiPrefix}}/organizations/:id/shareable-deployment",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"{{apiPrefix}}",
										"organizations",
										":id",
										"shareable-deployment"
									],
									"variable": [
										{
											"key": "id",
											"value": "2",
											"description": "Organization ID"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "123"
								},
								{
									"key": "ETag",
									"value": "W/\"7b-3m+HYbFBNoTxqe4rOiFvEU1DcJU\""
								},
								{
									"key": "Date",
									"value": "Sun, 19 Jun 2022 11:57:49 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"errors\": [\n        \"status should not be empty\",\n        \"status must be a boolean value\"\n    ],\n    \"statusCode\": 400,\n    \"result\": null\n}"
						}
					]
				},
				{
					"name": "Update  Organization Deployment Token by ID",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const uuid = require('uuid')",
									"",
									"pm.runForTest(() => {",
									"    pm.request.url.variables.add({",
									"        key: 'id',",
									"        value: pm.collectionVariables.get('organizationId')",
									"    })",
									"",
									"    const payload = JSON.parse(pm.request.body.raw)",
									"    payload.deploymentToken = uuid.v4().substr(0, 16).replace(/-/ig, '1')",
									"    pm.request.body.raw = JSON.stringify(payload)",
									"})"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"deploymentToken\": \"081650dc91bd42e2\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/{{apiPrefix}}/organizations/:id/deployment-token",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"{{apiPrefix}}",
								"organizations",
								":id",
								"deployment-token"
							],
							"variable": [
								{
									"key": "id",
									"value": "",
									"description": "Organization ID"
								}
							]
						},
						"description": "### Parameters\n\n| **Name** | **Constraints** |\n| --- | --- |\n| **deploymentToken**  <br>string / required | RegEx: /^(\\[0-9a-f\\]){16}$/ |"
					},
					"response": [
						{
							"name": "Update  Organization Deployment Token by ID - 200 OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"deploymentToken\": \"081650dc91bd42e2\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/{{apiPrefix}}/organizations/:id/deployment-token",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"{{apiPrefix}}",
										"organizations",
										":id",
										"deployment-token"
									],
									"variable": [
										{
											"key": "id",
											"value": "2",
											"description": "Organization ID"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "59"
								},
								{
									"key": "ETag",
									"value": "W/\"3b-MHtur75ftUyQ2IfDqFjH6SAxAM4\""
								},
								{
									"key": "Date",
									"value": "Sun, 19 Jun 2022 11:58:49 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"result\": null,\n    \"statusCode\": 200,\n    \"errors\": []\n}"
						},
						{
							"name": "Update  Organization Deployment Token by ID - 403 Forbidden",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"deploymentToken\": \"081650dc91bd42e2\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/{{apiPrefix}}/organizations/:id/deployment-token",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"{{apiPrefix}}",
										"organizations",
										":id",
										"deployment-token"
									],
									"variable": [
										{
											"key": "id",
											"value": "24",
											"description": "Organization ID"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "111"
								},
								{
									"key": "ETag",
									"value": "W/\"6f-eTe46OYVVc3Ki0MtZERbQIABulI\""
								},
								{
									"key": "Date",
									"value": "Sun, 19 Jun 2022 11:59:01 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"errors\": [\n        \"You are not authorized to access the resource(s).\"\n    ],\n    \"statusCode\": 403,\n    \"result\": null\n}"
						},
						{
							"name": "Update  Organization Deployment Token by ID - 400 Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/{{apiPrefix}}/organizations/:id/deployment-token",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"{{apiPrefix}}",
										"organizations",
										":id",
										"deployment-token"
									],
									"variable": [
										{
											"key": "id",
											"value": "2",
											"description": "Organization ID"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "169"
								},
								{
									"key": "ETag",
									"value": "W/\"a9-l9XPWlId8yI2xmRcAnDNJHyHs1A\""
								},
								{
									"key": "Date",
									"value": "Sun, 19 Jun 2022 11:59:18 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"errors\": [\n        \"Invalid deployment token format.\",\n        \"deploymentToken should not be empty\",\n        \"deploymentToken must be a string\"\n    ],\n    \"statusCode\": 400,\n    \"result\": null\n}"
						}
					]
				},
				{
					"name": "Delete Organization by ID",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.runForTest(() => {",
									"    pm.request.url.variables.add({",
									"        key: 'id',",
									"        value: pm.collectionVariables.get('organizationId')",
									"    })",
									"})"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/{{apiPrefix}}/organizations/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"{{apiPrefix}}",
								"organizations",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "",
									"description": "Organization ID"
								}
							]
						}
					},
					"response": [
						{
							"name": "Delete Organization by ID - 200 OK",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/{{apiPrefix}}/organizations/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"{{apiPrefix}}",
										"organizations",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "3",
											"description": "Organization ID"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "59"
								},
								{
									"key": "ETag",
									"value": "W/\"3b-MHtur75ftUyQ2IfDqFjH6SAxAM4\""
								},
								{
									"key": "Date",
									"value": "Sun, 19 Jun 2022 11:53:33 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"result\": null,\n    \"statusCode\": 200,\n    \"errors\": []\n}"
						},
						{
							"name": "Delete Organization by ID -  403 Forbidden",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/{{apiPrefix}}/organizations/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"{{apiPrefix}}",
										"organizations",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "3",
											"description": "Organization ID"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "111"
								},
								{
									"key": "ETag",
									"value": "W/\"6f-eTe46OYVVc3Ki0MtZERbQIABulI\""
								},
								{
									"key": "Date",
									"value": "Sun, 19 Jun 2022 11:53:42 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"errors\": [\n        \"You are not authorized to access the resource(s).\"\n    ],\n    \"statusCode\": 403,\n    \"result\": null\n}"
						}
					]
				},
				{
					"name": "Add Tags to Organization",
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"tags\": [\"tag1\", \"tag2\"]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/{{apiPrefix}}/organizations/:id/tags",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"{{apiPrefix}}",
								"organizations",
								":id",
								"tags"
							],
							"variable": [
								{
									"key": "id",
									"value": "",
									"description": "Organization ID"
								}
							]
						},
						"description": "Adds tags to an organization. If given tag exists, it is ignored."
					},
					"response": [
						{
							"name": "Add Tags to Organization - 200 OK",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"tags\": [\"tag1\", \"tag2\"]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/{{apiPrefix}}/organizations/:id/tags",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"{{apiPrefix}}",
										"organizations",
										":id",
										"tags"
									],
									"variable": [
										{
											"key": "id",
											"value": "0",
											"description": "Organization ID"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "285"
								},
								{
									"key": "ETag",
									"value": "W/\"11d-w/qQbuBnCltRdd7G49csvyvLsD4\""
								},
								{
									"key": "Date",
									"value": "Sun, 19 Mar 2023 09:09:43 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"result\": {\n        \"tags\": [\n            \"tag1\",\n            \"tag2\"\n        ],\n        \"createdAt\": \"2023-03-16T12:35:15.823Z\",\n        \"updatedAt\": \"2023-03-19T09:09:36.218Z\",\n        \"_id\": 0,\n        \"name\": \"Binalyze\",\n        \"isDefault\": true,\n        \"shareableDeploymentEnabled\": false,\n        \"deploymentToken\": \"6a3b3dc7e16f4302\",\n        \"contact\": {}\n    },\n    \"statusCode\": 200,\n    \"errors\": []\n}"
						},
						{
							"name": "Add Tags to Organization - 403 Forbidden",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"tags\": [\"tag1\", \"tag2\"]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/{{apiPrefix}}/organizations/:id/tags",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"{{apiPrefix}}",
										"organizations",
										":id",
										"tags"
									],
									"variable": [
										{
											"key": "id",
											"value": "50",
											"description": "Organization ID"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "111"
								},
								{
									"key": "ETag",
									"value": "W/\"6f-eTe46OYVVc3Ki0MtZERbQIABulI\""
								},
								{
									"key": "Date",
									"value": "Sun, 19 Mar 2023 09:10:49 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"errors\": [\n        \"You are not authorized to access the resource(s).\"\n    ],\n    \"statusCode\": 403,\n    \"result\": null\n}"
						},
						{
							"name": "Add Tags to Organization - 400 Bad Request",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"tags\": [\"tag1\", \"tag2\"]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/{{apiPrefix}}/organizations/:id/tags",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"{{apiPrefix}}",
										"organizations",
										":id",
										"tags"
									],
									"variable": [
										{
											"key": "id",
											"value": "",
											"description": "Organization ID"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "81"
								},
								{
									"key": "ETag",
									"value": "W/\"51-TfhhucZFvvBVp9L0iCwpKVxuRVw\""
								},
								{
									"key": "Date",
									"value": "Sun, 19 Mar 2023 09:10:28 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"errors\": [\n        \"id must be a number\"\n    ],\n    \"statusCode\": 400,\n    \"result\": null\n}"
						},
						{
							"name": "Add Tags to Organization - 400 Bad Request",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/{{apiPrefix}}/organizations/:id/tags",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"{{apiPrefix}}",
										"organizations",
										":id",
										"tags"
									],
									"variable": [
										{
											"key": "id",
											"value": "0",
											"description": "Organization ID"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "148"
								},
								{
									"key": "ETag",
									"value": "W/\"94-ivmb3zveogpsSv6fsJ7Q9pUEESY\""
								},
								{
									"key": "Date",
									"value": "Sun, 19 Mar 2023 09:11:46 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"errors\": [\n        \"each value in tags must be a string\",\n        \"tags should not be empty\",\n        \"tags must be an array\"\n    ],\n    \"statusCode\": 400,\n    \"result\": null\n}"
						}
					]
				},
				{
					"name": "Delete Tags from Organization",
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"tags\": [\"tag2\", \"tag3\"]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/{{apiPrefix}}/organizations/:id/tags",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"{{apiPrefix}}",
								"organizations",
								":id",
								"tags"
							],
							"variable": [
								{
									"key": "id",
									"value": "",
									"description": "Organization ID"
								}
							]
						},
						"description": "Delete tags from organization. If a given tag is not on this organization, it is ignored."
					},
					"response": [
						{
							"name": "Delete Tags from Organization - 200 OK",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"tags\": [\"tag2\", \"tag3\"]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/{{apiPrefix}}/organizations/:id/tags",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"{{apiPrefix}}",
										"organizations",
										":id",
										"tags"
									],
									"variable": [
										{
											"key": "id",
											"value": "0",
											"description": "Organization ID"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "278"
								},
								{
									"key": "ETag",
									"value": "W/\"116-u4jGbds7SdGNhDfqe9Rw/QnPPNI\""
								},
								{
									"key": "Date",
									"value": "Sun, 19 Mar 2023 09:12:00 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"result\": {\n        \"tags\": [\n            \"tag1\"\n        ],\n        \"createdAt\": \"2023-03-16T12:35:15.823Z\",\n        \"updatedAt\": \"2023-03-19T09:11:17.829Z\",\n        \"_id\": 0,\n        \"name\": \"Binalyze\",\n        \"isDefault\": true,\n        \"shareableDeploymentEnabled\": false,\n        \"deploymentToken\": \"6a3b3dc7e16f4302\",\n        \"contact\": {}\n    },\n    \"statusCode\": 200,\n    \"errors\": []\n}"
						},
						{
							"name": "Delete Tags from Organization - 403 Forbidden",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"tags\": [\"tag2\", \"tag3\"]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/{{apiPrefix}}/organizations/:id/tags",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"{{apiPrefix}}",
										"organizations",
										":id",
										"tags"
									],
									"variable": [
										{
											"key": "id",
											"value": "50",
											"description": "Organization ID"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "111"
								},
								{
									"key": "ETag",
									"value": "W/\"6f-eTe46OYVVc3Ki0MtZERbQIABulI\""
								},
								{
									"key": "Date",
									"value": "Sun, 19 Mar 2023 09:12:20 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"errors\": [\n        \"You are not authorized to access the resource(s).\"\n    ],\n    \"statusCode\": 403,\n    \"result\": null\n}"
						},
						{
							"name": "Delete Tags from Organization - 400 Bad Request",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/{{apiPrefix}}/organizations/:id/tags",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"{{apiPrefix}}",
										"organizations",
										":id",
										"tags"
									],
									"variable": [
										{
											"key": "id",
											"value": "0",
											"description": "Organization ID"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "148"
								},
								{
									"key": "ETag",
									"value": "W/\"94-ivmb3zveogpsSv6fsJ7Q9pUEESY\""
								},
								{
									"key": "Date",
									"value": "Sun, 19 Mar 2023 09:12:55 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"errors\": [\n        \"each value in tags must be a string\",\n        \"tags should not be empty\",\n        \"tags must be an array\"\n    ],\n    \"statusCode\": 400,\n    \"result\": null\n}"
						},
						{
							"name": "Delete Tags from Organization - 400 Bad Request",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"tags\": [\"tag2\", \"tag3\"]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/{{apiPrefix}}/organizations/:id/tags",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"{{apiPrefix}}",
										"organizations",
										":id",
										"tags"
									],
									"variable": [
										{
											"key": "id",
											"value": "",
											"description": "Organization ID"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "81"
								},
								{
									"key": "ETag",
									"value": "W/\"51-TfhhucZFvvBVp9L0iCwpKVxuRVw\""
								},
								{
									"key": "Date",
									"value": "Sun, 19 Mar 2023 09:12:39 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"errors\": [\n        \"id must be a number\"\n    ],\n    \"statusCode\": 400,\n    \"result\": null\n}"
						}
					]
				}
			]
		},
		{
			"name": "Params",
			"item": [
				{
					"name": "Get Drone Analyzers",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/{{apiPrefix}}/params/drone/analyzers",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"{{apiPrefix}}",
								"params",
								"drone",
								"analyzers"
							]
						}
					},
					"response": [
						{
							"name": "Get Drone Analyzers - 200 OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/{{apiPrefix}}/params/drone/analyzers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"{{apiPrefix}}",
										"params",
										"drone",
										"analyzers"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "1716"
								},
								{
									"key": "ETag",
									"value": "W/\"6b4-Xcgar+sUrg4+3JvuprDreVTXVWk\""
								},
								{
									"key": "Date",
									"value": "Sun, 22 May 2022 17:04:06 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"Id\": \"bha\",\n        \"Name\": \"Browser History Analyzer\",\n        \"DefaultEnabled\": true,\n        \"OSes\": [\n            \"windows\"\n        ]\n    },\n    {\n        \"Id\": \"wsa\",\n        \"Name\": \"Generic WebShell Analyzer\",\n        \"DefaultEnabled\": true,\n        \"OSes\": [\n            \"windows\",\n            \"linux\",\n            \"darwin\"\n        ]\n    },\n    {\n        \"Id\": \"aa\",\n        \"Name\": \"Application Analyzer\",\n        \"DefaultEnabled\": true,\n        \"OSes\": [\n            \"windows\"\n        ]\n    },\n    {\n        \"Id\": \"ara\",\n        \"Name\": \"Registry Analyzer\",\n        \"DefaultEnabled\": true,\n        \"OSes\": [\n            \"windows\"\n        ]\n    },\n    {\n        \"Id\": \"asta\",\n        \"Name\": \"Scheduled Task Analyzer\",\n        \"DefaultEnabled\": true,\n        \"OSes\": [\n            \"windows\"\n        ]\n    },\n    {\n        \"Id\": \"awsa\",\n        \"Name\": \"Windows Services Analyzer\",\n        \"DefaultEnabled\": true,\n        \"OSes\": [\n            \"windows\"\n        ]\n    },\n    {\n        \"Id\": \"dnsa\",\n        \"Name\": \"DNS Cache Analyzer\",\n        \"DefaultEnabled\": true,\n        \"OSes\": [\n            \"windows\"\n        ]\n    },\n    {\n        \"Id\": \"ela\",\n        \"Name\": \"Event Records Analyzer\",\n        \"DefaultEnabled\": true,\n        \"OSes\": [\n            \"windows\"\n        ]\n    },\n    {\n        \"Id\": \"ha\",\n        \"Name\": \"Hosts File Analyzer\",\n        \"DefaultEnabled\": true,\n        \"OSes\": [\n            \"windows\"\n        ]\n    },\n    {\n        \"Id\": \"mfta\",\n        \"Name\": \" Analyzer\",\n        \"DefaultEnabled\": true,\n        \"OSes\": [\n            \"windows\"\n        ]\n    },\n    {\n        \"Id\": \"nsa\",\n        \"Name\": \"Network Share Analyzer\",\n        \"DefaultEnabled\": true,\n        \"OSes\": [\n            \"windows\"\n        ]\n    },\n    {\n        \"Id\": \"pfa\",\n        \"Name\": \"Prefetch Analyzer\",\n        \"DefaultEnabled\": true,\n        \"OSes\": [\n            \"windows\"\n        ]\n    },\n    {\n        \"Id\": \"pa\",\n        \"Name\": \"Process Analyzer\",\n        \"DefaultEnabled\": true,\n        \"OSes\": [\n            \"windows\"\n        ]\n    },\n    {\n        \"Id\": \"sba\",\n        \"Name\": \"ShellBags Analyzer\",\n        \"DefaultEnabled\": true,\n        \"OSes\": [\n            \"windows\"\n        ]\n    },\n    {\n        \"Id\": \"ufa\",\n        \"Name\": \"User Folders Analyzer\",\n        \"DefaultEnabled\": true,\n        \"OSes\": [\n            \"windows\"\n        ]\n    },\n    {\n        \"Id\": \"wea\",\n        \"Name\": \"Events of Interest\",\n        \"DefaultEnabled\": true,\n        \"OSes\": [\n            \"windows\"\n        ]\n    },\n    {\n        \"Id\": \"vua\",\n        \"Name\": \"Vulnerability Analyzer\",\n        \"DefaultEnabled\": true,\n        \"OSes\": [\n            \"windows\",\n            \"linux\",\n            \"darwin\"\n        ]\n    },\n    {\n        \"Id\": \"gys\",\n        \"Name\": \"YARA Scanner\",\n        \"DefaultEnabled\": true,\n        \"OSes\": [\n            \"windows\",\n            \"linux\",\n            \"darwin\"\n        ]\n    },\n    {\n        \"Id\": \"rwa\",\n        \"Name\": \"Ransomware Identifier\",\n        \"DefaultEnabled\": true,\n        \"OSes\": [\n            \"windows\"\n        ]\n    },\n    {\n        \"Id\": \"lpa\",\n        \"Name\": \"Process Analyzer\",\n        \"DefaultEnabled\": true,\n        \"OSes\": [\n            \"linux\"\n        ]\n    }\n]"
						}
					]
				},
				{
					"name": "Get Acquisition Artifact List",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/{{apiPrefix}}/params/acquisition/artifacts",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"{{apiPrefix}}",
								"params",
								"acquisition",
								"artifacts"
							]
						}
					},
					"response": [
						{
							"name": "Get Acquisition Artifact List - 200 OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/{{apiPrefix}}/params/acquisition/artifacts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"{{apiPrefix}}",
										"params",
										"acquisition",
										"artifacts"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "5430"
								},
								{
									"key": "ETag",
									"value": "W/\"1536-EjA8tQkAjfhIXviQesKxvkCzdLc\""
								},
								{
									"key": "Date",
									"value": "Sun, 22 May 2022 17:04:20 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"windows\": [\n        {\n            \"group\": \"Server\",\n            \"items\": [\n                {\n                    \"name\": \"Apache Logs\",\n                    \"desc\": \"Collect Apache Logs\",\n                    \"type\": \"apcl\"\n                },\n                {\n                    \"name\": \"MongoDB Logs\",\n                    \"desc\": \"Collect MongoDB Logs\",\n                    \"type\": \"mngl\"\n                },\n                {\n                    \"name\": \"IIS Logs\",\n                    \"desc\": \"Collect IIS Logs\",\n                    \"type\": \"iisl\"\n                },\n                {\n                    \"name\": \"MSSQL Logs\",\n                    \"desc\": \"Collect MSSQL Logs\",\n                    \"type\": \"mssqll\"\n                },\n                {\n                    \"name\": \"Microsoft Exhange Logs\",\n                    \"desc\": \"Collect Microsoft Exchange Logs\",\n                    \"type\": \"exchl\"\n                },\n                {\n                    \"name\": \"DHCP Server Logs\",\n                    \"desc\": \"Collect DHCP Server Logs\",\n                    \"type\": \"dhcpl\"\n                },\n                {\n                    \"name\": \"DNS Server Logs\",\n                    \"desc\": \"Collect DNS Server Logs\",\n                    \"type\": \"dnsl\"\n                },\n                {\n                    \"name\": \"Active Directory Logs\",\n                    \"desc\": \"Collect Active Directory Logs\",\n                    \"type\": \"adl\"\n                }\n            ]\n        },\n        {\n            \"group\": \"Microsoft Applications\",\n            \"items\": [\n                {\n                    \"name\": \"Microsoft Photos\",\n                    \"desc\": \"Collect Microsoft Photos History Database\",\n                    \"type\": \"mph\"\n                },\n                {\n                    \"name\": \"Cortana History\",\n                    \"desc\": \"Collect Cortana History Databases\",\n                    \"type\": \"crtnh\"\n                },\n                {\n                    \"name\": \"Microsoft Store Applications List\",\n                    \"desc\": \"Collect Microsoft Store Applications List Database\",\n                    \"type\": \"strdb\"\n                },\n                {\n                    \"name\": \"Microsoft Sticky Notes\",\n                    \"desc\": \"Collect Microsoft Sticky Notes\",\n                    \"type\": \"stckyn\"\n                },\n                {\n                    \"name\": \"Microsoft Maps\",\n                    \"desc\": \"Collect Microsoft Maps Locations\",\n                    \"type\": \"mmps\"\n                },\n                {\n                    \"name\": \"Microsoft Voice Record History\",\n                    \"desc\": \"Collect Microsoft Voice Record History\",\n                    \"type\": \"vrcdh\"\n                },\n                {\n                    \"name\": \"Windows Notification History\",\n                    \"desc\": \"Collect Windows Notification History\",\n                    \"type\": \"ntfh\"\n                },\n                {\n                    \"name\": \"Search History\",\n                    \"desc\": \"Collect Windows Start Menu Search History\",\n                    \"type\": \"srch\"\n                },\n                {\n                    \"name\": \"Microsoft People\",\n                    \"desc\": \"Collect Microsoft People Data\",\n                    \"type\": \"mppl\"\n                },\n                {\n                    \"name\": \"Microsoft Calendar\",\n                    \"desc\": \"Collect Microsoft Calendar Data\",\n                    \"type\": \"mclndr\"\n                }\n            ]\n        },\n        {\n            \"group\": \"Communication\",\n            \"items\": [\n                {\n                    \"name\": \"Microsoft Mail\",\n                    \"desc\": \"Collect Microsoft Mail Emails\",\n                    \"type\": \"mml\"\n                },\n                {\n                    \"name\": \"Zoom Databases\",\n                    \"desc\": \"Collect Zoom Databases\",\n                    \"type\": \"zmdb\"\n                },\n                {\n                    \"name\": \"Zoom Media\",\n                    \"desc\": \"Collect Zoom Media Files & Link Previews\",\n                    \"type\": \"zmm\"\n                },\n                {\n                    \"name\": \"Teamviewer Logs\",\n                    \"desc\": \"Collect Teamviewer Connection Logs\",\n                    \"type\": \"tml\"\n                },\n                {\n                    \"name\": \"Microsoft Outlook\",\n                    \"desc\": \"Collect Microsoft Outlook Emails\",\n                    \"type\": \"outlk\"\n                },\n                {\n                    \"name\": \"Mozilla Thunderbird\",\n                    \"desc\": \"Collect Mozilla Thunderbird Emails\",\n                    \"type\": \"thndr\"\n                },\n                {\n                    \"name\": \"WhatsApp Desktop Cache\",\n                    \"desc\": \"Collect WhatsApp Desktop Cache\",\n                    \"type\": \"whtc\"\n                },\n                {\n                    \"name\": \"WhatsApp Desktop Cookie\",\n                    \"desc\": \"Collect WhatsApp Desktop Cookie\",\n                    \"type\": \"whtck\"\n                },\n                {\n                    \"name\": \"Skype Databases\",\n                    \"desc\": \"Collect Skype Databases\",\n                    \"type\": \"skypdb\"\n                },\n                {\n                    \"name\": \"Skype Media\",\n                    \"desc\": \"Collect Skype Media\",\n                    \"type\": \"skpym\"\n                },\n                {\n                    \"name\": \"Discord Desktop Cache\",\n                    \"desc\": \"Collect Discord Desktop Cache\",\n                    \"type\": \"dscrdc\"\n                },\n                {\n                    \"name\": \"Windows Live Mail User Settings\",\n                    \"desc\": \"Collect Windows Live Mail User Settings\",\n                    \"type\": \"wndml\"\n                }\n            ]\n        },\n        {\n            \"group\": \"Social Artifacts\",\n            \"items\": [\n                {\n                    \"name\": \"Twitter Databases\",\n                    \"desc\": \"Collect Twitter Store Application Databases\",\n                    \"type\": \"twtdb\"\n                },\n                {\n                    \"name\": \"Twitter Cache\",\n                    \"desc\": \"Collect Twitter Store Application Cache\",\n                    \"type\": \"twtc\"\n                },\n                {\n                    \"name\": \"Facebook Databases\",\n                    \"desc\": \"Collect Facebook Store Application User Databases\",\n                    \"type\": \"fcbkdb\"\n                },\n                {\n                    \"name\": \"Facebook Cache\",\n                    \"desc\": \"Collect Facebook Store Application Cache\",\n                    \"type\": \"fcbkc\"\n                },\n                {\n                    \"name\": \"LinkedIn Cache\",\n                    \"desc\": \"Collect LinkedIn Store Application Cache\",\n                    \"type\": \"lnkc\"\n                },\n                {\n                    \"name\": \"Spotify Recently Played List\",\n                    \"desc\": \"Collect Spotify Recently Played List & Social Manager\",\n                    \"type\": \"sptfyl\"\n                },\n                {\n                    \"name\": \"Spotify Cache\",\n                    \"desc\": \"Collect Spotify Cache\",\n                    \"type\": \"sptfyc\"\n                }\n            ]\n        },\n        {\n            \"group\": \"Productivity Artifacts\",\n            \"items\": [\n                {\n                    \"name\": \"Sublime Text Sessions\",\n                    \"desc\": \"Collect Sublime Text Sessions & Contents\",\n                    \"type\": \"sblm\"\n                },\n                {\n                    \"name\": \"Notepad++ Sessions\",\n                    \"desc\": \"Collect Notepad++ Search History & Sessions\",\n                    \"type\": \"ntpd\"\n                },\n                {\n                    \"name\": \"OpenVPN Config\",\n                    \"desc\": \"Collect OpenVPN Config Files\",\n                    \"type\": \"ovpn\"\n                },\n                {\n                    \"name\": \"Everything History\",\n                    \"desc\": \"Collect Everything Run History\",\n                    \"type\": \"evryh\"\n                },\n                {\n                    \"name\": \"Evernote Databases\",\n                    \"desc\": \"Collect Evernote Databases\",\n                    \"type\": \"everdb\"\n                },\n                {\n                    \"name\": \"Evernote Drag and Drop Files\",\n                    \"desc\": \"Collect Evernote Drag and Drop Files\",\n                    \"type\": \"everdd\"\n                },\n                {\n                    \"name\": \"Evernote Logs\",\n                    \"desc\": \"Collect Evernote Logs\",\n                    \"type\": \"everl\"\n                }\n            ]\n        },\n        {\n            \"group\": \"Utilities Artifacts\",\n            \"items\": [\n                {\n                    \"name\": \"iTunes Backups\",\n                    \"desc\": \"Collect iTunes Backups\",\n                    \"type\": \"itnb\"\n                },\n                {\n                    \"name\": \"VMware Config\",\n                    \"desc\": \"Collect VMware Config\",\n                    \"type\": \"vmc\"\n                },\n                {\n                    \"name\": \"VMware Drag and Drop Files\",\n                    \"desc\": \"Collect VMware Drag and Drop Files\",\n                    \"type\": \"vmdd\"\n                },\n                {\n                    \"name\": \"VMware Logs\",\n                    \"desc\": \"Collect VMware Logs\",\n                    \"type\": \"vml\"\n                }\n            ]\n        },\n        {\n            \"group\": \"Developer Tools\",\n            \"items\": [\n                {\n                    \"name\": \"FileZilla Sessions\",\n                    \"desc\": \"Collect FileZilla Sessions & Site Manager Settings\",\n                    \"type\": \"flz\"\n                },\n                {\n                    \"name\": \"Visual Studio Team Explorer Config\",\n                    \"desc\": \"Collect Visual Studio Team Explorer Config\",\n                    \"type\": \"vstm\"\n                },\n                {\n                    \"name\": \"Github Desktop Databases\",\n                    \"desc\": \"Collect Github Desktop Databases\",\n                    \"type\": \"gtdb\"\n                },\n                {\n                    \"name\": \"Github Desktop Cache\",\n                    \"desc\": \"Collect Github Desktop Cache\",\n                    \"type\": \"gthbc\"\n                },\n                {\n                    \"name\": \"Github Desktop Logs\",\n                    \"desc\": \"Collect Github Desktop Logs\",\n                    \"type\": \"gthbl\"\n                },\n                {\n                    \"name\": \"WSL\",\n                    \"desc\": \"Collect Windows Subsystem for Linux Files\",\n                    \"type\": \"wsl\"\n                },\n                {\n                    \"name\": \"Tortoise Git Logs\",\n                    \"desc\": \"Collect Tortoise Git Synchronization Logs\",\n                    \"type\": \"trtl\"\n                }\n            ]\n        },\n        {\n            \"group\": \"Cloud Artifacts\",\n            \"items\": [\n                {\n                    \"name\": \"Google Drive Databases\",\n                    \"desc\": \"Collect Google Drive Synchronization Databases\",\n                    \"type\": \"gdrvdb\"\n                },\n                {\n                    \"name\": \"Dropbox Databases\",\n                    \"desc\": \"Collect Dropbox Synchronization Databases\",\n                    \"type\": \"drpdb\"\n                },\n                {\n                    \"name\": \"Dropbox Logs\",\n                    \"desc\": \"Collect Dropbox Logs\",\n                    \"type\": \"drpl\"\n                },\n                {\n                    \"name\": \"Dropbox Cache\",\n                    \"desc\": \"Collect Dropbox Cache\",\n                    \"type\": \"drpc\"\n                }\n            ]\n        }\n    ],\n    \"linux\": []\n}"
						}
					]
				},
				{
					"name": "Get Acquisition Evidence List",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/{{apiPrefix}}/params/acquisition/evidences",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"{{apiPrefix}}",
								"params",
								"acquisition",
								"evidences"
							]
						}
					},
					"response": [
						{
							"name": "Get Acquisition Evidence List - 200 OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/{{apiPrefix}}/params/acquisition/evidences",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"{{apiPrefix}}",
										"params",
										"acquisition",
										"evidences"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "9233"
								},
								{
									"key": "ETag",
									"value": "W/\"2411-hQTT2YvQI/m/3JPpep1YeFgi9mA\""
								},
								{
									"key": "Date",
									"value": "Sun, 22 May 2022 17:05:03 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"windows\": [\n        {\n            \"group\": \"System\",\n            \"items\": [\n                {\n                    \"name\": \"Clipboard\",\n                    \"desc\": \"Collect clipboard contents\",\n                    \"type\": \"clp\"\n                },\n                {\n                    \"name\": \"Crash Dump Information\",\n                    \"desc\": \"Collect information about crash dumps\",\n                    \"type\": \"cdi\"\n                },\n                {\n                    \"name\": \"Recycle Bin Information\",\n                    \"desc\": \"Collect information about items in recycle bin\",\n                    \"type\": \"rbi\"\n                },\n                {\n                    \"name\": \"System Restore Points Information\",\n                    \"desc\": \"Collect information about system restore points\",\n                    \"type\": \"rpi\"\n                },\n                {\n                    \"name\": \"Drivers List\",\n                    \"desc\": \"Collect driver list\",\n                    \"type\": \"dri\"\n                },\n                {\n                    \"name\": \"Process and Modules\",\n                    \"desc\": \"Collect process and modules list\",\n                    \"type\": \"pri\"\n                },\n                {\n                    \"name\": \"Window Screenshots\",\n                    \"desc\": \"Capture screen shot of application windows\",\n                    \"type\": \"scr\"\n                },\n                {\n                    \"name\": \"Antivirus Information\",\n                    \"desc\": \"Collect information about installed antivirus\",\n                    \"type\": \"avi\"\n                },\n                {\n                    \"name\": \"DNS Servers\",\n                    \"desc\": \"Collect DNS Server addresses\",\n                    \"type\": \"dnss\"\n                },\n                {\n                    \"name\": \"Proxy List\",\n                    \"desc\": \"Collect information about proxy list\",\n                    \"type\": \"prxy\"\n                },\n                {\n                    \"name\": \"Installed Applications\",\n                    \"desc\": \"Enumerate Installed Applications\",\n                    \"type\": \"apps\"\n                },\n                {\n                    \"name\": \"Firewall Rules\",\n                    \"desc\": \"Enumerate Firewall Rules\",\n                    \"type\": \"frwl\"\n                },\n                {\n                    \"name\": \"USB Storage History\",\n                    \"desc\": \"Collect USB Storage History\",\n                    \"type\": \"usbmsc\"\n                },\n                {\n                    \"name\": \"Downloaded Files Information\",\n                    \"desc\": \"Collect information about downloaded files\",\n                    \"type\": \"dli\"\n                },\n                {\n                    \"name\": \"Autoruns\",\n                    \"desc\": \"Collect information about autoruns\",\n                    \"type\": \"aui\"\n                }\n            ]\n        },\n        {\n            \"group\": \"Disk\",\n            \"items\": [\n                {\n                    \"name\": \"Volumes Information\",\n                    \"desc\": \"Collect information about volumes\",\n                    \"type\": \"voli\"\n                },\n                {\n                    \"name\": \"MBR\",\n                    \"desc\": \"Collect Master Boot Record\",\n                    \"type\": \"mbr\"\n                }\n            ]\n        },\n        {\n            \"group\": \"Memory\",\n            \"items\": [\n                {\n                    \"name\": \"RAM Image\",\n                    \"desc\": \"Create an image of RAM\",\n                    \"type\": \"ram\"\n                },\n                {\n                    \"name\": \"Page File\",\n                    \"desc\": \"Dump system page file\",\n                    \"type\": \"pgf\"\n                },\n                {\n                    \"name\": \"Swap File\",\n                    \"desc\": \"Dump system swap file\",\n                    \"type\": \"swp\"\n                },\n                {\n                    \"name\": \"Hibernation File\",\n                    \"desc\": \"Dump hibernation file\",\n                    \"type\": \"hbr\"\n                }\n            ]\n        },\n        {\n            \"group\": \"Browser\",\n            \"items\": [\n                {\n                    \"name\": \"Chrome Browsing History\",\n                    \"desc\": \"Collect visited URLs from Google Chrome\",\n                    \"type\": \"chst\"\n                },\n                {\n                    \"name\": \"Firefox Browsing History\",\n                    \"desc\": \"Collect visited URLs from Mozilla Firefox\",\n                    \"type\": \"fhst\"\n                },\n                {\n                    \"name\": \"IE 7,8,9 Browsing History\",\n                    \"desc\": \"Collect visited URLs from Internet Explorer\",\n                    \"type\": \"ihst\"\n                },\n                {\n                    \"name\": \"IE 10,11,Edge Browsing History\",\n                    \"desc\": \"Collect visited URLs from Internet Explorer and Edge\",\n                    \"type\": \"ehst\"\n                },\n                {\n                    \"name\": \"Opera Browsing History\",\n                    \"desc\": \"Collect Visited URLs from Opera\",\n                    \"type\": \"ohst\"\n                }\n            ]\n        },\n        {\n            \"group\": \"NTFS\",\n            \"items\": [\n                {\n                    \"name\": \"MFT as CSV\",\n                    \"desc\": \"Dump MFT entries in CSV format\",\n                    \"type\": \"mftcsv\"\n                },\n                {\n                    \"name\": \"MFT\",\n                    \"desc\": \"Dump raw contents of $MFT\",\n                    \"type\": \"mft\"\n                },\n                {\n                    \"name\": \"MFT Mirror\",\n                    \"desc\": \"Dump MFT Mirror as raw\",\n                    \"type\": \"mftmir\"\n                },\n                {\n                    \"name\": \"$Log File\",\n                    \"desc\": \"Dump raw contents of $LogFile\",\n                    \"type\": \"ntfslog\"\n                },\n                {\n                    \"name\": \"USN Journal\",\n                    \"desc\": \"Dump contents of $UsnJrnl file\",\n                    \"type\": \"usnjrn\"\n                }\n            ]\n        },\n        {\n            \"group\": \"Registry\",\n            \"items\": [\n                {\n                    \"name\": \"Registry Hives\",\n                    \"desc\": \"Dump registry hives\",\n                    \"type\": \"hiv\"\n                },\n                {\n                    \"name\": \"Old Registry Hives\",\n                    \"desc\": \"Dump old registry hives in upgraded operating systems\",\n                    \"type\": \"hivold\"\n                },\n                {\n                    \"name\": \"ShellBags\",\n                    \"desc\": \"Enumerate ShellBags\",\n                    \"type\": \"sbgs\"\n                },\n                {\n                    \"name\": \"AppCompactCache\",\n                    \"desc\": \"Enumarate AppCompatCache (aka ShimCache)\",\n                    \"type\": \"appcc\"\n                }\n            ]\n        },\n        {\n            \"group\": \"Network\",\n            \"items\": [\n                {\n                    \"name\": \"DNS Cache\",\n                    \"desc\": \"Collect DNS Cache\",\n                    \"type\": \"dnsc\"\n                },\n                {\n                    \"name\": \"TCP Table\",\n                    \"desc\": \"Collect TCP Table\",\n                    \"type\": \"tcpt\"\n                },\n                {\n                    \"name\": \"UDP Table\",\n                    \"desc\": \"Collect UDP Table\",\n                    \"type\": \"udpt\"\n                },\n                {\n                    \"name\": \"ARP Table\",\n                    \"desc\": \"Collect ARP Table\",\n                    \"type\": \"arpt\"\n                },\n                {\n                    \"name\": \"IPv4 Routes\",\n                    \"desc\": \"Collect IPv4 Routes\",\n                    \"type\": \"ipv4\"\n                },\n                {\n                    \"name\": \"Network Adapters\",\n                    \"desc\": \"Collect information about network adapters\",\n                    \"type\": \"netadp\"\n                },\n                {\n                    \"name\": \"Network Shares\",\n                    \"desc\": \"Collect information about network shares\",\n                    \"type\": \"netshr\"\n                },\n                {\n                    \"name\": \"Hosts\",\n                    \"desc\": \"Dump Hosts File\",\n                    \"type\": \"hosts\"\n                }\n            ]\n        },\n        {\n            \"group\": \"Event Logs\",\n            \"items\": [\n                {\n                    \"name\": \"EVT Files\",\n                    \"desc\": \"Dump evt event log files\",\n                    \"type\": \"evt\"\n                },\n                {\n                    \"name\": \"EVTX Files\",\n                    \"desc\": \"Dump evtx event log files\",\n                    \"type\": \"evtx\"\n                },\n                {\n                    \"name\": \"EVT Records\",\n                    \"desc\": \"Collect most recent event log records\",\n                    \"type\": \"evtr\"\n                }\n            ]\n        },\n        {\n            \"group\": \"WMI\",\n            \"items\": [\n                {\n                    \"name\": \"Active Script Event Consumers\",\n                    \"desc\": \"Dump WMI active script event consumers\",\n                    \"type\": \"wmiasc\"\n                },\n                {\n                    \"name\": \"Command Line Event Consumers\",\n                    \"desc\": \"Dump WMI command line event consumers\",\n                    \"type\": \"wmicec\"\n                }\n            ]\n        },\n        {\n            \"group\": \"Process Execution\",\n            \"items\": [\n                {\n                    \"name\": \"Prefetch Files\",\n                    \"desc\": \"Collect Prefetch Files and Parse\",\n                    \"type\": \"pf\"\n                },\n                {\n                    \"name\": \"SRUM\",\n                    \"desc\": \"Collect SRUM and Parse\",\n                    \"type\": \"srum\"\n                },\n                {\n                    \"name\": \"Activities DB\",\n                    \"desc\": \"Dump activities db files\",\n                    \"type\": \"adb\"\n                },\n                {\n                    \"name\": \"AmCache\",\n                    \"desc\": \"Collect Amcache and Parse\",\n                    \"type\": \"amc\"\n                },\n                {\n                    \"name\": \"Recent File Cache\",\n                    \"desc\": \"Collect recent file cache files\",\n                    \"type\": \"rfc\"\n                }\n            ]\n        },\n        {\n            \"group\": \"Other Evidences\",\n            \"items\": [\n                {\n                    \"name\": \"ETL\",\n                    \"desc\": \"Collect ETL Log\",\n                    \"type\": \"etl\"\n                },\n                {\n                    \"name\": \"CLR\",\n                    \"desc\": \"Collect CLR Log\",\n                    \"type\": \"clr\"\n                },\n                {\n                    \"name\": \"Jump List\",\n                    \"desc\": \"Collect Jump List Files\",\n                    \"type\": \"jmplst\"\n                },\n                {\n                    \"name\": \"LNK Files\",\n                    \"desc\": \"Collect LNK Files\",\n                    \"type\": \"lnkf\"\n                },\n                {\n                    \"name\": \"Windows Index Search\",\n                    \"desc\": \"Collect Windows Index Search Database\",\n                    \"type\": \"indxs\"\n                },\n                {\n                    \"name\": \"Superfetch\",\n                    \"desc\": \"Collect Superfetch Files\",\n                    \"type\": \"sprf\"\n                },\n                {\n                    \"name\": \"WBEM\",\n                    \"desc\": \"Collect WBEM Files\",\n                    \"type\": \"wbem\"\n                },\n                {\n                    \"name\": \"INF Setup\",\n                    \"desc\": \"Collect INF Setup Log Files\",\n                    \"type\": \"infl\"\n                },\n                {\n                    \"name\": \"SDB\",\n                    \"desc\": \"Collect SDB\",\n                    \"type\": \"sdb\"\n                },\n                {\n                    \"name\": \"Powershell\",\n                    \"desc\": \"Collect Powershell Logs\",\n                    \"type\": \"pwrs\"\n                },\n                {\n                    \"name\": \"Thumbcache\",\n                    \"desc\": \"Collect Thumbcache\",\n                    \"type\": \"tc\"\n                },\n                {\n                    \"name\": \"Iconcache\",\n                    \"desc\": \"Collect Iconcache\",\n                    \"type\": \"ic\"\n                },\n                {\n                    \"name\": \"RDP Cache\",\n                    \"desc\": \"Collect RDP Cache Files\",\n                    \"type\": \"rdpc\"\n                }\n            ]\n        }\n    ],\n    \"linux\": [\n        {\n            \"group\": \"System\",\n            \"items\": [\n                {\n                    \"name\": \"System Controls\",\n                    \"desc\": \"Collect system controls\",\n                    \"type\": \"syscntrls\"\n                },\n                {\n                    \"name\": \"Cron Jobs\",\n                    \"desc\": \"Collect cron jobs\",\n                    \"type\": \"cronj\"\n                },\n                {\n                    \"name\": \"AppArmor Profiles\",\n                    \"desc\": \"Collect AppArmor profiles\",\n                    \"type\": \"aarmpr\"\n                },\n                {\n                    \"name\": \"ULimit Information\",\n                    \"desc\": \"Collect ulimit information\",\n                    \"type\": \"ulimit\"\n                },\n                {\n                    \"name\": \"Kernel Modules\",\n                    \"desc\": \"Collect kernel modules\",\n                    \"type\": \"krnmods\"\n                },\n                {\n                    \"name\": \"Lock Files\",\n                    \"desc\": \"Collect lock files\",\n                    \"type\": \"lckfls\"\n                }\n            ]\n        },\n        {\n            \"group\": \"Disk\",\n            \"items\": [\n                {\n                    \"name\": \"Block Devices\",\n                    \"desc\": \"Collect block devices\",\n                    \"type\": \"blkd\"\n                },\n                {\n                    \"name\": \"Fstab\",\n                    \"desc\": \"Collect fstab configuration\",\n                    \"type\": \"fstab\"\n                },\n                {\n                    \"name\": \"Mounts\",\n                    \"desc\": \"Collect mounts\",\n                    \"type\": \"mounts\"\n                },\n                {\n                    \"name\": \"NFS Exports\",\n                    \"desc\": \"Collect NFS exports\",\n                    \"type\": \"nfsexpr\"\n                }\n            ]\n        },\n        {\n            \"group\": \"Processes\",\n            \"items\": [\n                {\n                    \"name\": \"Processes\",\n                    \"desc\": \"Collect process list\",\n                    \"type\": \"process\"\n                },\n                {\n                    \"name\": \"Process Open Files\",\n                    \"desc\": \"Collect process open files information\",\n                    \"type\": \"popenf\"\n                }\n            ]\n        },\n        {\n            \"group\": \"Memory\",\n            \"items\": [\n                {\n                    \"name\": \"Shared Memory\",\n                    \"desc\": \"Collect shared memory\",\n                    \"type\": \"sharedm\"\n                },\n                {\n                    \"name\": \"Memory Map\",\n                    \"desc\": \"Collect memory map\",\n                    \"type\": \"memmap\"\n                },\n                {\n                    \"name\": \"Swaps\",\n                    \"desc\": \"Collect swap info\",\n                    \"type\": \"swaps\"\n                }\n            ]\n        },\n        {\n            \"group\": \"Users\",\n            \"items\": [\n                {\n                    \"name\": \"User Groups\",\n                    \"desc\": \"Collect user group list\",\n                    \"type\": \"groups\"\n                },\n                {\n                    \"name\": \"Users\",\n                    \"desc\": \"Collect user list\",\n                    \"type\": \"users\"\n                },\n                {\n                    \"name\": \"Last Access\",\n                    \"desc\": \"Collect last access records\",\n                    \"type\": \"lastacs\"\n                },\n                {\n                    \"name\": \"Logged Users\",\n                    \"desc\": \"Collect logged user list\",\n                    \"type\": \"lgdusrs\"\n                },\n                {\n                    \"name\": \"Shadow\",\n                    \"desc\": \"Collect shadow content\",\n                    \"type\": \"shadow\"\n                },\n                {\n                    \"name\": \"Sudoers\",\n                    \"desc\": \"Collect sudoers\",\n                    \"type\": \"sudoers\"\n                },\n                {\n                    \"name\": \"Failed Login Attempts\",\n                    \"desc\": \"Collect fail login attempts\",\n                    \"type\": \"fla\"\n                }\n            ]\n        },\n        {\n            \"group\": \"SSH\",\n            \"items\": [\n                {\n                    \"name\": \"SSH Known Hosts\",\n                    \"desc\": \"Collect SSH known hosts\",\n                    \"type\": \"sshknown\"\n                },\n                {\n                    \"name\": \"SSH Authorized Keys\",\n                    \"desc\": \"Collect SSH authorized keys\",\n                    \"type\": \"sshauth\"\n                },\n                {\n                    \"name\": \"SSH Configs\",\n                    \"desc\": \"Collect SSH configurations\",\n                    \"type\": \"sshconf\"\n                },\n                {\n                    \"name\": \"SSHD Configs\",\n                    \"desc\": \"Collect SSHD configurations\",\n                    \"type\": \"sshdconf\"\n                }\n            ]\n        },\n        {\n            \"group\": \"Network\",\n            \"items\": [\n                {\n                    \"name\": \"Hosts\",\n                    \"desc\": \"Collect hosts\",\n                    \"type\": \"hosts\"\n                },\n                {\n                    \"name\": \"ICMP Table\",\n                    \"desc\": \"Collect ICMP table\",\n                    \"type\": \"icmptab\"\n                },\n                {\n                    \"name\": \"IP Routes\",\n                    \"desc\": \"Collect IP routes\",\n                    \"type\": \"iprts\"\n                },\n                {\n                    \"name\": \"IP Tables\",\n                    \"desc\": \"Collect IP tables\",\n                    \"type\": \"iptbl\"\n                },\n                {\n                    \"name\": \"Raw Table\",\n                    \"desc\": \"Collect Raw table\",\n                    \"type\": \"rawtab\"\n                },\n                {\n                    \"name\": \"Network Interfaces\",\n                    \"desc\": \"Collect network interfaces\",\n                    \"type\": \"netint\"\n                },\n                {\n                    \"name\": \"TCP Table\",\n                    \"desc\": \"Collect TCP table\",\n                    \"type\": \"tcptab\"\n                },\n                {\n                    \"name\": \"UDPLite Table\",\n                    \"desc\": \"Collect UDPLite table\",\n                    \"type\": \"udplitetab\"\n                },\n                {\n                    \"name\": \"UDP Table\",\n                    \"desc\": \"Collect UDP table\",\n                    \"type\": \"udptab\"\n                },\n                {\n                    \"name\": \"Unix Sockets\",\n                    \"desc\": \"Collect unix sockets\",\n                    \"type\": \"unixsoc\"\n                },\n                {\n                    \"name\": \"ARP Table\",\n                    \"desc\": \"Collect ARP table\",\n                    \"type\": \"arpt\"\n                },\n                {\n                    \"name\": \"DNS Resolvers\",\n                    \"desc\": \"Collect DNS resolvers\",\n                    \"type\": \"dnsr\"\n                }\n            ]\n        },\n        {\n            \"group\": \"Other Evidences\",\n            \"items\": [\n                {\n                    \"name\": \"APT Sources\",\n                    \"desc\": \"Collect APT sources\",\n                    \"type\": \"apts\"\n                },\n                {\n                    \"name\": \"APT History\",\n                    \"desc\": \"Collect APT history\",\n                    \"type\": \"apthst\"\n                },\n                {\n                    \"name\": \"DEB Packages\",\n                    \"desc\": \"Collect Debian packages\",\n                    \"type\": \"debp\"\n                },\n                {\n                    \"name\": \"YUM Sources\",\n                    \"desc\": \"Collect YUM sources\",\n                    \"type\": \"yumsrcs\"\n                },\n                {\n                    \"name\": \"SELinux Configs\",\n                    \"desc\": \"Collect SELinux configurations\",\n                    \"type\": \"selinuxc\"\n                },\n                {\n                    \"name\": \"SELinux Settings\",\n                    \"desc\": \"Collect SELinux settings\",\n                    \"type\": \"selinuxs\"\n                },\n                {\n                    \"name\": \"SUID Binaries\",\n                    \"desc\": \"Collect SUID binaries\",\n                    \"type\": \"suidbins\"\n                },\n                {\n                    \"name\": \"Shell History\",\n                    \"desc\": \"Collect shell history\",\n                    \"type\": \"shellhist\"\n                },\n                {\n                    \"name\": \"System Artifacts\",\n                    \"desc\": \"Collect system artifacts (Files of collected evidence. For example: /etc/passwd file)\",\n                    \"type\": \"sysartf\"\n                },\n                {\n                    \"name\": \"Log Files\",\n                    \"desc\": \"Collect log files under /var/log/\",\n                    \"type\": \"logs\"\n                }\n            ]\n        }\n    ]\n}"
						}
					]
				},
				{
					"name": "Get E-Discovery Patterns",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/{{apiPrefix}}/params/acquisition/e-discovery-patterns",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"{{apiPrefix}}",
								"params",
								"acquisition",
								"e-discovery-patterns"
							],
							"query": [
								{
									"key": "filter[searchTerm]",
									"value": "network ca",
									"disabled": true
								},
								{
									"key": "filter[name]",
									"value": "earum",
									"disabled": true
								},
								{
									"key": "pageSize",
									"value": "50",
									"disabled": true
								}
							]
						}
					},
					"response": [
						{
							"name": "Get E-Discovery Patterns - 200 OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/{{apiPrefix}}/params/acquisition/e-discovery-patterns",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"{{apiPrefix}}",
										"params",
										"acquisition",
										"e-discovery-patterns"
									],
									"query": [
										{
											"key": "filter[searchTerm]",
											"value": "network ca",
											"disabled": true
										},
										{
											"key": "filter[name]",
											"value": "earum",
											"disabled": true
										},
										{
											"key": "pageSize",
											"value": "50",
											"disabled": true
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Date",
									"value": "Sun, 22 May 2022 17:05:12 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"category\": \"Archives\",\n        \"applications\": [\n            {\n                \"name\": \"7Zip\",\n                \"pattern\": \"**/*.7z\"\n            },\n            {\n                \"name\": \"ACE\",\n                \"pattern\": \"**/*.ace\"\n            },\n            {\n                \"name\": \"ARJ\",\n                \"pattern\": \"**/*.arj\"\n            },\n            {\n                \"name\": \"Binary Amiga Disk file\",\n                \"pattern\": \"**/*.adf\"\n            },\n            {\n                \"name\": \"BinHex 4.0 Encoded File\",\n                \"pattern\": \"**/*.hqx\"\n            },\n            {\n                \"name\": \"BZip\",\n                \"pattern\": \"**/*.bz\"\n            },\n            {\n                \"name\": \"BZip\",\n                \"pattern\": \"**/*.bz2\"\n            },\n            {\n                \"name\": \"C-64 disk image\",\n                \"pattern\": \"**/*.d64\"\n            },\n            {\n                \"name\": \"C-64 Tape Image\",\n                \"pattern\": \"**/*.t64\"\n            },\n            {\n                \"name\": \"CPIO Archive File\",\n                \"pattern\": \"**/*.cpio\"\n            },\n            {\n                \"name\": \"Debian Linux package\",\n                \"pattern\": \"**/*.deb\"\n            },\n            {\n                \"name\": \"Debian Linux package\",\n                \"pattern\": \"**/*.udeb\"\n            },\n            {\n                \"name\": \"DGCA\",\n                \"pattern\": \"**/*.dgc\"\n            },\n            {\n                \"name\": \"extended ZIP\",\n                \"pattern\": \"**/*.zipx\"\n            },\n            {\n                \"name\": \"GZip\",\n                \"pattern\": \"**/*.gz\"\n            },\n            {\n                \"name\": \"Java archive\",\n                \"pattern\": \"**/*.jar\"\n            },\n            {\n                \"name\": \"KGB archive\",\n                \"pattern\": \"**/*.kgb\"\n            },\n            {\n                \"name\": \"LHArch\",\n                \"pattern\": \"**/*.lha\"\n            },\n            {\n                \"name\": \"LHArch\",\n                \"pattern\": \"**/*.lzh\"\n            },\n            {\n                \"name\": \"Mac Compactor (Pro)\",\n                \"pattern\": \"**/*.cpt\"\n            },\n            {\n                \"name\": \"MS SZDD compression\",\n                \"pattern\": \"**/*.szdd\"\n            },\n            {\n                \"name\": \"MSN archive\",\n                \"pattern\": \"**/*.mar\"\n            },\n            {\n                \"name\": \"OLE archive\",\n                \"pattern\": \"**/*.olebin\"\n            },\n            {\n                \"name\": \"Palm\",\n                \"pattern\": \"**/*.pdb\"\n            },\n            {\n                \"name\": \"Palm\",\n                \"pattern\": \"**/*.pdc\"\n            },\n            {\n                \"name\": \"Paragon encrypted disk 2.0\",\n                \"pattern\": \"**/*.crd\"\n            },\n            {\n                \"name\": \"PAX\",\n                \"pattern\": \"**/*.pax\"\n            },\n            {\n                \"name\": \"Power Archiver\",\n                \"pattern\": \"**/*.pae\"\n            },\n            {\n                \"name\": \"Red Hat Package Manager\",\n                \"pattern\": \"**/*.rpm\"\n            },\n            {\n                \"name\": \"Roshal ARchive\",\n                \"pattern\": \"**/*.rar\"\n            },\n            {\n                \"name\": \"Self-extracting archive\",\n                \"pattern\": \"**/*.sfx\"\n            },\n            {\n                \"name\": \"SHell aRchive\",\n                \"pattern\": \"**/*.shar\"\n            },\n            {\n                \"name\": \"Steganographic image\",\n                \"pattern\": \"**/*.stegan\"\n            },\n            {\n                \"name\": \"StuffIt\",\n                \"pattern\": \"**/*.sit\"\n            },\n            {\n                \"name\": \"StuffIT Expander Archive\",\n                \"pattern\": \"**/*.sea\"\n            },\n            {\n                \"name\": \"Tar\",\n                \"pattern\": \"**/*.tar\"\n            },\n            {\n                \"name\": \"TAR/GZip\",\n                \"pattern\": \"**/*.tgz\"\n            },\n            {\n                \"name\": \"UHArc Archive\",\n                \"pattern\": \"**/*.uha\"\n            },\n            {\n                \"name\": \"Windows Installer\",\n                \"pattern\": \"**/*.cab\"\n            },\n            {\n                \"name\": \"WinRK\",\n                \"pattern\": \"**/*.rk\"\n            },\n            {\n                \"name\": \"Zip\",\n                \"pattern\": \"**/*.zip\"\n            }\n        ]\n    },\n    {\n        \"category\": \"Cryptography\",\n        \"applications\": [\n            {\n                \"name\": \"Axcrypt\",\n                \"pattern\": \"**/*.axx\"\n            },\n            {\n                \"name\": \"BestCrypt crypto container\",\n                \"pattern\": \"**/*.jbc\"\n            },\n            {\n                \"name\": \"ccencrypt data\",\n                \"pattern\": \"**/*.cpt\"\n            },\n            {\n                \"name\": \"Certificate Request\",\n                \"pattern\": \"**/*.p10\"\n            },\n            {\n                \"name\": \"Certificate Request Response\",\n                \"pattern\": \"**/*.p7r\"\n            },\n            {\n                \"name\": \"Cryptext\",\n                \"pattern\": \"**/*.$#!\"\n            },\n            {\n                \"name\": \"DES encrypted zip file\",\n                \"pattern\": \"**/*.dez\"\n            },\n            {\n                \"name\": \"Digital certificate\",\n                \"pattern\": \"**/*.cer\"\n            },\n            {\n                \"name\": \"DVD Decrypter IsoImage\",\n                \"pattern\": \"**/*.I00\"\n            },\n            {\n                \"name\": \"DVD Decrypter IsoImage\",\n                \"pattern\": \"**/*.I01\"\n            },\n            {\n                \"name\": \"EFS auxiliary file\",\n                \"pattern\": \"**/*.efs\"\n            },\n            {\n                \"name\": \"Emule filecrypter\",\n                \"pattern\": \"**/*.efc\"\n            },\n            {\n                \"name\": \"GnuGP\",\n                \"pattern\": \"**/*.gpg\"\n            },\n            {\n                \"name\": \"MS code signing catalog\",\n                \"pattern\": \"**/*.cat\"\n            },\n            {\n                \"name\": \"Personal Information Exchange\",\n                \"pattern\": \"**/*.p12\"\n            },\n            {\n                \"name\": \"PGP armored encrypted file\",\n                \"pattern\": \"**/*.asc\"\n            },\n            {\n                \"name\": \"PGP ciphertext\",\n                \"pattern\": \"**/*.ctx\"\n            },\n            {\n                \"name\": \"PGP disk volume\",\n                \"pattern\": \"**/*.pgd\"\n            },\n            {\n                \"name\": \"PGP encrypted file\",\n                \"pattern\": \"**/*.pgp\"\n            },\n            {\n                \"name\": \"PGP groups\",\n                \"pattern\": \"**/*.pgr\"\n            },\n            {\n                \"name\": \"PGP private keyring\",\n                \"pattern\": \"**/*.prvkr\"\n            },\n            {\n                \"name\": \"PGP private keyring\",\n                \"pattern\": \"**/*.skr\"\n            },\n            {\n                \"name\": \"PGP public Keyring\",\n                \"pattern\": \"**/*.pkr\"\n            },\n            {\n                \"name\": \"PKCS #12 certificate\",\n                \"pattern\": \"**/*.pfx\"\n            },\n            {\n                \"name\": \"Security Certificate\",\n                \"pattern\": \"**/*.der\"\n            },\n            {\n                \"name\": \"Steganos encrypted safe\",\n                \"pattern\": \"**/*.sle\"\n            },\n            {\n                \"name\": \"Steganos password file\",\n                \"pattern\": \"**/*.sef\"\n            },\n            {\n                \"name\": \"Steganos safe\",\n                \"pattern\": \"**/*.sde\"\n            },\n            {\n                \"name\": \"Utimaco SafeGuard PrivateCrypto\",\n                \"pattern\": \"**/*.uti\"\n            }\n        ]\n    },\n    {\n        \"category\": \"Database, Spreadsheet, Finance\",\n        \"applications\": [\n            {\n                \"name\": \"Access Database 2007\",\n                \"pattern\": \"**/*.accdb\"\n            },\n            {\n                \"name\": \"Apple iWork Numbers spreadsheet\",\n                \"pattern\": \"**/*.numbers\"\n            },\n            {\n                \"name\": \"Comma-separated values\",\n                \"pattern\": \"**/*.csv\"\n            },\n            {\n                \"name\": \"Data Interchange Format\",\n                \"pattern\": \"**/*.dif\"\n            },\n            {\n                \"name\": \"dBase II\",\n                \"pattern\": \"**/*.dbf2\"\n            },\n            {\n                \"name\": \"dBase III\",\n                \"pattern\": \"**/*.dbf\"\n            },\n            {\n                \"name\": \"Excel database query\",\n                \"pattern\": \"**/*.dqy\"\n            },\n            {\n                \"name\": \"FrameMaker 5\",\n                \"pattern\": \"**/*.fm5\"\n            },\n            {\n                \"name\": \"FrameMaker/Lotus 1-2-3 spreadsheet\",\n                \"pattern\": \"**/*.fm\"\n            },\n            {\n                \"name\": \"Gnumeric spreadsheet\",\n                \"pattern\": \"**/*.gnumeric\"\n            },\n            {\n                \"name\": \"Lotus 1-2-3\",\n                \"pattern\": \"**/*.123\"\n            },\n            {\n                \"name\": \"Lotus 1-2-3\",\n                \"pattern\": \"**/*.wk1\"\n            },\n            {\n                \"name\": \"Lotus 1-2-3 v3\",\n                \"pattern\": \"**/*.wk3\"\n            },\n            {\n                \"name\": \"Lotus 1-2-3 v4\",\n                \"pattern\": \"**/*.wk4\"\n            },\n            {\n                \"name\": \"Lotus 1-2-3 v5\",\n                \"pattern\": \"**/*.wk5\"\n            },\n            {\n                \"name\": \"Lotus Approach\",\n                \"pattern\": \"**/*.apr\"\n            },\n            {\n                \"name\": \"Lotus Notes database\",\n                \"pattern\": \"**/*.ntf\"\n            },\n            {\n                \"name\": \"Microsoft Office Excel OLE DB Query\",\n                \"pattern\": \"**/*.rqy\"\n            },\n            {\n                \"name\": \"MS Access\",\n                \"pattern\": \"**/*.mdb\"\n            },\n            {\n                \"name\": \"MS Access\",\n                \"pattern\": \"**/*.mde\"\n            },\n            {\n                \"name\": \"MS Excel\",\n                \"pattern\": \"**/*.xls\"\n            },\n            {\n                \"name\": \"MS Excel 2007\",\n                \"pattern\": \"**/*.xlsm\"\n            },\n            {\n                \"name\": \"MS Excel 2007\",\n                \"pattern\": \"**/*.xlsx\"\n            },\n            {\n                \"name\": \"MS Excel 4.0 workbook\",\n                \"pattern\": \"**/*.xlw\"\n            },\n            {\n                \"name\": \"MS Excel backup\",\n                \"pattern\": \"**/*.xlk\"\n            },\n            {\n                \"name\": \"MS Excel template\",\n                \"pattern\": \"**/*.xlt\"\n            },\n            {\n                \"name\": \"MS Money\",\n                \"pattern\": \"**/*.mny\"\n            },\n            {\n                \"name\": \"MS SQL\",\n                \"pattern\": \"**/*.mdf\"\n            },\n            {\n                \"name\": \"MS Works Database\",\n                \"pattern\": \"**/*.wdb\"\n            },\n            {\n                \"name\": \"MS Works spreadsheet\",\n                \"pattern\": \"**/*.xlr\"\n            },\n            {\n                \"name\": \"MS Works/Lotus 1-2-3\",\n                \"pattern\": \"**/*.wks\"\n            },\n            {\n                \"name\": \"MySQL\",\n                \"pattern\": \"**/*.frm\"\n            },\n            {\n                \"name\": \"MySQL\",\n                \"pattern\": \"**/*.myd\"\n            },\n            {\n                \"name\": \"OpenOffice Calc\",\n                \"pattern\": \"**/*.ods\"\n            },\n            {\n                \"name\": \"OpenOffice Calc template\",\n                \"pattern\": \"**/*.ots\"\n            },\n            {\n                \"name\": \"PlanMaker\",\n                \"pattern\": \"**/*.pmd\"\n            },\n            {\n                \"name\": \"Pocket Excel\",\n                \"pattern\": \"**/*.pxl\"\n            },\n            {\n                \"name\": \"Quattro Pro\",\n                \"pattern\": \"**/*.wq1\"\n            },\n            {\n                \"name\": \"Quattro Pro Project\",\n                \"pattern\": \"**/*.qpw\"\n            },\n            {\n                \"name\": \"QuattroPro for Windows Spreadsheet\",\n                \"pattern\": \"**/*.wb3\"\n            },\n            {\n                \"name\": \"QuickBooks backup\",\n                \"pattern\": \"**/*.qbb\"\n            },\n            {\n                \"name\": \"QuickBooks workbook\",\n                \"pattern\": \"**/*.qbw\"\n            },\n            {\n                \"name\": \"Quicken\",\n                \"pattern\": \"**/*.qdb\"\n            },\n            {\n                \"name\": \"Quicken\",\n                \"pattern\": \"**/*.qdt\"\n            },\n            {\n                \"name\": \"Quicken\",\n                \"pattern\": \"**/*.qif\"\n            },\n            {\n                \"name\": \"Quicken data file\",\n                \"pattern\": \"**/*.qdf\"\n            },\n            {\n                \"name\": \"SQL Server Compact Edition Database\",\n                \"pattern\": \"**/*.sdf\"\n            },\n            {\n                \"name\": \"SQLite 2.x database\",\n                \"pattern\": \"**/*.sqlite2\"\n            },\n            {\n                \"name\": \"SQLite 3 DB\",\n                \"pattern\": \"**/*.kexi\"\n            },\n            {\n                \"name\": \"SQLite 3.x database\",\n                \"pattern\": \"**/*.sqlite3\"\n            },\n            {\n                \"name\": \"SQLite database\",\n                \"pattern\": \"**/*.sqlite\"\n            },\n            {\n                \"name\": \"StarMoney\",\n                \"pattern\": \"**/*.sdx\"\n            },\n            {\n                \"name\": \"StarMoney\",\n                \"pattern\": \"**/*.sdy\"\n            },\n            {\n                \"name\": \"StarMoney document\",\n                \"pattern\": \"**/*.pdy\"\n            },\n            {\n                \"name\": \"StarMoney log\",\n                \"pattern\": \"**/*.pro\"\n            },\n            {\n                \"name\": \"StarOffice spreadsheet\",\n                \"pattern\": \"**/*.sdc\"\n            },\n            {\n                \"name\": \"StarOffice spreadsheet\",\n                \"pattern\": \"**/*.stc\"\n            },\n            {\n                \"name\": \"StarOffice spreadsheet\",\n                \"pattern\": \"**/*.sxc\"\n            },\n            {\n                \"name\": \"Structured Query Language\",\n                \"pattern\": \"**/*.sql\"\n            },\n            {\n                \"name\": \"Tab-separated values\",\n                \"pattern\": \"**/*.tsv\"\n            },\n            {\n                \"name\": \"Windows MediaPlayer Database\",\n                \"pattern\": \"**/*.wmdb\"\n            }\n        ]\n    },\n    {\n        \"category\": \"Disk Image\",\n        \"applications\": [\n            {\n                \"name\": \"Acronis True Image\",\n                \"pattern\": \"**/*.tib\"\n            },\n            {\n                \"name\": \"Alcohol\",\n                \"pattern\": \"**/*.mdf\"\n            },\n            {\n                \"name\": \"Alcohol\",\n                \"pattern\": \"**/*.mds\"\n            },\n            {\n                \"name\": \"Apple Macintosh\",\n                \"pattern\": \"**/*.dmg\"\n            },\n            {\n                \"name\": \"Ashampoo Burning Studio\",\n                \"pattern\": \"**/*.ashbak\"\n            },\n            {\n                \"name\": \"Avanquest Perfect Image\",\n                \"pattern\": \"**/*.pfm\"\n            },\n            {\n                \"name\": \"BackMagic\",\n                \"pattern\": \"**/*.cmt\"\n            },\n            {\n                \"name\": \"BackToZip\",\n                \"pattern\": \"**/*.btz\"\n            },\n            {\n                \"name\": \"Backup4All\",\n                \"pattern\": \"**/*.bkc\"\n            },\n            {\n                \"name\": \"BlindWrite\",\n                \"pattern\": \"**/*.b5i\"\n            },\n            {\n                \"name\": \"BlindWrite\",\n                \"pattern\": \"**/*.b5t\"\n            },\n            {\n                \"name\": \"Blindwrite\",\n                \"pattern\": \"**/*.bwi\"\n            },\n            {\n                \"name\": \"Blindwrite\",\n                \"pattern\": \"**/*.bwt\"\n            },\n            {\n                \"name\": \"CD-i OptImage\",\n                \"pattern\": \"**/*.cd\"\n            },\n            {\n                \"name\": \"CDMate\",\n                \"pattern\": \"**/*.cmi\"\n            },\n            {\n                \"name\": \"CDRWin\",\n                \"pattern\": \"**/*.cue\"\n            },\n            {\n                \"name\": \"CDRWin, ...\",\n                \"pattern\": \"**/*.bin\"\n            },\n            {\n                \"name\": \"CloneCD\",\n                \"pattern\": \"**/*.ccd\"\n            },\n            {\n                \"name\": \"CloneCD\",\n                \"pattern\": \"**/*.sub\"\n            },\n            {\n                \"name\": \"CloneCD, HDCopy, QEMU\",\n                \"pattern\": \"**/*.img\"\n            },\n            {\n                \"name\": \"Creator\",\n                \"pattern\": \"**/*.cif\"\n            },\n            {\n                \"name\": \"DiscJuggler\",\n                \"pattern\": \"**/*.cdi\"\n            },\n            {\n                \"name\": \"Discsafe\",\n                \"pattern\": \"**/*.dsp\"\n            },\n            {\n                \"name\": \"Disk image\",\n                \"pattern\": \"**/*.dsk\"\n            },\n            {\n                \"name\": \"Drive Star\",\n                \"pattern\": \"**/*.par\"\n            },\n            {\n                \"name\": \"Duplicator, Nero\",\n                \"pattern\": \"**/*.dao\"\n            },\n            {\n                \"name\": \"Duplicator, Nero\",\n                \"pattern\": \"**/*.tao\"\n            },\n            {\n                \"name\": \"Evidence file\",\n                \"pattern\": \"**/*.e01\"\n            },\n            {\n                \"name\": \"Farstone DriveClone/Pro\",\n                \"pattern\": \"**/*.sco\"\n            },\n            {\n                \"name\": \"Feurio\",\n                \"pattern\": \"**/*.ovr\"\n            },\n            {\n                \"name\": \"Feurio CD project\",\n                \"pattern\": \"**/*.cdl\"\n            },\n            {\n                \"name\": \"Ghost\",\n                \"pattern\": \"**/*.gho\"\n            },\n            {\n                \"name\": \"Ghost\",\n                \"pattern\": \"**/*.ghs\"\n            },\n            {\n                \"name\": \"HDCopy\",\n                \"pattern\": \"**/*.hcc\"\n            },\n            {\n                \"name\": \"HDCopy\",\n                \"pattern\": \"**/*.hci\"\n            },\n            {\n                \"name\": \"imDisc project\",\n                \"pattern\": \"**/*.sdp\"\n            },\n            {\n                \"name\": \"Logical evidence file\",\n                \"pattern\": \"**/*.l01\"\n            },\n            {\n                \"name\": \"Nero\",\n                \"pattern\": \"**/*.nrb\"\n            },\n            {\n                \"name\": \"Nero\",\n                \"pattern\": \"**/*.nrg\"\n            },\n            {\n                \"name\": \"Nero\",\n                \"pattern\": \"**/*.nri\"\n            },\n            {\n                \"name\": \"Nero BackItUp\",\n                \"pattern\": \"**/*.nba\"\n            },\n            {\n                \"name\": \"Nero BackItUp\",\n                \"pattern\": \"**/*.nco\"\n            },\n            {\n                \"name\": \"Nero BackItUp\",\n                \"pattern\": \"**/*.nda\"\n            },\n            {\n                \"name\": \"Nero, BlindRead, Creator\",\n                \"pattern\": \"**/*.iso\"\n            },\n            {\n                \"name\": \"NovaBackup\",\n                \"pattern\": \"**/*.nb7\"\n            },\n            {\n                \"name\": \"NovaBackup\",\n                \"pattern\": \"**/*.nbk\"\n            },\n            {\n                \"name\": \"NTI CD-Copy\",\n                \"pattern\": \"**/*.cdp\"\n            },\n            {\n                \"name\": \"O&O DiskImage\",\n                \"pattern\": \"**/*.omg\"\n            },\n            {\n                \"name\": \"Open Virtual Format\",\n                \"pattern\": \"**/*.ovf\"\n            },\n            {\n                \"name\": \"Paragon Exact Image/Drive Backup\",\n                \"pattern\": \"**/*.pbf\"\n            },\n            {\n                \"name\": \"Parallels Desktop\",\n                \"pattern\": \"**/*.hdd\"\n            },\n            {\n                \"name\": \"Pinnacle InstantCopy\",\n                \"pattern\": \"**/*.pdi\"\n            },\n            {\n                \"name\": \"PlexTools\",\n                \"pattern\": \"**/*.pxi\"\n            },\n            {\n                \"name\": \"PowerQuest Backup Image\",\n                \"pattern\": \"**/*.v2i\"\n            },\n            {\n                \"name\": \"PQMagic Image file\",\n                \"pattern\": \"**/*.pqi\"\n            },\n            {\n                \"name\": \"Prassi\",\n                \"pattern\": \"**/*.gcd\"\n            },\n            {\n                \"name\": \"Prassi PrimoDVD\",\n                \"pattern\": \"**/*.gi\"\n            },\n            {\n                \"name\": \"QEMU\",\n                \"pattern\": \"**/*.qevm\"\n            },\n            {\n                \"name\": \"R-Drive image\",\n                \"pattern\": \"**/*.arc\"\n            },\n            {\n                \"name\": \"Raw image\",\n                \"pattern\": \"**/*.dd\"\n            },\n            {\n                \"name\": \"Raw image, Vob InstantBackup\",\n                \"pattern\": \"**/*.001\"\n            },\n            {\n                \"name\": \"s25@once backup\",\n                \"pattern\": \"**/*.sm2\"\n            },\n            {\n                \"name\": \"SnapShot\",\n                \"pattern\": \"**/*.sn1\"\n            },\n            {\n                \"name\": \"SnapShot\",\n                \"pattern\": \"**/*.sna\"\n            },\n            {\n                \"name\": \"System Deployment Image\",\n                \"pattern\": \"**/*.sdi\"\n            },\n            {\n                \"name\": \"Tapeware\",\n                \"pattern\": \"**/*.bkf\"\n            },\n            {\n                \"name\": \"Toast\",\n                \"pattern\": \"**/*.p01\"\n            },\n            {\n                \"name\": \"Toast CD Image\",\n                \"pattern\": \"**/*.toast\"\n            },\n            {\n                \"name\": \"Uncompressed\",\n                \"pattern\": \"**/*.fcd\"\n            },\n            {\n                \"name\": \"Virtual Box Disk Image\",\n                \"pattern\": \"**/*.vdi\"\n            },\n            {\n                \"name\": \"Virtual CD\",\n                \"pattern\": \"**/*.000\"\n            },\n            {\n                \"name\": \"Virtual CD\",\n                \"pattern\": \"**/*.vc4\"\n            },\n            {\n                \"name\": \"Virtual Hard Disk\",\n                \"pattern\": \"**/*.vhd\"\n            },\n            {\n                \"name\": \"VMWare\",\n                \"pattern\": \"**/*.vmdk\"\n            },\n            {\n                \"name\": \"Vob InstantDisc\",\n                \"pattern\": \"**/*.vcd\"\n            },\n            {\n                \"name\": \"WinHex backup\",\n                \"pattern\": \"**/*.whx\"\n            },\n            {\n                \"name\": \"WinOnCD\",\n                \"pattern\": \"**/*.c2d\"\n            },\n            {\n                \"name\": \"WinOnCd\",\n                \"pattern\": \"**/*.cpj\"\n            },\n            {\n                \"name\": \"X-Ways file container\",\n                \"pattern\": \"**/*.ctr\"\n            }\n        ]\n    },\n    {\n        \"category\": \"E-mail\",\n        \"applications\": [\n            {\n                \"name\": \"AOL artificial ext. after sign. check\",\n                \"pattern\": \"**/*.pfc\"\n            },\n            {\n                \"name\": \"AOL Global Access Information\",\n                \"pattern\": \"**/*.org\"\n            },\n            {\n                \"name\": \"AOL, Pocomail, Forte Agent\",\n                \"pattern\": \"**/*.idx\"\n            },\n            {\n                \"name\": \"Contact\",\n                \"pattern\": \"**/*.contact\"\n            },\n            {\n                \"name\": \"E-mail message\",\n                \"pattern\": \"**/*.eml\"\n            },\n            {\n                \"name\": \"Eudora mailbox\",\n                \"pattern\": \"**/*.toc\"\n            },\n            {\n                \"name\": \"Eudora Mapping Mailbox\",\n                \"pattern\": \"**/*.pce\"\n            },\n            {\n                \"name\": \"Eudora, PocoMail, Barca\",\n                \"pattern\": \"**/*.mbx\"\n            },\n            {\n                \"name\": \"FoxMail, Lotus Notes\",\n                \"pattern\": \"**/*.box\"\n            },\n            {\n                \"name\": \"Generic mailbox\",\n                \"pattern\": \"**/*.mbox\"\n            },\n            {\n                \"name\": \"IncrediMail\",\n                \"pattern\": \"**/*.imb\"\n            },\n            {\n                \"name\": \"IncrediMail\",\n                \"pattern\": \"**/*.imh\"\n            },\n            {\n                \"name\": \"IncrediMail\",\n                \"pattern\": \"**/*.imm\"\n            },\n            {\n                \"name\": \"Kerio Connect\",\n                \"pattern\": \"**/store.fdb\"\n            },\n            {\n                \"name\": \"Lotus CCMail\",\n                \"pattern\": \"**/*.cca\"\n            },\n            {\n                \"name\": \"Lotus CCMail\",\n                \"pattern\": \"**/*.ccm\"\n            },\n            {\n                \"name\": \"Lotus Notes\",\n                \"pattern\": \"**/*.ns2\"\n            },\n            {\n                \"name\": \"Lotus Notes\",\n                \"pattern\": \"**/*.ns3\"\n            },\n            {\n                \"name\": \"Lotus Notes\",\n                \"pattern\": \"**/*.ns4\"\n            },\n            {\n                \"name\": \"Lotus Notes\",\n                \"pattern\": \"**/*.nsf\"\n            },\n            {\n                \"name\": \"Mail Summary\",\n                \"pattern\": \"**/*.msf\"\n            },\n            {\n                \"name\": \"Mailbag Assistant\",\n                \"pattern\": \"**/*.mbg\"\n            },\n            {\n                \"name\": \"MailMessage File\",\n                \"pattern\": \"**/*.mmf\"\n            },\n            {\n                \"name\": \"MS Exchange E-mail Database\",\n                \"pattern\": \"**/*.edb\"\n            },\n            {\n                \"name\": \"MS Outlook\",\n                \"pattern\": \"**/*.ost\"\n            },\n            {\n                \"name\": \"MS Outlook\",\n                \"pattern\": \"**/*.pst\"\n            },\n            {\n                \"name\": \"MS Outlook\",\n                \"pattern\": \"**/*.pst\"\n            },\n            {\n                \"name\": \"MS Outlook 2011 for Mac\",\n                \"pattern\": \"**/*.olk14msgsource\"\n            },\n            {\n                \"name\": \"MS Outlook address book\",\n                \"pattern\": \"**/*.olk\"\n            },\n            {\n                \"name\": \"MS Outlook template\",\n                \"pattern\": \"**/*.oft\"\n            },\n            {\n                \"name\": \"MS Outlook, PMMail\",\n                \"pattern\": \"**/*.msg\"\n            },\n            {\n                \"name\": \"Netscape\",\n                \"pattern\": \"**/*.snm\"\n            },\n            {\n                \"name\": \"Netscape address book\",\n                \"pattern\": \"**/*.ldif\"\n            },\n            {\n                \"name\": \"Opera\",\n                \"pattern\": \"**/*.mbs\"\n            },\n            {\n                \"name\": \"OSX Tiger Mail\",\n                \"pattern\": \"**/*.emlx\"\n            },\n            {\n                \"name\": \"Outlook address book\",\n                \"pattern\": \"**/*.pab\"\n            },\n            {\n                \"name\": \"Outlook AutoComplete\",\n                \"pattern\": \"**/*.nk2\"\n            },\n            {\n                \"name\": \"Outlook Express\",\n                \"pattern\": \"**/*.dbx\"\n            },\n            {\n                \"name\": \"Outlook rule\",\n                \"pattern\": \"**/*.rwz\"\n            },\n            {\n                \"name\": \"Pegasus\",\n                \"pattern\": \"**/*.cnm\"\n            },\n            {\n                \"name\": \"Pegasus\",\n                \"pattern\": \"**/*.cnr\"\n            },\n            {\n                \"name\": \"Pegasus\",\n                \"pattern\": \"**/*.pm\"\n            },\n            {\n                \"name\": \"Pegasus\",\n                \"pattern\": \"**/*.pmi\"\n            },\n            {\n                \"name\": \"Pegasus\",\n                \"pattern\": \"**/*.pmm\"\n            },\n            {\n                \"name\": \"Pegasus address book\",\n                \"pattern\": \"**/*.pmb\"\n            },\n            {\n                \"name\": \"Pegasus address book\",\n                \"pattern\": \"**/*.pmr\"\n            },\n            {\n                \"name\": \"Pocomail, Barca\",\n                \"pattern\": \"**/*.idb\"\n            },\n            {\n                \"name\": \"StarOffice Mail\",\n                \"pattern\": \"**/*.sdm\"\n            },\n            {\n                \"name\": \"StarOffice Mail document\",\n                \"pattern\": \"**/*.smd\"\n            },\n            {\n                \"name\": \"T-Online\",\n                \"pattern\": \"**/*.ldb\"\n            },\n            {\n                \"name\": \"T-Online, Kerio Connect\",\n                \"pattern\": \"**/*.fdb\"\n            },\n            {\n                \"name\": \"The Bat!\",\n                \"pattern\": \"**/*.msb\"\n            },\n            {\n                \"name\": \"The Bat!\",\n                \"pattern\": \"**/*.tbb\"\n            },\n            {\n                \"name\": \"The Bat!\",\n                \"pattern\": \"**/*.tbi\"\n            },\n            {\n                \"name\": \"vCard File\",\n                \"pattern\": \"**/*.vcf\"\n            },\n            {\n                \"name\": \"Windows compr. enh. metafile\",\n                \"pattern\": \"**/*.emz\"\n            },\n            {\n                \"name\": \"Windows Live Mail News Message\",\n                \"pattern\": \"**/*.nws\"\n            },\n            {\n                \"name\": \"Windows Mail\",\n                \"pattern\": \"**/*.oeaccount\"\n            },\n            {\n                \"name\": \"Windows Vista Mail\",\n                \"pattern\": \"**/*.msmessagestore\"\n            }\n        ]\n    },\n    {\n        \"category\": \"Fonts\",\n        \"applications\": [\n            {\n                \"name\": \"Adobe Font\",\n                \"pattern\": \"**/*.pfa\"\n            },\n            {\n                \"name\": \"Adobe Font\",\n                \"pattern\": \"**/*.pfb\"\n            },\n            {\n                \"name\": \"Adobe Font Metrics File Format\",\n                \"pattern\": \"**/*.afm\"\n            },\n            {\n                \"name\": \"composit font\",\n                \"pattern\": \"**/*.compositfont\"\n            },\n            {\n                \"name\": \"Font1\",\n                \"pattern\": \"**/*.pfm\"\n            },\n            {\n                \"name\": \"Font3\",\n                \"pattern\": \"**/*.gsf\"\n            },\n            {\n                \"name\": \"Mac Font\",\n                \"pattern\": \"**/*.sui\"\n            },\n            {\n                \"name\": \"Open Font\",\n                \"pattern\": \"**/*.otf\"\n            },\n            {\n                \"name\": \"PostScript printer font\",\n                \"pattern\": \"**/*.psf\"\n            },\n            {\n                \"name\": \"True Type Fonts\",\n                \"pattern\": \"**/*.ttf\"\n            },\n            {\n                \"name\": \"TrueType Compressed Font\",\n                \"pattern\": \"**/*.ttc\"\n            },\n            {\n                \"name\": \"UNIX font\",\n                \"pattern\": \"**/*.bdf\"\n            },\n            {\n                \"name\": \"Windows FON file format\",\n                \"pattern\": \"**/*.fon\"\n            },\n            {\n                \"name\": \"X-Windows Portable Compiled Font\",\n                \"pattern\": \"**/*.pcf\"\n            },\n            {\n                \"name\": \"XPCOM TypeLib\",\n                \"pattern\": \"**/*.xpt\"\n            }\n        ]\n    },\n    {\n        \"category\": \"Internet\",\n        \"applications\": [\n            {\n                \"name\": \"Active Server Page\",\n                \"pattern\": \"**/*.asp\"\n            },\n            {\n                \"name\": \"Apple finder Internet location\",\n                \"pattern\": \"**/*.webloc\"\n            },\n            {\n                \"name\": \"application/metalink+xml\",\n                \"pattern\": \"**/*.metalink\"\n            },\n            {\n                \"name\": \"ASP.NET\",\n                \"pattern\": \"**/*.axd\"\n            },\n            {\n                \"name\": \"ASP.NET theme\",\n                \"pattern\": \"**/*.skin\"\n            },\n            {\n                \"name\": \"Atom Syndication Format\",\n                \"pattern\": \"**/*.atom\"\n            },\n            {\n                \"name\": \"auto completion\",\n                \"pattern\": \"**/*.jsonp\"\n            },\n            {\n                \"name\": \"browser definitions\",\n                \"pattern\": \"**/*.browser\"\n            },\n            {\n                \"name\": \"Cascading Style Sheet\",\n                \"pattern\": \"**/*.css\"\n            },\n            {\n                \"name\": \"Common Gateway Interface script\",\n                \"pattern\": \"**/*.cgi\"\n            },\n            {\n                \"name\": \"Cookie\",\n                \"pattern\": \"**/*.cookie\"\n            },\n            {\n                \"name\": \"download by IE\",\n                \"pattern\": \"**/*.identifier\"\n            },\n            {\n                \"name\": \"Dynamic HTML\",\n                \"pattern\": \"**/*.dtml\"\n            },\n            {\n                \"name\": \"Firefox browser extension\",\n                \"pattern\": \"**/*.xpi\"\n            },\n            {\n                \"name\": \"Firefox session restore\",\n                \"pattern\": \"**/sessionrestore.js\"\n            },\n            {\n                \"name\": \"Flash Local Shared Object\",\n                \"pattern\": \"**/*.sol\"\n            },\n            {\n                \"name\": \"Generic handler\",\n                \"pattern\": \"**/*.ashx\"\n            },\n            {\n                \"name\": \"Global application class\",\n                \"pattern\": \"**/*.asax\"\n            },\n            {\n                \"name\": \"Google Earth\",\n                \"pattern\": \"**/*.kmz\"\n            },\n            {\n                \"name\": \"Google Earth Placemark\",\n                \"pattern\": \"**/*.kml\"\n            },\n            {\n                \"name\": \"HTML\",\n                \"pattern\": \"**/*.htm\"\n            },\n            {\n                \"name\": \"HTML\",\n                \"pattern\": \"**/*.html\"\n            },\n            {\n                \"name\": \"HTML\",\n                \"pattern\": \"**/*.phtml\"\n            },\n            {\n                \"name\": \"HTML\",\n                \"pattern\": \"**/*.shtml\"\n            },\n            {\n                \"name\": \"Hypertext Application\",\n                \"pattern\": \"**/*.hta\"\n            },\n            {\n                \"name\": \"IE session restore\",\n                \"pattern\": \"**/*.sessionrestore\"\n            },\n            {\n                \"name\": \"IE8 Last Browsing Session\",\n                \"pattern\": \"**/*.travellog\"\n            },\n            {\n                \"name\": \"Internet Explorer history/cache\",\n                \"pattern\": \"**/index.dat\"\n            },\n            {\n                \"name\": \"Internet Explorer shortcut\",\n                \"pattern\": \"**/*.url\"\n            },\n            {\n                \"name\": \"Internet Inquiry\",\n                \"pattern\": \"**/*.iqy\"\n            },\n            {\n                \"name\": \"Internet Location Service\",\n                \"pattern\": \"**/*.uls\"\n            },\n            {\n                \"name\": \"Java Web Archive\",\n                \"pattern\": \"**/*.war\"\n            },\n            {\n                \"name\": \"Java Web Start Launcher\",\n                \"pattern\": \"**/*.jnlp\"\n            },\n            {\n                \"name\": \"JavaScript\",\n                \"pattern\": \"**/*.js\"\n            },\n            {\n                \"name\": \"JavaScript Object Navigation\",\n                \"pattern\": \"**/*.json\"\n            },\n            {\n                \"name\": \"Macromedia Flash\",\n                \"pattern\": \"**/*.swc\"\n            },\n            {\n                \"name\": \"Macromedia Flash\",\n                \"pattern\": \"**/*.swf\"\n            },\n            {\n                \"name\": \"Macromedia Flash source\",\n                \"pattern\": \"**/*.fla\"\n            },\n            {\n                \"name\": \"Master page for web applications\",\n                \"pattern\": \"**/*.master\"\n            },\n            {\n                \"name\": \"Microsoft network shortcut\",\n                \"pattern\": \"**/*.mcc\"\n            },\n            {\n                \"name\": \"Mobile web form\",\n                \"pattern\": \"**/*.aspx\"\n            },\n            {\n                \"name\": \"Mozilla/Firefox browser history\",\n                \"pattern\": \"**/history.dat\"\n            },\n            {\n                \"name\": \"Mozilla/Firefox cookies\",\n                \"pattern\": \"**/cookies.txt\"\n            },\n            {\n                \"name\": \"MS Office Data Connection\",\n                \"pattern\": \"**/*.odc\"\n            },\n            {\n                \"name\": \"Netmeeting Whiteboard\",\n                \"pattern\": \"**/*.nmw\"\n            },\n            {\n                \"name\": \"newzBin USENET Index\",\n                \"pattern\": \"**/*.nbz\"\n            },\n            {\n                \"name\": \"Opera browser cache\",\n                \"pattern\": \"**/dcache4.url\"\n            },\n            {\n                \"name\": \"PHP script\",\n                \"pattern\": \"**/*.php\"\n            },\n            {\n                \"name\": \"PHP script\",\n                \"pattern\": \"**/*.php3\"\n            },\n            {\n                \"name\": \"PHP script\",\n                \"pattern\": \"**/*.php4\"\n            },\n            {\n                \"name\": \"precompiled JavaScript\",\n                \"pattern\": \"**/*.mfl\"\n            },\n            {\n                \"name\": \"QuickTime Media Link\",\n                \"pattern\": \"**/*.qtl\"\n            },\n            {\n                \"name\": \"Resource description framework\",\n                \"pattern\": \"**/*.rdf\"\n            },\n            {\n                \"name\": \"Rich Site Summary\",\n                \"pattern\": \"**/*.rss\"\n            },\n            {\n                \"name\": \"Silverlight\",\n                \"pattern\": \"**/*.xap\"\n            },\n            {\n                \"name\": \"Skype\",\n                \"pattern\": \"**/*.dbb\"\n            },\n            {\n                \"name\": \"Static discovery\",\n                \"pattern\": \"**/*.disco\"\n            },\n            {\n                \"name\": \"Synchronized Multimedia Integration Language\",\n                \"pattern\": \"**/*.smil\"\n            },\n            {\n                \"name\": \"TCL dynamic HTML\",\n                \"pattern\": \"**/*.thtml\"\n            },\n            {\n                \"name\": \"TCL dynamic HTML\",\n                \"pattern\": \"**/*.ttml\"\n            },\n            {\n                \"name\": \"Web configuration\",\n                \"pattern\": \"**/*.config\"\n            },\n            {\n                \"name\": \"Web page archive\",\n                \"pattern\": \"**/*.mht\"\n            },\n            {\n                \"name\": \"Web Point And Print File\",\n                \"pattern\": \"**/*.webpnp\"\n            },\n            {\n                \"name\": \"Web user control\",\n                \"pattern\": \"**/*.ascx\"\n            },\n            {\n                \"name\": \"Windows Backup Catalog\",\n                \"pattern\": \"**/*.wbcat\"\n            },\n            {\n                \"name\": \"Windows Remote Assistance\",\n                \"pattern\": \"**/*.msrcincident\"\n            },\n            {\n                \"name\": \"Wireless Markup Language\",\n                \"pattern\": \"**/*.wml\"\n            }\n        ]\n    },\n    {\n        \"category\": \"Mac OS X System Files\",\n        \"applications\": [\n            {\n                \"name\": \"Account login information\",\n                \"pattern\": \"**/state\"\n            },\n            {\n                \"name\": \"Autologin account password\",\n                \"pattern\": \"**/kcpassword\"\n            },\n            {\n                \"name\": \"Original user information\",\n                \"pattern\": \"**/applesetupdone\"\n            },\n            {\n                \"name\": \"OS X kernel log\",\n                \"pattern\": \"**/kernel.log\"\n            },\n            {\n                \"name\": \"OS X keychain\",\n                \"pattern\": \"**/keychain\"\n            },\n            {\n                \"name\": \"PList configuration\",\n                \"pattern\": \"**/plist\"\n            },\n            {\n                \"name\": \"Security event log\",\n                \"pattern\": \"**/secure.log\"\n            },\n            {\n                \"name\": \"System event log\",\n                \"pattern\": \"**/system.log\"\n            }\n        ]\n    },\n    {\n        \"category\": \"Misc Documents\",\n        \"applications\": [\n            {\n                \"name\": \"3ds Max Studio Max scene\",\n                \"pattern\": \"**/*.max\"\n            },\n            {\n                \"name\": \"ABBYY Software\",\n                \"pattern\": \"**/*.ffdata\"\n            },\n            {\n                \"name\": \"Access 2007 Database Template\",\n                \"pattern\": \"**/*.accdt\"\n            },\n            {\n                \"name\": \"Access project\",\n                \"pattern\": \"**/*.adp\"\n            },\n            {\n                \"name\": \"Acrobat\",\n                \"pattern\": \"**/*.xfdf\"\n            },\n            {\n                \"name\": \"Acrobat XML Data Package\",\n                \"pattern\": \"**/*.xdp\"\n            },\n            {\n                \"name\": \"Adobe Acrobat\",\n                \"pattern\": \"**/*.pdf\"\n            },\n            {\n                \"name\": \"Adobe Flex\",\n                \"pattern\": \"**/*.mxml\"\n            },\n            {\n                \"name\": \"Aldus PageMaker\",\n                \"pattern\": \"**/*.apd\"\n            },\n            {\n                \"name\": \"Alice\",\n                \"pattern\": \"**/*.a2w\"\n            },\n            {\n                \"name\": \"Apple iWork Keynote presentation\",\n                \"pattern\": \"**/*.key\"\n            },\n            {\n                \"name\": \"ArcMap GIS Project\",\n                \"pattern\": \"**/*.mxd\"\n            },\n            {\n                \"name\": \"Arena Model File\",\n                \"pattern\": \"**/*.doe\"\n            },\n            {\n                \"name\": \"Art Explosion Publisher Pro\",\n                \"pattern\": \"**/*.npp\"\n            },\n            {\n                \"name\": \"AutoRoute export\",\n                \"pattern\": \"**/*.axe\"\n            },\n            {\n                \"name\": \"Base64 encoded\",\n                \"pattern\": \"**/*.b64\"\n            },\n            {\n                \"name\": \"BibTeX\",\n                \"pattern\": \"**/*.bib\"\n            },\n            {\n                \"name\": \"BizTalk XML-Data Reduced Schema\",\n                \"pattern\": \"**/*.xdr\"\n            },\n            {\n                \"name\": \"BuzzLetter\",\n                \"pattern\": \"**/*.xcs\"\n            },\n            {\n                \"name\": \"Claris Work Office\",\n                \"pattern\": \"**/*.cws\"\n            },\n            {\n                \"name\": \"Click to DVD\",\n                \"pattern\": \"**/*.ctd\"\n            },\n            {\n                \"name\": \"Clicker\",\n                \"pattern\": \"**/*.clkx\"\n            },\n            {\n                \"name\": \"Clipart Collection Catalog\",\n                \"pattern\": \"**/*.mgc\"\n            },\n            {\n                \"name\": \"Comic Book Creator\",\n                \"pattern\": \"**/*.cbcx\"\n            },\n            {\n                \"name\": \"Compass and Ruler\",\n                \"pattern\": \"**/*.zir\"\n            },\n            {\n                \"name\": \"Cool 3D\",\n                \"pattern\": \"**/*.c3d\"\n            },\n            {\n                \"name\": \"Corel Painter Pattern\",\n                \"pattern\": \"**/*.pap\"\n            },\n            {\n                \"name\": \"Corel Presentation\",\n                \"pattern\": \"**/*.pqf\"\n            },\n            {\n                \"name\": \"Corel Presentation\",\n                \"pattern\": \"**/*.pqi\"\n            },\n            {\n                \"name\": \"Corel Presentation\",\n                \"pattern\": \"**/*.shw\"\n            },\n            {\n                \"name\": \"Corel Ventura Publisher\",\n                \"pattern\": \"**/*.vp\"\n            },\n            {\n                \"name\": \"Crystal Report\",\n                \"pattern\": \"**/*.rpt\"\n            },\n            {\n                \"name\": \"Design Gallery\",\n                \"pattern\": \"**/*.mpf\"\n            },\n            {\n                \"name\": \"diagram\",\n                \"pattern\": \"**/*.dia\"\n            },\n            {\n                \"name\": \"Easy CD Creator\",\n                \"pattern\": \"**/*.jwl\"\n            },\n            {\n                \"name\": \"EBook download description\",\n                \"pattern\": \"**/*.etd\"\n            },\n            {\n                \"name\": \"Entity-Relationship Diagram\",\n                \"pattern\": \"**/*.mer\"\n            },\n            {\n                \"name\": \"Family Tree Maker\",\n                \"pattern\": \"**/*.ftw\"\n            },\n            {\n                \"name\": \"FrameMaker Interchange Format\",\n                \"pattern\": \"**/*.mif\"\n            },\n            {\n                \"name\": \"Freehand drawing\",\n                \"pattern\": \"**/*.fh5\"\n            },\n            {\n                \"name\": \"Freehand drawing\",\n                \"pattern\": \"**/*.fh7\"\n            },\n            {\n                \"name\": \"Freehand drawing\",\n                \"pattern\": \"**/*.fh8\"\n            },\n            {\n                \"name\": \"GPS eXchange Format\",\n                \"pattern\": \"**/*.gpx\"\n            },\n            {\n                \"name\": \"HaaliReader\",\n                \"pattern\": \"**/*.fb2\"\n            },\n            {\n                \"name\": \"Harvard Graphics Presentation\",\n                \"pattern\": \"**/*.pr4\"\n            },\n            {\n                \"name\": \"Hierarchical Data Format\",\n                \"pattern\": \"**/*.hdf\"\n            },\n            {\n                \"name\": \"IBM Softcopy Reader PDF Extended Bookshelf File\",\n                \"pattern\": \"**/*.xks\"\n            },\n            {\n                \"name\": \"iCalendar\",\n                \"pattern\": \"**/*.ics\"\n            },\n            {\n                \"name\": \"iGrafx Process\",\n                \"pattern\": \"**/*.igx\"\n            },\n            {\n                \"name\": \"Information Card Store\",\n                \"pattern\": \"**/*.crds\"\n            },\n            {\n                \"name\": \"Interface Builder\",\n                \"pattern\": \"**/*.xib\"\n            },\n            {\n                \"name\": \"IPTC NewsML\",\n                \"pattern\": \"**/*.newsml\"\n            },\n            {\n                \"name\": \"ITI-SIM Model\",\n                \"pattern\": \"**/*.sim\"\n            },\n            {\n                \"name\": \"JasperReports\",\n                \"pattern\": \"**/*.jrxml\"\n            },\n            {\n                \"name\": \"Job Definition Format\",\n                \"pattern\": \"**/*.jdf\"\n            },\n            {\n                \"name\": \"KMyMoney\",\n                \"pattern\": \"**/*.kmy\"\n            },\n            {\n                \"name\": \"KPresenter\",\n                \"pattern\": \"**/*.kpr\"\n            },\n            {\n                \"name\": \"LaTeX\",\n                \"pattern\": \"**/*.latex\"\n            },\n            {\n                \"name\": \"Lotus Notes\",\n                \"pattern\": \"**/*.box\"\n            },\n            {\n                \"name\": \"Macromedia Design Notes\",\n                \"pattern\": \"**/*.mno\"\n            },\n            {\n                \"name\": \"Macromedia Flash Paper\",\n                \"pattern\": \"**/*.mfp\"\n            },\n            {\n                \"name\": \"Maple Worksheet\",\n                \"pattern\": \"**/*.mw\"\n            },\n            {\n                \"name\": \"MapPoint Map\",\n                \"pattern\": \"**/*.ptm\"\n            },\n            {\n                \"name\": \"Marble\",\n                \"pattern\": \"**/*.dgml\"\n            },\n            {\n                \"name\": \"Media Player XML/Media File\",\n                \"pattern\": \"**/*.prx\"\n            },\n            {\n                \"name\": \"Microsoft Office XML Data Source\",\n                \"pattern\": \"**/*.uxdc\"\n            },\n            {\n                \"name\": \"Microsoft Virtual PC settings\",\n                \"pattern\": \"**/*.vmc\"\n            },\n            {\n                \"name\": \"Microsoft Works Portfolio\",\n                \"pattern\": \"**/*.wsb\"\n            },\n            {\n                \"name\": \"MS eBook\",\n                \"pattern\": \"**/*.lit\"\n            },\n            {\n                \"name\": \"MS Help 2.0\",\n                \"pattern\": \"**/*.hxi\"\n            },\n            {\n                \"name\": \"MS Help 2.0\",\n                \"pattern\": \"**/*.its\"\n            },\n            {\n                \"name\": \"MS Office Binder\",\n                \"pattern\": \"**/*.obd\"\n            },\n            {\n                \"name\": \"MS Office Binder Template\",\n                \"pattern\": \"**/*.obt\"\n            },\n            {\n                \"name\": \"MS Office index\",\n                \"pattern\": \"**/index.btr\"\n            },\n            {\n                \"name\": \"MS OneNote\",\n                \"pattern\": \"**/*.one\"\n            },\n            {\n                \"name\": \"MS PowerPoint\",\n                \"pattern\": \"**/*.ppg\"\n            },\n            {\n                \"name\": \"MS PowerPoint\",\n                \"pattern\": \"**/*.pps\"\n            },\n            {\n                \"name\": \"MS PowerPoint\",\n                \"pattern\": \"**/*.ppt\"\n            },\n            {\n                \"name\": \"MS PowerPoint 2007\",\n                \"pattern\": \"**/*.ppsx\"\n            },\n            {\n                \"name\": \"MS PowerPoint 2007\",\n                \"pattern\": \"**/*.pptx\"\n            },\n            {\n                \"name\": \"MS PowerPoint Add-in\",\n                \"pattern\": \"**/*.ppa\"\n            },\n            {\n                \"name\": \"MS PowerPoint Add-in\",\n                \"pattern\": \"**/*.ppam\"\n            },\n            {\n                \"name\": \"MS PowerPoint Template\",\n                \"pattern\": \"**/*.pot\"\n            },\n            {\n                \"name\": \"MS Project\",\n                \"pattern\": \"**/*.mpp\"\n            },\n            {\n                \"name\": \"MS Project Template\",\n                \"pattern\": \"**/*.mpt\"\n            },\n            {\n                \"name\": \"MS Works Wizard\",\n                \"pattern\": \"**/*.wws\"\n            },\n            {\n                \"name\": \"MSN Messenger saved contact list\",\n                \"pattern\": \"**/*.ctt\"\n            },\n            {\n                \"name\": \"NET XML Resource template\",\n                \"pattern\": \"**/*.resx\"\n            },\n            {\n                \"name\": \"OASIS document\",\n                \"pattern\": \"**/*.docbook\"\n            },\n            {\n                \"name\": \"OLE2 compound\",\n                \"pattern\": \"**/*.ole2\"\n            },\n            {\n                \"name\": \"OmniForm\",\n                \"pattern\": \"**/*.ofm\"\n            },\n            {\n                \"name\": \"opendocument textmaster\",\n                \"pattern\": \"**/*.odm\"\n            },\n            {\n                \"name\": \"OpenOffice gallery\",\n                \"pattern\": \"**/*.sdv\"\n            },\n            {\n                \"name\": \"OpenOffice2 Base\",\n                \"pattern\": \"**/*.odb\"\n            },\n            {\n                \"name\": \"OpenOffice2 Draw\",\n                \"pattern\": \"**/*.odg\"\n            },\n            {\n                \"name\": \"OpenOffice2 Impress\",\n                \"pattern\": \"**/*.odp\"\n            },\n            {\n                \"name\": \"OpenOffice2 Math\",\n                \"pattern\": \"**/*.odf\"\n            },\n            {\n                \"name\": \"OrCAD schematic capture backup\",\n                \"pattern\": \"**/*.dbk\"\n            },\n            {\n                \"name\": \"Outline Processor Markup Language\",\n                \"pattern\": \"**/*.opml\"\n            },\n            {\n                \"name\": \"Outlook address book\",\n                \"pattern\": \"**/*.oab\"\n            },\n            {\n                \"name\": \"Outlook address book\",\n                \"pattern\": \"**/*.wab\"\n            },\n            {\n                \"name\": \"Pagemaker\",\n                \"pattern\": \"**/*.p65\"\n            },\n            {\n                \"name\": \"PageMaker\",\n                \"pattern\": \"**/*.pm\"\n            },\n            {\n                \"name\": \"PageMaker\",\n                \"pattern\": \"**/*.pm3\"\n            },\n            {\n                \"name\": \"PageMaker\",\n                \"pattern\": \"**/*.pm4\"\n            },\n            {\n                \"name\": \"PageMaker\",\n                \"pattern\": \"**/*.pm5\"\n            },\n            {\n                \"name\": \"PageMaker\",\n                \"pattern\": \"**/*.pm6\"\n            },\n            {\n                \"name\": \"Palm address book\",\n                \"pattern\": \"**/*.aba\"\n            },\n            {\n                \"name\": \"Palm Query Application\",\n                \"pattern\": \"**/*.pqa\"\n            },\n            {\n                \"name\": \"PC Installer Control\",\n                \"pattern\": \"**/*.ctc\"\n            },\n            {\n                \"name\": \"Picasa Collage File\",\n                \"pattern\": \"**/*.cxf\"\n            },\n            {\n                \"name\": \"Pixclscript\",\n                \"pattern\": \"**/*.pxl2\"\n            },\n            {\n                \"name\": \"playlist\",\n                \"pattern\": \"**/*.m3u\"\n            },\n            {\n                \"name\": \"Postscript\",\n                \"pattern\": \"**/*.ps\"\n            },\n            {\n                \"name\": \"Precision Graphics Markup Language\",\n                \"pattern\": \"**/*.pgml\"\n            },\n            {\n                \"name\": \"Print Shop Sign\",\n                \"pattern\": \"**/*.sig\"\n            },\n            {\n                \"name\": \"Property List\",\n                \"pattern\": \"**/*.plist\"\n            },\n            {\n                \"name\": \"Quark XPress\",\n                \"pattern\": \"**/*.qxd\"\n            },\n            {\n                \"name\": \"RIO Designer Pro Scene\",\n                \"pattern\": \"**/*.wsc\"\n            },\n            {\n                \"name\": \"SigmaPlot Workbook\",\n                \"pattern\": \"**/*.jnb\"\n            },\n            {\n                \"name\": \"Softmaker Office Presentations\",\n                \"pattern\": \"**/*.prd\"\n            },\n            {\n                \"name\": \"Solid Edge Draft Document\",\n                \"pattern\": \"**/*.dft\"\n            },\n            {\n                \"name\": \"SolidWorks assembly document\",\n                \"pattern\": \"**/*.sldasm\"\n            },\n            {\n                \"name\": \"SolidWorks part file\",\n                \"pattern\": \"**/*.sldprt\"\n            },\n            {\n                \"name\": \"SPSS output document\",\n                \"pattern\": \"**/*.spo\"\n            },\n            {\n                \"name\": \"StarCalc 5\",\n                \"pattern\": \"**/*.sdc\"\n            },\n            {\n                \"name\": \"StarChart document\",\n                \"pattern\": \"**/*.sds\"\n            },\n            {\n                \"name\": \"StarOffice drawing\",\n                \"pattern\": \"**/*.std\"\n            },\n            {\n                \"name\": \"StarOffice drawing\",\n                \"pattern\": \"**/*.sxd\"\n            },\n            {\n                \"name\": \"StarOffice presentation\",\n                \"pattern\": \"**/*.sdd\"\n            },\n            {\n                \"name\": \"StarOffice presentation\",\n                \"pattern\": \"**/*.sti\"\n            },\n            {\n                \"name\": \"StarOffice presentation\",\n                \"pattern\": \"**/*.sxi\"\n            },\n            {\n                \"name\": \"StarOffice template\",\n                \"pattern\": \"**/*.vor\"\n            },\n            {\n                \"name\": \"StormFront skin\",\n                \"pattern\": \"**/*.skn\"\n            },\n            {\n                \"name\": \"Street Atlas Transfer File\",\n                \"pattern\": \"**/*.dmt\"\n            },\n            {\n                \"name\": \"Structured Fax Format/Fritz Fax\",\n                \"pattern\": \"**/*.sff\"\n            },\n            {\n                \"name\": \"Tex/LaTeX\",\n                \"pattern\": \"**/*.tex\"\n            },\n            {\n                \"name\": \"UU encoded\",\n                \"pattern\": \"**/*.uue\"\n            },\n            {\n                \"name\": \"vCalendar\",\n                \"pattern\": \"**/*.vcs\"\n            },\n            {\n                \"name\": \"Ventura/MS Publisher\",\n                \"pattern\": \"**/*.pub\"\n            },\n            {\n                \"name\": \"Visio document\",\n                \"pattern\": \"**/*.vsd\"\n            },\n            {\n                \"name\": \"Visio template\",\n                \"pattern\": \"**/*.vst\"\n            },\n            {\n                \"name\": \"Windows Media Player Skin\",\n                \"pattern\": \"**/*.wms\"\n            },\n            {\n                \"name\": \"Windows Presentation Foundation\",\n                \"pattern\": \"**/*.xaml\"\n            },\n            {\n                \"name\": \"Windows visual stylesheet\",\n                \"pattern\": \"**/*.man\"\n            },\n            {\n                \"name\": \"Windows visual stylesheet\",\n                \"pattern\": \"**/*.manifest\"\n            },\n            {\n                \"name\": \"WordPerfect address book\",\n                \"pattern\": \"**/*.abx\"\n            },\n            {\n                \"name\": \"XML Bookmark Exchange Language\",\n                \"pattern\": \"**/*.xbel\"\n            },\n            {\n                \"name\": \"XML Form in XFDL Format\",\n                \"pattern\": \"**/*.xfdl\"\n            },\n            {\n                \"name\": \"XML Metadata Interchange Format\",\n                \"pattern\": \"**/*.xmi\"\n            },\n            {\n                \"name\": \"XML Paper Specification\",\n                \"pattern\": \"**/*.xps\"\n            },\n            {\n                \"name\": \"XML Schema File\",\n                \"pattern\": \"**/*.xdl\"\n            },\n            {\n                \"name\": \"XPS document\",\n                \"pattern\": \"**/*.dwfx\"\n            },\n            {\n                \"name\": \"XSL Formatting Objects\",\n                \"pattern\": \"**/*.fo\"\n            },\n            {\n                \"name\": \"XSPF Playlist\",\n                \"pattern\": \"**/*.xspf\"\n            }\n        ]\n    },\n    {\n        \"category\": \"P2P\",\n        \"applications\": [\n            {\n                \"name\": \"BitTorrent\",\n                \"pattern\": \"**/*.torrent\"\n            },\n            {\n                \"name\": \"eMule\",\n                \"pattern\": \"**/*.met\"\n            },\n            {\n                \"name\": \"FastTrack (Kazaa, Grokster, iMesh)\",\n                \"pattern\": \"**/data1024.dbb\"\n            },\n            {\n                \"name\": \"FastTrack (Kazaa, Grokster, iMesh)\",\n                \"pattern\": \"**/data2048.dbb\"\n            },\n            {\n                \"name\": \"FastTrack (Kazaa, Grokster, iMesh)\",\n                \"pattern\": \"**/data256.dbb\"\n            },\n            {\n                \"name\": \"IRC chat\",\n                \"pattern\": \"**/*.cha\"\n            },\n            {\n                \"name\": \"IRC chat\",\n                \"pattern\": \"**/*.chat\"\n            },\n            {\n                \"name\": \"Warez description\",\n                \"pattern\": \"**/*.nfo2\"\n            }\n        ]\n    },\n    {\n        \"category\": \"Pictures\",\n        \"applications\": [\n            {\n                \"name\": \"Ability Photopaint Image\",\n                \"pattern\": \"**/*.apx\"\n            },\n            {\n                \"name\": \"Adobe Illustrator\",\n                \"pattern\": \"**/*.ai\"\n            },\n            {\n                \"name\": \"Alias Image File\",\n                \"pattern\": \"**/*.pix\"\n            },\n            {\n                \"name\": \"Amiga FF\",\n                \"pattern\": \"**/*.iff\"\n            },\n            {\n                \"name\": \"animated cursor\",\n                \"pattern\": \"**/*.ani\"\n            },\n            {\n                \"name\": \"AOL\",\n                \"pattern\": \"**/*.art\"\n            },\n            {\n                \"name\": \"Apollo HDRU\",\n                \"pattern\": \"**/*.hdr\"\n            },\n            {\n                \"name\": \"AutoCAD\",\n                \"pattern\": \"**/*.dwg\"\n            },\n            {\n                \"name\": \"AutoCAD\",\n                \"pattern\": \"**/*.dxf\"\n            },\n            {\n                \"name\": \"Autodesk Animator\",\n                \"pattern\": \"**/*.flc\"\n            },\n            {\n                \"name\": \"Bitmap\",\n                \"pattern\": \"**/*.bmp\"\n            },\n            {\n                \"name\": \"CALS Raster\",\n                \"pattern\": \"**/*.gp4\"\n            },\n            {\n                \"name\": \"Canon EOS\",\n                \"pattern\": \"**/*.cr2\"\n            },\n            {\n                \"name\": \"Canon Powershot\",\n                \"pattern\": \"**/*.crw\"\n            },\n            {\n                \"name\": \"Casio QV 100\",\n                \"pattern\": \"**/*.cam\"\n            },\n            {\n                \"name\": \"Chinon ES 1000\",\n                \"pattern\": \"**/*.cmt\"\n            },\n            {\n                \"name\": \"COLLADA 3D Digital Asset\",\n                \"pattern\": \"**/*.dae\"\n            },\n            {\n                \"name\": \"Computer Graphics Metafile\",\n                \"pattern\": \"**/*.cgm\"\n            },\n            {\n                \"name\": \"Corel Draw\",\n                \"pattern\": \"**/*.cdr\"\n            },\n            {\n                \"name\": \"Corel OLE\",\n                \"pattern\": \"**/*.wpg\"\n            },\n            {\n                \"name\": \"Deluxe Paint\",\n                \"pattern\": \"**/*.lbm\"\n            },\n            {\n                \"name\": \"DesignCAD Drawing\",\n                \"pattern\": \"**/*.dcd\"\n            },\n            {\n                \"name\": \"Dicom\",\n                \"pattern\": \"**/*.acr\"\n            },\n            {\n                \"name\": \"Dicom\",\n                \"pattern\": \"**/*.dc3\"\n            },\n            {\n                \"name\": \"Digital F/X\",\n                \"pattern\": \"**/*.tdim\"\n            },\n            {\n                \"name\": \"digital negative\",\n                \"pattern\": \"**/*.dng\"\n            },\n            {\n                \"name\": \"Dr. Halo, Advanced Art Studio\",\n                \"pattern\": \"**/*.pic\"\n            },\n            {\n                \"name\": \"Dr. Halo, BPM Studio cue points\",\n                \"pattern\": \"**/*.cut\"\n            },\n            {\n                \"name\": \"DrawPage1.0 Drawing\",\n                \"pattern\": \"**/*.pag\"\n            },\n            {\n                \"name\": \"Electric Image\",\n                \"pattern\": \"**/*.ei\"\n            },\n            {\n                \"name\": \"Encapsulated postscript\",\n                \"pattern\": \"**/*.eps\"\n            },\n            {\n                \"name\": \"Fax image\",\n                \"pattern\": \"**/*.jbg\"\n            },\n            {\n                \"name\": \"Fax image\",\n                \"pattern\": \"**/*.jbig\"\n            },\n            {\n                \"name\": \"FaxView Document\",\n                \"pattern\": \"**/*.awd\"\n            },\n            {\n                \"name\": \"FlashPix Bitmap\",\n                \"pattern\": \"**/*.fpx\"\n            },\n            {\n                \"name\": \"Fuji S2 raw\",\n                \"pattern\": \"**/*.raf\"\n            },\n            {\n                \"name\": \"Gimp bitmap\",\n                \"pattern\": \"**/*.xcf\"\n            },\n            {\n                \"name\": \"Gimp Brush\",\n                \"pattern\": \"**/*.gbr\"\n            },\n            {\n                \"name\": \"Graphic Interchange Format\",\n                \"pattern\": \"**/*.gif\"\n            },\n            {\n                \"name\": \"GraphWorX32\",\n                \"pattern\": \"**/*.gdf\"\n            },\n            {\n                \"name\": \"Icon\",\n                \"pattern\": \"**/*.ico\"\n            },\n            {\n                \"name\": \"Icon Library\",\n                \"pattern\": \"**/*.icl\"\n            },\n            {\n                \"name\": \"Image Magick File\",\n                \"pattern\": \"**/*.mif\"\n            },\n            {\n                \"name\": \"Intergraph Format\",\n                \"pattern\": \"**/*.cit\"\n            },\n            {\n                \"name\": \"IP Lab\",\n                \"pattern\": \"**/*.ipl\"\n            },\n            {\n                \"name\": \"iPod Photo Thumbnails\",\n                \"pattern\": \"**/*.ithmb\"\n            },\n            {\n                \"name\": \"JPEG\",\n                \"pattern\": \"**/*.jfif\"\n            },\n            {\n                \"name\": \"JPEG\",\n                \"pattern\": \"**/*.jpe\"\n            },\n            {\n                \"name\": \"JPEG\",\n                \"pattern\": \"**/*.jpeg\"\n            },\n            {\n                \"name\": \"JPEG\",\n                \"pattern\": \"**/*.jpg\"\n            },\n            {\n                \"name\": \"JPEG 2000\",\n                \"pattern\": \"**/*.j2k\"\n            },\n            {\n                \"name\": \"JPEG 2000\",\n                \"pattern\": \"**/*.jp2\"\n            },\n            {\n                \"name\": \"JPEG 2000\",\n                \"pattern\": \"**/*.jpx\"\n            },\n            {\n                \"name\": \"Kodak Cineon\",\n                \"pattern\": \"**/*.cin\"\n            },\n            {\n                \"name\": \"Kodak DC120\",\n                \"pattern\": \"**/*.kdc\"\n            },\n            {\n                \"name\": \"Kodak DC25\",\n                \"pattern\": \"**/*.k25\"\n            },\n            {\n                \"name\": \"Kodak Photo CD\",\n                \"pattern\": \"**/*.pcd\"\n            },\n            {\n                \"name\": \"Kodak Pro Digital RAW\",\n                \"pattern\": \"**/*.dcr\"\n            },\n            {\n                \"name\": \"Konica camera file\",\n                \"pattern\": \"**/*.kqp\"\n            },\n            {\n                \"name\": \"Lurawave\",\n                \"pattern\": \"**/*.ldf\"\n            },\n            {\n                \"name\": \"Mac icon\",\n                \"pattern\": \"**/*.icns\"\n            },\n            {\n                \"name\": \"MacDraft drawing\",\n                \"pattern\": \"**/*.mdd\"\n            },\n            {\n                \"name\": \"MacDraw\",\n                \"pattern\": \"**/*.drw\"\n            },\n            {\n                \"name\": \"Macintosh\",\n                \"pattern\": \"**/*.pict2\"\n            },\n            {\n                \"name\": \"Macintosh Quickdraw\",\n                \"pattern\": \"**/*.pct\"\n            },\n            {\n                \"name\": \"Macintosh Quickdraw\",\n                \"pattern\": \"**/*.pict\"\n            },\n            {\n                \"name\": \"Media Player Skin\",\n                \"pattern\": \"**/*.wmz\"\n            },\n            {\n                \"name\": \"MGI PhotoSuite II/III/4 Project\",\n                \"pattern\": \"**/*.pzp\"\n            },\n            {\n                \"name\": \"Micrografx Picture Publisher\",\n                \"pattern\": \"**/*.ppf\"\n            },\n            {\n                \"name\": \"Microsoft Picture It!\",\n                \"pattern\": \"**/*.mix\"\n            },\n            {\n                \"name\": \"Minolta DiMAGA raw\",\n                \"pattern\": \"**/*.mrw\"\n            },\n            {\n                \"name\": \"MS Office Document Imaging\",\n                \"pattern\": \"**/*.mdi\"\n            },\n            {\n                \"name\": \"Mutiple Network Graphics\",\n                \"pattern\": \"**/*.mng\"\n            },\n            {\n                \"name\": \"Nikon raw\",\n                \"pattern\": \"**/*.mos\"\n            },\n            {\n                \"name\": \"Nikon raw\",\n                \"pattern\": \"**/*.nef\"\n            },\n            {\n                \"name\": \"Olympus raw\",\n                \"pattern\": \"**/*.orf\"\n            },\n            {\n                \"name\": \"Open Image Library\",\n                \"pattern\": \"**/*.oil\"\n            },\n            {\n                \"name\": \"OS/2 Bitmap\",\n                \"pattern\": \"**/*.bga\"\n            },\n            {\n                \"name\": \"Paint Shop Pro\",\n                \"pattern\": \"**/*.psp\"\n            },\n            {\n                \"name\": \"Paint Shop Pro crowser cache\",\n                \"pattern\": \"**/*.jbf\"\n            },\n            {\n                \"name\": \"Palm Pilot\",\n                \"pattern\": \"**/*.pbd\"\n            },\n            {\n                \"name\": \"Pentax\",\n                \"pattern\": \"**/*.pef\"\n            },\n            {\n                \"name\": \"Photo Filtre Studio\",\n                \"pattern\": \"**/*.pfi\"\n            },\n            {\n                \"name\": \"PhotoImpact Graphic\",\n                \"pattern\": \"**/*.ufo\"\n            },\n            {\n                \"name\": \"PhotoPlus Native Format\",\n                \"pattern\": \"**/*.spp\"\n            },\n            {\n                \"name\": \"Photoshop drawing\",\n                \"pattern\": \"**/*.psd\"\n            },\n            {\n                \"name\": \"Picture Gear Pocket\",\n                \"pattern\": \"**/*.prc\"\n            },\n            {\n                \"name\": \"Pixar picture\",\n                \"pattern\": \"**/*.pxr\"\n            },\n            {\n                \"name\": \"Pixar Picture File\",\n                \"pattern\": \"**/*.picio\"\n            },\n            {\n                \"name\": \"Pixar Picture File\",\n                \"pattern\": \"**/*.pixar\"\n            },\n            {\n                \"name\": \"Pixibox\",\n                \"pattern\": \"**/*.pxb\"\n            },\n            {\n                \"name\": \"Portable GrayMap graphic\",\n                \"pattern\": \"**/*.pgm\"\n            },\n            {\n                \"name\": \"Portable Image\",\n                \"pattern\": \"**/*.pbm\"\n            },\n            {\n                \"name\": \"Portable image\",\n                \"pattern\": \"**/*.pnm\"\n            },\n            {\n                \"name\": \"Portable image\",\n                \"pattern\": \"**/*.ppm\"\n            },\n            {\n                \"name\": \"Portable image\",\n                \"pattern\": \"**/*.rpgm\"\n            },\n            {\n                \"name\": \"Portable Network Graphics\",\n                \"pattern\": \"**/*.png\"\n            },\n            {\n                \"name\": \"QRT ray rracer\",\n                \"pattern\": \"**/*.qrt\"\n            },\n            {\n                \"name\": \"QuickTime image\",\n                \"pattern\": \"**/*.qti\"\n            },\n            {\n                \"name\": \"QuickTime image\",\n                \"pattern\": \"**/*.qtif\"\n            },\n            {\n                \"name\": \"Raw\",\n                \"pattern\": \"**/*.grey\"\n            },\n            {\n                \"name\": \"Raw\",\n                \"pattern\": \"**/*.gry\"\n            },\n            {\n                \"name\": \"Raw\",\n                \"pattern\": \"**/*.raw\"\n            },\n            {\n                \"name\": \"Red Storm\",\n                \"pattern\": \"**/*.rsb\"\n            },\n            {\n                \"name\": \"Ricoh digital camera\",\n                \"pattern\": \"**/*.j6i\"\n            },\n            {\n                \"name\": \"Scalable Vector Graphics\",\n                \"pattern\": \"**/*.svg\"\n            },\n            {\n                \"name\": \"Seattle Film Works\",\n                \"pattern\": \"**/*.sfw\"\n            },\n            {\n                \"name\": \"Sega SG 1 Digi\",\n                \"pattern\": \"**/*.sj1\"\n            },\n            {\n                \"name\": \"Sigma RAW\",\n                \"pattern\": \"**/*.x3f\"\n            },\n            {\n                \"name\": \"Silicon Graphic RGB\",\n                \"pattern\": \"**/*.iris\"\n            },\n            {\n                \"name\": \"Silicon Graphics\",\n                \"pattern\": \"**/*.rgb\"\n            },\n            {\n                \"name\": \"Silicon Graphics\",\n                \"pattern\": \"**/*.sgi\"\n            },\n            {\n                \"name\": \"Silicon Graphics RGB\",\n                \"pattern\": \"**/*.bw\"\n            },\n            {\n                \"name\": \"Softimage\",\n                \"pattern\": \"**/*.si\"\n            },\n            {\n                \"name\": \"Sony DSC F828\",\n                \"pattern\": \"**/*.srf\"\n            },\n            {\n                \"name\": \"Sony DSC-F1\",\n                \"pattern\": \"**/*.pmp\"\n            },\n            {\n                \"name\": \"Sony PS2\",\n                \"pattern\": \"**/*.tm2\"\n            },\n            {\n                \"name\": \"StarOffice Drawing\",\n                \"pattern\": \"**/*.sda\"\n            },\n            {\n                \"name\": \"Sun icon\",\n                \"pattern\": \"**/*.icon\"\n            },\n            {\n                \"name\": \"Sun raster\",\n                \"pattern\": \"**/*.ras\"\n            },\n            {\n                \"name\": \"Sun raster\",\n                \"pattern\": \"**/*.sun\"\n            },\n            {\n                \"name\": \"Tagged Image Format\",\n                \"pattern\": \"**/*.tif\"\n            },\n            {\n                \"name\": \"Tagged Image Format\",\n                \"pattern\": \"**/*.tiff\"\n            },\n            {\n                \"name\": \"Tagged Image Format\",\n                \"pattern\": \"**/*.tim\"\n            },\n            {\n                \"name\": \"Thumbnail database\",\n                \"pattern\": \"**/thumbs.db\"\n            },\n            {\n                \"name\": \"Truevision Targa\",\n                \"pattern\": \"**/*.bpx\"\n            },\n            {\n                \"name\": \"Truevision Targa\",\n                \"pattern\": \"**/*.ivb\"\n            },\n            {\n                \"name\": \"Truevision Targa\",\n                \"pattern\": \"**/*.targa\"\n            },\n            {\n                \"name\": \"Truevision Targa\",\n                \"pattern\": \"**/*.tga\"\n            },\n            {\n                \"name\": \"Truevision Targa\",\n                \"pattern\": \"**/*.tga\"\n            },\n            {\n                \"name\": \"Turbo CAD\",\n                \"pattern\": \"**/*.tcw\"\n            },\n            {\n                \"name\": \"Vista\",\n                \"pattern\": \"**/*.vst\"\n            },\n            {\n                \"name\": \"Windows cursor\",\n                \"pattern\": \"**/*.cur\"\n            },\n            {\n                \"name\": \"Windows device-indep. bitmap\",\n                \"pattern\": \"**/*.dib\"\n            },\n            {\n                \"name\": \"Windows enhanced metafile\",\n                \"pattern\": \"**/*.emf\"\n            },\n            {\n                \"name\": \"Windows Metafile\",\n                \"pattern\": \"**/*.wmf\"\n            },\n            {\n                \"name\": \"WinFAX\",\n                \"pattern\": \"**/*.fxd\"\n            },\n            {\n                \"name\": \"WinFAX\",\n                \"pattern\": \"**/*.fxm\"\n            },\n            {\n                \"name\": \"WinFAX\",\n                \"pattern\": \"**/*.fxo\"\n            },\n            {\n                \"name\": \"WinFAX\",\n                \"pattern\": \"**/*.fxs\"\n            },\n            {\n                \"name\": \"WinFAX\",\n                \"pattern\": \"**/*.wfx\"\n            },\n            {\n                \"name\": \"Wireless Bitmap\",\n                \"pattern\": \"**/*.wbmp\"\n            },\n            {\n                \"name\": \"X11 Bitmap\",\n                \"pattern\": \"**/*.bm\"\n            },\n            {\n                \"name\": \"X11 bitmap\",\n                \"pattern\": \"**/*.xbm\"\n            },\n            {\n                \"name\": \"X11 Pixmap\",\n                \"pattern\": \"**/*.pm\"\n            },\n            {\n                \"name\": \"X11 Pixmap\",\n                \"pattern\": \"**/*.xpm\"\n            },\n            {\n                \"name\": \"XML for Visio Drawing File\",\n                \"pattern\": \"**/*.vdx\"\n            },\n            {\n                \"name\": \"YUV 16-bit interleaved\",\n                \"pattern\": \"**/*.yuv\"\n            },\n            {\n                \"name\": \"ZSoft Paintbrush\",\n                \"pattern\": \"**/*.pcx\"\n            },\n            {\n                \"name\": \"Zsoft Publisher\",\n                \"pattern\": \"**/*.dcx\"\n            }\n        ]\n    },\n    {\n        \"category\": \"Plain Text\",\n        \"applications\": [\n            {\n                \"name\": \"7-ASCII, Unix LF\",\n                \"pattern\": \"**/*.ascii_unix\"\n            },\n            {\n                \"name\": \"7-bit ASCII\",\n                \"pattern\": \"**/*.ascii\"\n            },\n            {\n                \"name\": \"Text\",\n                \"pattern\": \"**/*.txt\"\n            },\n            {\n                \"name\": \"Unicode text\",\n                \"pattern\": \"**/*.utf16\"\n            },\n            {\n                \"name\": \"Unicode text\",\n                \"pattern\": \"**/*.utf16be\"\n            }\n        ]\n    },\n    {\n        \"category\": \"Programs\",\n        \"applications\": [\n            {\n                \"name\": \"16-bit Dynamic-Link Library\",\n                \"pattern\": \"**/*.dll16\"\n            },\n            {\n                \"name\": \"16-bit executable\",\n                \"pattern\": \"**/*.exe16\"\n            },\n            {\n                \"name\": \"64-bit Dynamic-Link Library\",\n                \"pattern\": \"**/*.dll64\"\n            },\n            {\n                \"name\": \"Access Wizard Template\",\n                \"pattern\": \"**/*.mdz\"\n            },\n            {\n                \"name\": \"ActiveX, Visual Basic 5 Active Document\",\n                \"pattern\": \"**/*.vbd\"\n            },\n            {\n                \"name\": \"Adobe Integrated Runtime\",\n                \"pattern\": \"**/*.air\"\n            },\n            {\n                \"name\": \"amd64 executable\",\n                \"pattern\": \"**/*.elf3\"\n            },\n            {\n                \"name\": \"AppleScript\",\n                \"pattern\": \"**/*.scpt\"\n            },\n            {\n                \"name\": \"Application manifest\",\n                \"pattern\": \"**/*.application\"\n            },\n            {\n                \"name\": \"Aux. help file\",\n                \"pattern\": \"**/*.gid\"\n            },\n            {\n                \"name\": \"AWK Script\",\n                \"pattern\": \"**/*.awk\"\n            },\n            {\n                \"name\": \"C-64/C-128 program\",\n                \"pattern\": \"**/*.prg\"\n            },\n            {\n                \"name\": \"Compiled HTML\",\n                \"pattern\": \"**/*.chm\"\n            },\n            {\n                \"name\": \"Compiled Python script\",\n                \"pattern\": \"**/*.pyc\"\n            },\n            {\n                \"name\": \"Compiled Python script\",\n                \"pattern\": \"**/*.pyo\"\n            },\n            {\n                \"name\": \"CPM/DOS/Windows script\",\n                \"pattern\": \"**/*.bat\"\n            },\n            {\n                \"name\": \"DOS executable\",\n                \"pattern\": \"**/*.com\"\n            },\n            {\n                \"name\": \"DOS overlay\",\n                \"pattern\": \"**/*.ovl\"\n            },\n            {\n                \"name\": \"Driver\",\n                \"pattern\": \"**/*.drv\"\n            },\n            {\n                \"name\": \"Dynamic-Link Library\",\n                \"pattern\": \"**/*.dll\"\n            },\n            {\n                \"name\": \"Emacs Lisp\",\n                \"pattern\": \"**/*.el\"\n            },\n            {\n                \"name\": \"Emacs Lisp\",\n                \"pattern\": \"**/*.elc\"\n            },\n            {\n                \"name\": \"Executable\",\n                \"pattern\": \"**/*.exe\"\n            },\n            {\n                \"name\": \"Executable file manifest\",\n                \"pattern\": \"**/*.manifest\"\n            },\n            {\n                \"name\": \"Help\",\n                \"pattern\": \"**/*.hlp\"\n            },\n            {\n                \"name\": \"Initialization\",\n                \"pattern\": \"**/*.ini\"\n            },\n            {\n                \"name\": \"Installation program\",\n                \"pattern\": \"**/*.setup\"\n            },\n            {\n                \"name\": \"InstallShield Log File\",\n                \"pattern\": \"**/*.ilg\"\n            },\n            {\n                \"name\": \"Java, compiled\",\n                \"pattern\": \"**/*.class\"\n            },\n            {\n                \"name\": \"Library\",\n                \"pattern\": \"**/*.a\"\n            },\n            {\n                \"name\": \"Library\",\n                \"pattern\": \"**/*.lib\"\n            },\n            {\n                \"name\": \"Linker object\",\n                \"pattern\": \"**/*.o\"\n            },\n            {\n                \"name\": \"Linux kernel object\",\n                \"pattern\": \"**/*.ko\"\n            },\n            {\n                \"name\": \"Linux/Unix Shell script\",\n                \"pattern\": \"**/*.bsh\"\n            },\n            {\n                \"name\": \"Linux/Unix Shell script\",\n                \"pattern\": \"**/*.csh\"\n            },\n            {\n                \"name\": \"Linux/Unix Shell script\",\n                \"pattern\": \"**/*.ksh\"\n            },\n            {\n                \"name\": \"Linux/Unix Shell script\",\n                \"pattern\": \"**/*.rc\"\n            },\n            {\n                \"name\": \"Linux/Unix Shell script\",\n                \"pattern\": \"**/*.sh\"\n            },\n            {\n                \"name\": \"Microsoft Installer\",\n                \"pattern\": \"**/*.msi\"\n            },\n            {\n                \"name\": \"Microsoft Patch\",\n                \"pattern\": \"**/*.msp\"\n            },\n            {\n                \"name\": \"Microsoft Update\",\n                \"pattern\": \"**/*.msu\"\n            },\n            {\n                \"name\": \"MINITAB Project\",\n                \"pattern\": \"**/*.mpj\"\n            },\n            {\n                \"name\": \"MS PowerShell\",\n                \"pattern\": \"**/*.ps1xml\"\n            },\n            {\n                \"name\": \"NeXT Interface Builder\",\n                \"pattern\": \"**/*.nib\"\n            },\n            {\n                \"name\": \"Object code\",\n                \"pattern\": \"**/*.obj\"\n            },\n            {\n                \"name\": \"OLE\",\n                \"pattern\": \"**/*.ocx\"\n            },\n            {\n                \"name\": \"Open Software Description\",\n                \"pattern\": \"**/*.osd\"\n            },\n            {\n                \"name\": \"OpenOffice libraries\",\n                \"pattern\": \"**/*.xlc\"\n            },\n            {\n                \"name\": \"OpenOffice library\",\n                \"pattern\": \"**/*.xlb\"\n            },\n            {\n                \"name\": \"OpenOffice.org Extension Control File\",\n                \"pattern\": \"**/*.xcu\"\n            },\n            {\n                \"name\": \"package relationships\",\n                \"pattern\": \"**/*.rels\"\n            },\n            {\n                \"name\": \"Picture Motion Browser Data\",\n                \"pattern\": \"**/*.modd\"\n            },\n            {\n                \"name\": \"Printer Information File\",\n                \"pattern\": \"**/*.wpx\"\n            },\n            {\n                \"name\": \"Python script\",\n                \"pattern\": \"**/*.py\"\n            },\n            {\n                \"name\": \"Resource-only Link Library\",\n                \"pattern\": \"**/*.rll\"\n            },\n            {\n                \"name\": \"script\",\n                \"pattern\": \"**/*.cmd\"\n            },\n            {\n                \"name\": \"Sound Designer 2\",\n                \"pattern\": \"**/*.sd2\"\n            },\n            {\n                \"name\": \"SPARC executable\",\n                \"pattern\": \"**/*.elf2\"\n            },\n            {\n                \"name\": \"System driver\",\n                \"pattern\": \"**/*.sys\"\n            },\n            {\n                \"name\": \"TCL script\",\n                \"pattern\": \"**/*.tcl\"\n            },\n            {\n                \"name\": \"Unix A.out executable\",\n                \"pattern\": \"**/*.out\"\n            },\n            {\n                \"name\": \"Unix Shared Object library\",\n                \"pattern\": \"**/*.so\"\n            },\n            {\n                \"name\": \"Unix/Linux executable\",\n                \"pattern\": \"**/*.elf\"\n            },\n            {\n                \"name\": \"User Interface\",\n                \"pattern\": \"**/*.ui\"\n            },\n            {\n                \"name\": \"Virtual device driver\",\n                \"pattern\": \"**/*.vxd\"\n            },\n            {\n                \"name\": \"Visual Basic\",\n                \"pattern\": \"**/*.vb\"\n            },\n            {\n                \"name\": \"Visual Basic Extension\",\n                \"pattern\": \"**/*.vbx\"\n            },\n            {\n                \"name\": \"Visual Basic script\",\n                \"pattern\": \"**/*.vbs\"\n            },\n            {\n                \"name\": \"Windows Install Information\",\n                \"pattern\": \"**/*.inf\"\n            },\n            {\n                \"name\": \"Windows PowerShell\",\n                \"pattern\": \"**/*.ps1\"\n            },\n            {\n                \"name\": \"Windows Program Information File\",\n                \"pattern\": \"**/*.pif\"\n            },\n            {\n                \"name\": \"Windows screensaver\",\n                \"pattern\": \"**/*.scr\"\n            },\n            {\n                \"name\": \"wxWidgets wxPython Resource File\",\n                \"pattern\": \"**/*.xrc\"\n            },\n            {\n                \"name\": \"XAML Browser Application\",\n                \"pattern\": \"**/*.xbap\"\n            },\n            {\n                \"name\": \"XML User Interface Language\",\n                \"pattern\": \"**/*.xul\"\n            }\n        ]\n    },\n    {\n        \"category\": \"Sound/Music\",\n        \"applications\": [\n            {\n                \"name\": \"Audacity\",\n                \"pattern\": \"**/*.au\"\n            },\n            {\n                \"name\": \"Audio Interchange Format\",\n                \"pattern\": \"**/*.aif\"\n            },\n            {\n                \"name\": \"Audio Interchange Format\",\n                \"pattern\": \"**/*.aifc\"\n            },\n            {\n                \"name\": \"Audio Interchange Format\",\n                \"pattern\": \"**/*.aiff\"\n            },\n            {\n                \"name\": \"Linguistically Enhanced Sound\",\n                \"pattern\": \"**/*.lwv\"\n            },\n            {\n                \"name\": \"Matroska Audio\",\n                \"pattern\": \"**/*.mka\"\n            },\n            {\n                \"name\": \"MIDI\",\n                \"pattern\": \"**/*.mid\"\n            },\n            {\n                \"name\": \"MIDI\",\n                \"pattern\": \"**/*.midi\"\n            },\n            {\n                \"name\": \"Mobile phone\",\n                \"pattern\": \"**/*.amr\"\n            },\n            {\n                \"name\": \"Mobile phone\",\n                \"pattern\": \"**/*.m4a\"\n            },\n            {\n                \"name\": \"MP3\",\n                \"pattern\": \"**/*.mp3\"\n            },\n            {\n                \"name\": \"Ogg/Vorbis\",\n                \"pattern\": \"**/*.ogg\"\n            },\n            {\n                \"name\": \"RealMedia\",\n                \"pattern\": \"**/*.ram\"\n            },\n            {\n                \"name\": \"RIFF MIDI\",\n                \"pattern\": \"**/*.rmi\"\n            },\n            {\n                \"name\": \"Unix audio\",\n                \"pattern\": \"**/*.ulaw\"\n            },\n            {\n                \"name\": \"Wave\",\n                \"pattern\": \"**/*.wav\"\n            },\n            {\n                \"name\": \"Windows media\",\n                \"pattern\": \"**/*.wma\"\n            },\n            {\n                \"name\": \"Yamaha SMAF\",\n                \"pattern\": \"**/*.mmf\"\n            }\n        ]\n    },\n    {\n        \"category\": \"Source Code\",\n        \"applications\": [\n            {\n                \"name\": \"ADS source\",\n                \"pattern\": \"**/*.cc\"\n            },\n            {\n                \"name\": \"Assembler\",\n                \"pattern\": \"**/*.asm\"\n            },\n            {\n                \"name\": \"Basic\",\n                \"pattern\": \"**/*.bas\"\n            },\n            {\n                \"name\": \"C source\",\n                \"pattern\": \"**/*.c\"\n            },\n            {\n                \"name\": \"C/C++ Header\",\n                \"pattern\": \"**/*.h\"\n            },\n            {\n                \"name\": \"C# source\",\n                \"pattern\": \"**/*.c#=\"\n            },\n            {\n                \"name\": \"C++ Header\",\n                \"pattern\": \"**/*.hpp\"\n            },\n            {\n                \"name\": \"C++ Header\",\n                \"pattern\": \"**/*.hxx\"\n            },\n            {\n                \"name\": \"C++ source\",\n                \"pattern\": \"**/*.cpp\"\n            },\n            {\n                \"name\": \"C++ template\",\n                \"pattern\": \"**/*.tem\"\n            },\n            {\n                \"name\": \"C++ template\",\n                \"pattern\": \"**/*.template\"\n            },\n            {\n                \"name\": \"Delphi Compiled Unit\",\n                \"pattern\": \"**/*.dcu\"\n            },\n            {\n                \"name\": \"Delphi Form\",\n                \"pattern\": \"**/*.dfm\"\n            },\n            {\n                \"name\": \"Delphi Project\",\n                \"pattern\": \"**/*.dpr\"\n            },\n            {\n                \"name\": \"Fortran\",\n                \"pattern\": \"**/*.f66\"\n            },\n            {\n                \"name\": \"Fortran\",\n                \"pattern\": \"**/*.f77\"\n            },\n            {\n                \"name\": \"Fortran\",\n                \"pattern\": \"**/*.f90\"\n            },\n            {\n                \"name\": \"Java source\",\n                \"pattern\": \"**/*.java\"\n            },\n            {\n                \"name\": \"JBuilder Project File\",\n                \"pattern\": \"**/*.jpx\"\n            },\n            {\n                \"name\": \"Makefile\",\n                \"pattern\": \"**/*.mak\"\n            },\n            {\n                \"name\": \"Objective C (Mac)\",\n                \"pattern\": \"**/*.m\"\n            },\n            {\n                \"name\": \"Objective C++ (Mac)\",\n                \"pattern\": \"**/*.M\"\n            },\n            {\n                \"name\": \"Objective C++ (Mac)\",\n                \"pattern\": \"**/*.mm\"\n            },\n            {\n                \"name\": \"OpenOffice Script\",\n                \"pattern\": \"**/*.xba\"\n            },\n            {\n                \"name\": \"Pascal\",\n                \"pattern\": \"**/*.pas\"\n            },\n            {\n                \"name\": \"Pascal source backup\",\n                \"pattern\": \"**/*.~pas\"\n            },\n            {\n                \"name\": \"Perl\",\n                \"pattern\": \"**/*.pl\"\n            },\n            {\n                \"name\": \"Perl module\",\n                \"pattern\": \"**/*.perl\"\n            },\n            {\n                \"name\": \"Perl module\",\n                \"pattern\": \"**/*.pm\"\n            },\n            {\n                \"name\": \"Visual C++ project\",\n                \"pattern\": \"**/*.vcproj\"\n            },\n            {\n                \"name\": \"Visual Studio C# Project\",\n                \"pattern\": \"**/*.csproj\"\n            },\n            {\n                \"name\": \"Visual Studio Project\",\n                \"pattern\": \"**/*.dsp\"\n            },\n            {\n                \"name\": \"Visual Studio Workspace\",\n                \"pattern\": \"**/*.dsw\"\n            },\n            {\n                \"name\": \"YAML Ain't Markup Language\",\n                \"pattern\": \"**/*.yaml\"\n            }\n        ]\n    },\n    {\n        \"category\": \"Text/Word Processing\",\n        \"applications\": [\n            {\n                \"name\": \"AbiWord\",\n                \"pattern\": \"**/*.abw\"\n            },\n            {\n                \"name\": \"Ami Pro\",\n                \"pattern\": \"**/*.ami\"\n            },\n            {\n                \"name\": \"Apple iWork Pages\",\n                \"pattern\": \"**/*.pages\"\n            },\n            {\n                \"name\": \"Document Type Definition\",\n                \"pattern\": \"**/*.dtd\"\n            },\n            {\n                \"name\": \"Franklin eBook\",\n                \"pattern\": \"**/*.seb\"\n            },\n            {\n                \"name\": \"GeoWorks\",\n                \"pattern\": \"**/*.geo\"\n            },\n            {\n                \"name\": \"IBM DisplayWrite\",\n                \"pattern\": \"**/*.rft\"\n            },\n            {\n                \"name\": \"Ichitaro document\",\n                \"pattern\": \"**/*.jtd\"\n            },\n            {\n                \"name\": \"InPage document\",\n                \"pattern\": \"**/*.inp\"\n            },\n            {\n                \"name\": \"Mac Write\",\n                \"pattern\": \"**/*.mcw\"\n            },\n            {\n                \"name\": \"MS Word\",\n                \"pattern\": \"**/*.doc\"\n            },\n            {\n                \"name\": \"MS Word 2007\",\n                \"pattern\": \"**/*.docx\"\n            },\n            {\n                \"name\": \"MS Word Document macro-enabled\",\n                \"pattern\": \"**/*.docm\"\n            },\n            {\n                \"name\": \"MS Word template\",\n                \"pattern\": \"**/*.dot\"\n            },\n            {\n                \"name\": \"MS Word user identification\",\n                \"pattern\": \"**/*.wrdtmp\"\n            },\n            {\n                \"name\": \"MS Word Wizard\",\n                \"pattern\": \"**/*.wiz\"\n            },\n            {\n                \"name\": \"MS Works\",\n                \"pattern\": \"**/*.wps\"\n            },\n            {\n                \"name\": \"MS Works Wizard\",\n                \"pattern\": \"**/*.wwp\"\n            },\n            {\n                \"name\": \"Newton eBook\",\n                \"pattern\": \"**/*.pkg\"\n            },\n            {\n                \"name\": \"OmniPage Document\",\n                \"pattern\": \"**/*.opd\"\n            },\n            {\n                \"name\": \"Open eBook\",\n                \"pattern\": \"**/*.opf\"\n            },\n            {\n                \"name\": \"Open Publication Structure\",\n                \"pattern\": \"**/*.epub\"\n            },\n            {\n                \"name\": \"OpenDocument text template\",\n                \"pattern\": \"**/*.ott\"\n            },\n            {\n                \"name\": \"OpenOffice/StarOffice\",\n                \"pattern\": \"**/*.otp\"\n            },\n            {\n                \"name\": \"OpenOffice2 Writer\",\n                \"pattern\": \"**/*.odt\"\n            },\n            {\n                \"name\": \"PagePlus Publication, Art Explosion Publisher Pro\",\n                \"pattern\": \"**/*.ppp\"\n            },\n            {\n                \"name\": \"Pocket Word\",\n                \"pattern\": \"**/*.psw\"\n            },\n            {\n                \"name\": \"Pocket Word\",\n                \"pattern\": \"**/*.pwd\"\n            },\n            {\n                \"name\": \"Ragtime\",\n                \"pattern\": \"**/*.rtd\"\n            },\n            {\n                \"name\": \"Ragtime\",\n                \"pattern\": \"**/*.rtt\"\n            },\n            {\n                \"name\": \"Rich Text\",\n                \"pattern\": \"**/*.rtf\"\n            },\n            {\n                \"name\": \"Rocket eBook\",\n                \"pattern\": \"**/*.rb\"\n            },\n            {\n                \"name\": \"Samsung document\",\n                \"pattern\": \"**/*.gul\"\n            },\n            {\n                \"name\": \"Standard Generalized Markup Language Document\",\n                \"pattern\": \"**/*.sgm\"\n            },\n            {\n                \"name\": \"StarMath document\",\n                \"pattern\": \"**/*.sxm\"\n            },\n            {\n                \"name\": \"StarOffice Writer\",\n                \"pattern\": \"**/*.sdw\"\n            },\n            {\n                \"name\": \"StarOffice Writer\",\n                \"pattern\": \"**/*.sgl\"\n            },\n            {\n                \"name\": \"StarOffice Writer\",\n                \"pattern\": \"**/*.stw\"\n            },\n            {\n                \"name\": \"StarOffice Writer\",\n                \"pattern\": \"**/*.sxw\"\n            },\n            {\n                \"name\": \"StarWriter global document\",\n                \"pattern\": \"**/*.sxg\"\n            },\n            {\n                \"name\": \"Text\",\n                \"pattern\": \"**/*.strings\"\n            },\n            {\n                \"name\": \"TextMaker\",\n                \"pattern\": \"**/*.tmd\"\n            },\n            {\n                \"name\": \"TextMaker\",\n                \"pattern\": \"**/*.tmv\"\n            },\n            {\n                \"name\": \"TomeRaider eBook\",\n                \"pattern\": \"**/*.tr\"\n            },\n            {\n                \"name\": \"Windows Write\",\n                \"pattern\": \"**/*.wri\"\n            },\n            {\n                \"name\": \"WordPerfect\",\n                \"pattern\": \"**/*.wp\"\n            },\n            {\n                \"name\": \"WordPerfect\",\n                \"pattern\": \"**/*.wp5\"\n            },\n            {\n                \"name\": \"WordPerfect\",\n                \"pattern\": \"**/*.wp6\"\n            },\n            {\n                \"name\": \"WordPerfect\",\n                \"pattern\": \"**/*.wpd\"\n            },\n            {\n                \"name\": \"WordPerfect\",\n                \"pattern\": \"**/*.wpp\"\n            },\n            {\n                \"name\": \"XML\",\n                \"pattern\": \"**/*.xml\"\n            },\n            {\n                \"name\": \"XML Schema Definition\",\n                \"pattern\": \"**/*.xsd\"\n            },\n            {\n                \"name\": \"XML style sheet\",\n                \"pattern\": \"**/*.xsl\"\n            },\n            {\n                \"name\": \"XML transform\",\n                \"pattern\": \"**/*.xslt\"\n            }\n        ]\n    },\n    {\n        \"category\": \"Unix/Linux System Files\",\n        \"applications\": [\n            {\n                \"name\": \"Apache log\",\n                \"pattern\": \"**/suexec.log\"\n            },\n            {\n                \"name\": \"Configuration\",\n                \"pattern\": \"**/inittab\"\n            },\n            {\n                \"name\": \"Configuration\",\n                \"pattern\": \"**/master.passwd\"\n            },\n            {\n                \"name\": \"Configuration\",\n                \"pattern\": \"**/xinetd.conf\"\n            },\n            {\n                \"name\": \"Current users log\",\n                \"pattern\": \"**/utmp\"\n            },\n            {\n                \"name\": \"Current users log\",\n                \"pattern\": \"**/utmpx\"\n            },\n            {\n                \"name\": \"deleted file info\",\n                \"pattern\": \"**/trashinfo\"\n            },\n            {\n                \"name\": \"Existing users\",\n                \"pattern\": \"**/passwd\"\n            },\n            {\n                \"name\": \"EXT3 journal\",\n                \"pattern\": \"**/journal\"\n            },\n            {\n                \"name\": \"Glade User Interface Design\",\n                \"pattern\": \"**/glade\"\n            },\n            {\n                \"name\": \"KDE Cache\",\n                \"pattern\": \"**/kdecache\"\n            },\n            {\n                \"name\": \"KDE Configuration\",\n                \"pattern\": \"**/*.kcfg\"\n            },\n            {\n                \"name\": \"konquerer browser cache\",\n                \"pattern\": \"**/konq_history\"\n            },\n            {\n                \"name\": \"Last log-ins\",\n                \"pattern\": \"**/lastlog\"\n            },\n            {\n                \"name\": \"Log file\",\n                \"pattern\": \"**/localmessages\"\n            },\n            {\n                \"name\": \"Log file\",\n                \"pattern\": \"**/y2log1\"\n            },\n            {\n                \"name\": \"Log-in/log-out log\",\n                \"pattern\": \"**/wtmp\"\n            },\n            {\n                \"name\": \"Log-in/log-out log\",\n                \"pattern\": \"**/wtmpx\"\n            },\n            {\n                \"name\": \"Password file\",\n                \"pattern\": \"**/shadow\"\n            },\n            {\n                \"name\": \"Process\",\n                \"pattern\": \"**/cpuinfo\"\n            },\n            {\n                \"name\": \"Process\",\n                \"pattern\": \"**/ksyms\"\n            },\n            {\n                \"name\": \"Process\",\n                \"pattern\": \"**/meminfo\"\n            },\n            {\n                \"name\": \"Process\",\n                \"pattern\": \"**/modules\"\n            },\n            {\n                \"name\": \"Process accounting\",\n                \"pattern\": \"**/acct\"\n            },\n            {\n                \"name\": \"Process accounting\",\n                \"pattern\": \"**/pacct\"\n            },\n            {\n                \"name\": \"Server config\",\n                \"pattern\": \"**/hosts.allow\"\n            },\n            {\n                \"name\": \"Server config\",\n                \"pattern\": \"**/hosts.deny\"\n            },\n            {\n                \"name\": \"Server config\",\n                \"pattern\": \"**/hosts.equiv\"\n            },\n            {\n                \"name\": \"Server demon config\",\n                \"pattern\": \"**/inetd.conf\"\n            },\n            {\n                \"name\": \"SSH config\",\n                \"pattern\": \"**/sshd_config\"\n            },\n            {\n                \"name\": \"SSL log\",\n                \"pattern\": \"**/ssl_engine_log\"\n            },\n            {\n                \"name\": \"SSL log\",\n                \"pattern\": \"**/ssl_request_log\"\n            },\n            {\n                \"name\": \"SSL log\",\n                \"pattern\": \"**/sslaccess_log\"\n            },\n            {\n                \"name\": \"Startup script\",\n                \"pattern\": \"**/rc.sysinit\"\n            },\n            {\n                \"name\": \"System errors/warnings\",\n                \"pattern\": \"**/messages\"\n            },\n            {\n                \"name\": \"User profile settings\",\n                \"pattern\": \"**/profile\"\n            },\n            {\n                \"name\": \"Volume mounting config\",\n                \"pattern\": \"**/fstab\"\n            },\n            {\n                \"name\": \"Volume mounting config\",\n                \"pattern\": \"**/mtab\"\n            },\n            {\n                \"name\": \"X cursor\",\n                \"pattern\": \"**/xcur\"\n            }\n        ]\n    },\n    {\n        \"category\": \"Video\",\n        \"applications\": [\n            {\n                \"name\": \"4X movie\",\n                \"pattern\": \"**/*.4x\"\n            },\n            {\n                \"name\": \"Active Streaming (Windows Media)\",\n                \"pattern\": \"**/*.asf\"\n            },\n            {\n                \"name\": \"Apple Quicktime\",\n                \"pattern\": \"**/*.mov\"\n            },\n            {\n                \"name\": \"Apple Quicktime\",\n                \"pattern\": \"**/*.qt\"\n            },\n            {\n                \"name\": \"Audio/Video Interleave\",\n                \"pattern\": \"**/*.avi\"\n            },\n            {\n                \"name\": \"Autodesk Animator\",\n                \"pattern\": \"**/*.fli\"\n            },\n            {\n                \"name\": \"AVCHD\",\n                \"pattern\": \"**/*.mts\"\n            },\n            {\n                \"name\": \"AVCHD Video\",\n                \"pattern\": \"**/*.m2t\"\n            },\n            {\n                \"name\": \"Digital Video Recording\",\n                \"pattern\": \"**/*.dvrms\"\n            },\n            {\n                \"name\": \"DirectShow Media\",\n                \"pattern\": \"**/*.dsm\"\n            },\n            {\n                \"name\": \"DivX media\",\n                \"pattern\": \"**/*.divx\"\n            },\n            {\n                \"name\": \"DVD video\",\n                \"pattern\": \"**/*.vob\"\n            },\n            {\n                \"name\": \"Flash video\",\n                \"pattern\": \"**/*.flv\"\n            },\n            {\n                \"name\": \"Magix\",\n                \"pattern\": \"**/*.mxv\"\n            },\n            {\n                \"name\": \"Matroska\",\n                \"pattern\": \"**/*.mkv\"\n            },\n            {\n                \"name\": \"Media Center\",\n                \"pattern\": \"**/*.wtv\"\n            },\n            {\n                \"name\": \"Media Clip\",\n                \"pattern\": \"**/*.mmm\"\n            },\n            {\n                \"name\": \"Media Exchange Format\",\n                \"pattern\": \"**/*.mxf\"\n            },\n            {\n                \"name\": \"Mobile phone\",\n                \"pattern\": \"**/*.m4v\"\n            },\n            {\n                \"name\": \"Mobile phone animation\",\n                \"pattern\": \"**/*.pmd\"\n            },\n            {\n                \"name\": \"Mobile phone video\",\n                \"pattern\": \"**/*.3g2\"\n            },\n            {\n                \"name\": \"Mobile phone video\",\n                \"pattern\": \"**/*.3gp\"\n            },\n            {\n                \"name\": \"Mobile phone video\",\n                \"pattern\": \"**/*.3gpp\"\n            },\n            {\n                \"name\": \"Movie Clip\",\n                \"pattern\": \"**/*.mp2v\"\n            },\n            {\n                \"name\": \"MPEG\",\n                \"pattern\": \"**/*.mp4\"\n            },\n            {\n                \"name\": \"MPEG\",\n                \"pattern\": \"**/*.mpeg\"\n            },\n            {\n                \"name\": \"MPEG\",\n                \"pattern\": \"**/*.mpg\"\n            },\n            {\n                \"name\": \"MPEG-1 video\",\n                \"pattern\": \"**/*.m1v\"\n            },\n            {\n                \"name\": \"MPEG-2 video\",\n                \"pattern\": \"**/*.m2v\"\n            },\n            {\n                \"name\": \"Multimedia container\",\n                \"pattern\": \"**/*.nut\"\n            },\n            {\n                \"name\": \"NullSoft Video\",\n                \"pattern\": \"**/*.nsv\"\n            },\n            {\n                \"name\": \"NuppelVideo\",\n                \"pattern\": \"**/*.nuv\"\n            },\n            {\n                \"name\": \"Ogg Video\",\n                \"pattern\": \"**/*.ogm\"\n            },\n            {\n                \"name\": \"Ogg Video\",\n                \"pattern\": \"**/*.ogv\"\n            },\n            {\n                \"name\": \"Open Media Format\",\n                \"pattern\": \"**/*.omf\"\n            },\n            {\n                \"name\": \"RealPlayer\",\n                \"pattern\": \"**/*.rm\"\n            },\n            {\n                \"name\": \"RealPlayer\",\n                \"pattern\": \"**/*.rmvb\"\n            },\n            {\n                \"name\": \"RealVideo\",\n                \"pattern\": \"**/*.rv\"\n            },\n            {\n                \"name\": \"Sony high definition\",\n                \"pattern\": \"**/*.m2ts\"\n            },\n            {\n                \"name\": \"Windows media\",\n                \"pattern\": \"**/*.wmv\"\n            },\n            {\n                \"name\": \"Windows Movie Maker project\",\n                \"pattern\": \"**/*.mswmm\"\n            }\n        ]\n    },\n    {\n        \"category\": \"Windows Internals\",\n        \"applications\": [\n            {\n                \"name\": \"$I Windows recycle bin metadata\",\n                \"pattern\": \"**/*.recycler\"\n            },\n            {\n                \"name\": \"activation certificate\",\n                \"pattern\": \"**/*.XRM-MS\"\n            },\n            {\n                \"name\": \"AppCrash\",\n                \"pattern\": \"**/*.wer\"\n            },\n            {\n                \"name\": \"Application Reference\",\n                \"pattern\": \"**/*.appref-ms\"\n            },\n            {\n                \"name\": \"assembly\",\n                \"pattern\": \"**/*.mum\"\n            },\n            {\n                \"name\": \"Change log\",\n                \"pattern\": \"**/*.clog\"\n            },\n            {\n                \"name\": \"Clipboard\",\n                \"pattern\": \"**/*.clp\"\n            },\n            {\n                \"name\": \"Code Page National Language Support\",\n                \"pattern\": \"**/*.nls\"\n            },\n            {\n                \"name\": \"color matching profile\",\n                \"pattern\": \"**/*.icm\"\n            },\n            {\n                \"name\": \"desktop mini app\",\n                \"pattern\": \"**/*.gadget\"\n            },\n            {\n                \"name\": \"Dialup network\",\n                \"pattern\": \"**/*.dun\"\n            },\n            {\n                \"name\": \"DirectShow filter\",\n                \"pattern\": \"**/*.ax\"\n            },\n            {\n                \"name\": \"Distributed Link Tracking\",\n                \"pattern\": \"**/tracking.log\"\n            },\n            {\n                \"name\": \"Driver description\",\n                \"pattern\": \"**/*.gdl\"\n            },\n            {\n                \"name\": \"Event log\",\n                \"pattern\": \"**/*.evt\"\n            },\n            {\n                \"name\": \"Event trace log\",\n                \"pattern\": \"**/*.etl\"\n            },\n            {\n                \"name\": \"Extensible Storage Engine\",\n                \"pattern\": \"**/*.edb\"\n            },\n            {\n                \"name\": \"Generic Printer Description\",\n                \"pattern\": \"**/*.gpd\"\n            },\n            {\n                \"name\": \"Heap dump file\",\n                \"pattern\": \"**/*.hdmp\"\n            },\n            {\n                \"name\": \"Help CNT\",\n                \"pattern\": \"**/*.cnt\"\n            },\n            {\n                \"name\": \"HelpPane\",\n                \"pattern\": \"**/*.h1s\"\n            },\n            {\n                \"name\": \"Hibernation\",\n                \"pattern\": \"**/hiberfil.sys\"\n            },\n            {\n                \"name\": \"ICC Profile\",\n                \"pattern\": \"**/*.icc\"\n            },\n            {\n                \"name\": \"JetForm File\",\n                \"pattern\": \"**/*.jtp\"\n            },\n            {\n                \"name\": \"jump list\",\n                \"pattern\": \"**/*.automaticDestinations-ms\"\n            },\n            {\n                \"name\": \"jump list\",\n                \"pattern\": \"**/*.customdestinations-ms\"\n            },\n            {\n                \"name\": \"jump list\",\n                \"pattern\": \"**/*.customDestinations-ms\"\n            },\n            {\n                \"name\": \"keyboard inf resource\",\n                \"pattern\": \"**/*.inf_loc\"\n            },\n            {\n                \"name\": \"language dependend policy settings\",\n                \"pattern\": \"**/*.adml\"\n            },\n            {\n                \"name\": \"library\",\n                \"pattern\": \"**/*.library-ms\"\n            },\n            {\n                \"name\": \"manifest store\",\n                \"pattern\": \"**/*.amx\"\n            },\n            {\n                \"name\": \"Memory dump\",\n                \"pattern\": \"**/*.dmp\"\n            },\n            {\n                \"name\": \"Microsoft Console\",\n                \"pattern\": \"**/*.msc\"\n            },\n            {\n                \"name\": \"Microsoft Data Link\",\n                \"pattern\": \"**/*.udl\"\n            },\n            {\n                \"name\": \"Microsoft Office Settings\",\n                \"pattern\": \"**/*.pip\"\n            },\n            {\n                \"name\": \"Microsoft Office Theme\",\n                \"pattern\": \"**/*.thmx\"\n            },\n            {\n                \"name\": \"Microsoft rss feeds store\",\n                \"pattern\": \"**/*.feedms\"\n            },\n            {\n                \"name\": \"Microsoft rss feeds store\",\n                \"pattern\": \"**/*.feedsdb-ms\"\n            },\n            {\n                \"name\": \"MS Channel Definition Format\",\n                \"pattern\": \"**/*.cdfms\"\n            },\n            {\n                \"name\": \"MSInfo\",\n                \"pattern\": \"**/*.mof\"\n            },\n            {\n                \"name\": \"MSInfo Document\",\n                \"pattern\": \"**/*.nfo\"\n            },\n            {\n                \"name\": \"Multilingual\",\n                \"pattern\": \"**/*.mui\"\n            },\n            {\n                \"name\": \"NetMeeting Old Whiteboard\",\n                \"pattern\": \"**/*.wht\"\n            },\n            {\n                \"name\": \"persisted Query\",\n                \"pattern\": \"**/*.search\"\n            },\n            {\n                \"name\": \"Phonebook\",\n                \"pattern\": \"**/rasphone.pbk\"\n            },\n            {\n                \"name\": \"Playlist\",\n                \"pattern\": \"**/*.wpl\"\n            },\n            {\n                \"name\": \"PostScript Printer Description\",\n                \"pattern\": \"**/*.ppd\"\n            },\n            {\n                \"name\": \"PowerShell\",\n                \"pattern\": \"**/*.psd1\"\n            },\n            {\n                \"name\": \"Precompiled setup information\",\n                \"pattern\": \"**/*.pnf\"\n            },\n            {\n                \"name\": \"Prefetch\",\n                \"pattern\": \"**/*.pf\"\n            },\n            {\n                \"name\": \"ProcMon Log\",\n                \"pattern\": \"**/*.pml\"\n            },\n            {\n                \"name\": \"Query\",\n                \"pattern\": \"**/*.query\"\n            },\n            {\n                \"name\": \"Recycle bin\",\n                \"pattern\": \"**/info2\"\n            },\n            {\n                \"name\": \"Registry-based policy settings\",\n                \"pattern\": \"**/*.admx\"\n            },\n            {\n                \"name\": \"Remote Desktop Connection\",\n                \"pattern\": \"**/*.rdp\"\n            },\n            {\n                \"name\": \"Search Connector\",\n                \"pattern\": \"**/*.searchconnector-ms\"\n            },\n            {\n                \"name\": \"security db\",\n                \"pattern\": \"**/*.sdb\"\n            },\n            {\n                \"name\": \"setup info\",\n                \"pattern\": \"**/setupinfo\"\n            },\n            {\n                \"name\": \"Shell Scrap Object\",\n                \"pattern\": \"**/*.shs\"\n            },\n            {\n                \"name\": \"Shortcut\",\n                \"pattern\": \"**/*.lnk\"\n            },\n            {\n                \"name\": \"Shortcut into a document\",\n                \"pattern\": \"**/*.shb\"\n            },\n            {\n                \"name\": \"Software Quality Metrics\",\n                \"pattern\": \"**/*.sqm\"\n            },\n            {\n                \"name\": \"Spooler\",\n                \"pattern\": \"**/*.shd\"\n            },\n            {\n                \"name\": \"Spooler\",\n                \"pattern\": \"**/*.spl\"\n            },\n            {\n                \"name\": \"Sticky note\",\n                \"pattern\": \"**/*.snt\"\n            },\n            {\n                \"name\": \"Superfetch Cache\",\n                \"pattern\": \"**/*.sfcache\"\n            },\n            {\n                \"name\": \"Swap file\",\n                \"pattern\": \"**/pagefile.sys\"\n            },\n            {\n                \"name\": \"Swap file\",\n                \"pattern\": \"**/win386.swp\"\n            },\n            {\n                \"name\": \"System Restore\",\n                \"pattern\": \"**/drivetable.txt\"\n            },\n            {\n                \"name\": \"target\",\n                \"pattern\": \"**/*.target\"\n            },\n            {\n                \"name\": \"target\",\n                \"pattern\": \"**/*.targets\"\n            },\n            {\n                \"name\": \"task\",\n                \"pattern\": \"**/*.task\"\n            },\n            {\n                \"name\": \"task\",\n                \"pattern\": \"**/*.tasks\"\n            },\n            {\n                \"name\": \"Task Scheduler\",\n                \"pattern\": \"**/*.job\"\n            },\n            {\n                \"name\": \"UniCode Extensions\",\n                \"pattern\": \"**/*.uce\"\n            },\n            {\n                \"name\": \"Update\",\n                \"pattern\": \"**/*.ptxml\"\n            },\n            {\n                \"name\": \"Vista event log\",\n                \"pattern\": \"**/*.evtx\"\n            },\n            {\n                \"name\": \"Windows Image\",\n                \"pattern\": \"**/*.wim\"\n            },\n            {\n                \"name\": \"Windows Installer Rollback\",\n                \"pattern\": \"**/*.rbf\"\n            },\n            {\n                \"name\": \"Windows Journal notes\",\n                \"pattern\": \"**/*.jnt\"\n            },\n            {\n                \"name\": \"Windows Media Audio shortcut\",\n                \"pattern\": \"**/*.wax\"\n            },\n            {\n                \"name\": \"Windows Media Player Download Package\",\n                \"pattern\": \"**/*.wmd\"\n            },\n            {\n                \"name\": \"Windows Media playlist\",\n                \"pattern\": \"**/*.wmx\"\n            },\n            {\n                \"name\": \"Windows Media video playlist\",\n                \"pattern\": \"**/*.wvx\"\n            },\n            {\n                \"name\": \"Windows Password File\",\n                \"pattern\": \"**/*.pwl\"\n            },\n            {\n                \"name\": \"Windows Product Activation\",\n                \"pattern\": \"**/wpa.dbl\"\n            },\n            {\n                \"name\": \"Windows Script Component\",\n                \"pattern\": \"**/*.sct\"\n            },\n            {\n                \"name\": \"Windows Script File\",\n                \"pattern\": \"**/*.wsf\"\n            },\n            {\n                \"name\": \"Windows Script Host Settings\",\n                \"pattern\": \"**/*.wsh\"\n            },\n            {\n                \"name\": \"Windows SDK Setup Transform Script\",\n                \"pattern\": \"**/*.mst\"\n            },\n            {\n                \"name\": \"Windows Theme File\",\n                \"pattern\": \"**/*.theme\"\n            }\n        ]\n    },\n    {\n        \"category\": \"Windows Registry\",\n        \"applications\": [\n            {\n                \"name\": \"Active directory\",\n                \"pattern\": \"**/ntds.dit\"\n            },\n            {\n                \"name\": \"Boot Configuration Database\",\n                \"pattern\": \"**/bcd\"\n            },\n            {\n                \"name\": \"Registration Entries\",\n                \"pattern\": \"**/key\"\n            },\n            {\n                \"name\": \"Registry hive\",\n                \"pattern\": \"**/components\"\n            },\n            {\n                \"name\": \"Registry hive\",\n                \"pattern\": \"**/default\"\n            },\n            {\n                \"name\": \"Registry hive\",\n                \"pattern\": \"**/ntuser.dat\"\n            },\n            {\n                \"name\": \"Registry hive\",\n                \"pattern\": \"**/sam\"\n            },\n            {\n                \"name\": \"Registry hive\",\n                \"pattern\": \"**/security\"\n            },\n            {\n                \"name\": \"Registry hive\",\n                \"pattern\": \"**/software\"\n            },\n            {\n                \"name\": \"Registry hive\",\n                \"pattern\": \"**/system\"\n            },\n            {\n                \"name\": \"Registry hive\",\n                \"pattern\": \"**/Userdiff.LOG\"\n            },\n            {\n                \"name\": \"Registry hive\",\n                \"pattern\": \"**/usrclass.dat\"\n            },\n            {\n                \"name\": \"Registry hive\",\n                \"pattern\": \"**/registry\"\n            },\n            {\n                \"name\": \"Visual Studio Registry\",\n                \"pattern\": \"**/*.vrg\"\n            },\n            {\n                \"name\": \"Win3.1 registry\",\n                \"pattern\": \"**/reg.dat\"\n            },\n            {\n                \"name\": \"Win9x registry\",\n                \"pattern\": \"**/system.dat\"\n            },\n            {\n                \"name\": \"Win9x registry\",\n                \"pattern\": \"**/user.dat\"\n            }\n        ]\n    }\n]"
						}
					]
				}
			]
		},
		{
			"name": "Policies",
			"item": [
				{
					"name": "Create Policy",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const uuid = require('uuid')",
									"",
									"pm.runForTest(() => {",
									"    const payload = JSON.parse(pm.request.body.raw)",
									"    payload.name = `Policy - ${uuid.v4().substr(0, 8)}`",
									"    pm.request.body.raw = JSON.stringify(payload)",
									"})"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.collectionVariables.set('policyId', JSON.parse(responseBody).result._id)",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"content-type": true
						}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Example\",\n    \"organizationIds\": [\n        0\n    ],\n    \"filter\": {\n        \"operator\": \"and\",\n        \"conditions\": [\n            {\n                \"operator\": \"and\",\n                \"conditions\": [\n                    {\n                        \"field\": \"groupFullPath\",\n                        \"operator\": \"equals\",\n                        \"value\": \"All Endpoints\\\\Computers\"\n                    }\n                ]\n            }\n        ]\n    },\n    \"cpu\": {\n        \"limit\": 100\n    },\n    \"saveTo\": {\n        \"windows\": {\n            \"location\": \"local\",\n            \"path\": \"Binalyze\\\\AIR\",\n            \"useMostFreeVolume\": false,\n            \"volume\": \"C:\",\n            \"tmp\": \"Binalyze\\\\AIR\\\\tmp\"\n        },\n        \"linux\": {\n            \"location\": \"local\",\n            \"path\": \"opt/binalyze/air\",\n            \"useMostFreeVolume\": false,\n            \"volume\": \"/\",\n            \"tmp\": \"opt/binalyze/air/tmp\"\n        },\n        \"macos\": {\n            \"location\": \"local\",\n            \"path\": \"opt/binalyze/air\",\n            \"useMostFreeVolume\": false,\n            \"volume\": \"/\",\n            \"tmp\": \"opt/binalyze/air/tmp\"\n        }\n    },\n    \"compression\": {\n        \"enabled\": true,\n        \"encryption\": {\n            \"enabled\": true,\n            \"password\": \"pass\"\n        }\n    },\n    \"sendTo\": {\n        \"location\": \"user-local\"\n    }\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/{{apiPrefix}}/policies",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"{{apiPrefix}}",
								"policies"
							]
						},
						"description": "### Parameters\n| **Name** | **Constraints** |\n| ---------------------------------------------------------------------------------------------- | ---------------------------------------------------------- |\n| **name** <br>string / required | |\n| **organizationIds** <br>number array / required | |\n| **cpu** <br>object / required | |\n| **cpu.limit** <br>number / required | min: 1 <br> max: 100 |\n| **compression** <br>object / required | |\n| **compression.enabled** <br>boolean / required | |\n| **compression.encryption** <br>object / required | |\n| **compression.encryption.enabled** <br>boolean / required | |\n| **compression.encryption.password** <br>string / if encryption is enabled: required | |\n| **sendTo** <br>object / required | |\n| **sendTo.location** <br>string / required | valid values: user-local, repository |\n| **sendTo.repositoryId** <br>string / if location is repository: required | |\n| **saveTo.windows.location** <br>string / required | valid values: local, repository |\n| **saveTo.windows.path** <br>string / if location is local: required | |\n| **saveTo.windows.repositoryId** <br>string / if location is repository: required | |\n| **saveTo.windows.useMostFreeVolume** <br>boolean / required | |\n| **saveTo.windows.volume** <br>string / if useMostFreeVolume is false: required | Regex: /^[a-zA-Z]:/ <br>Example: \"C:\" |\n| **saveTo.windows.tmp** <br>string / optional | |\n| **saveTo.linux.location** <br>string / required | valid values: local, repository |\n| **saveTo.linux.path** <br>string / if location is local: required | |\n| **saveTo.linux.repositoryId** <br>string / if location is repository: required | |\n| **saveTo.linux.useMostFreeVolume** <br>boolean / required | |\n| **saveTo.linux.volume** <br>string / if useMostFreeVolume is false: required | Regex: /^[/].\\*/ <br>Example: \"/\" |\n| **saveTo.linux.tmp** <br>string / optional | |\n| **saveTo.macos.location** <br>string / required | valid values: local, repository |\n| **saveTo.macos.path** <br>string / if location is local: required | |\n| **saveTo.macos.repositoryId** <br>string / if location is repository: required | |\n| **saveTo.macos.useMostFreeVolume** <br>boolean / required | |\n| **saveTo.macos.volume** <br>string / optional | Regex: /^[/].\\*/ <br>Example: \"/\" |\n| **saveTo.macos.tmp** <br>string / optional | |\n| **filter** <br>object / required | |\n| **filter.operator** <br>string / required | valid values: and, or |\n| **filter.conditions** <br>object array / required | |\n| **filter.conditions.\\*.operator** <br>string / required | valid values: and, or |\n| **filter.conditions.\\*.conditions** <br>object array / required | valid values: and, or |\n| **filter.conditions.\\*.conditions.field** <br>string / required | valid values: organizationId, ipAddress, name, label, groupFullPath, os, version, tags, platform, isServer |\n| **filter.conditions.\\*.conditions.operator** <br>string / required | valid values: equals, contains, matches, in, all, not-equal, not-contain, not-match, not-in, not-all |\n| **filter.conditions.\\*.conditions.value** <br>string / required | |"
					},
					"response": [
						{
							"name": "Create Policy - 400 Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"name": "Content-Type",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Test Policy2\",\n    \"organizationIds\": [\n        0\n    ],\n    \"saveTo\": {\n        \"windows\": {\n            \"location\": \"local\",\n            \"path\": \"Binalyze\\\\AIR\",\n            \"useMostFreeVolume\": false,\n            \"volume\": \"C:\",\n            \"tmp\": \"Binalyze\\\\AIR\\\\tmp\"\n        },\n        \"linux\": {\n            \"location\": \"local\",\n            \"path\": \"opt/binalyze/air\",\n            \"useMostFreeVolume\": false,\n            \"volume\": \"/\",\n            \"tmp\": \"opt/binalyze/air/tmp\"\n        },\n        \"macos\": {\n            \"location\": \"local\",\n            \"path\": \"opt/binalyze/air\",\n            \"useMostFreeVolume\": false,\n            \"volume\": \"/\",\n            \"tmp\": \"opt/binalyze/air/tmp\"\n        }\n    },\n    \"compression\": {\n        \"enabled\": true,\n        \"encryption\": {\n            \"enabled\": true,\n            \"password\": \"pass\"\n        }\n    },\n    \"sendTo\": {\n        \"location\": \"user-local\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/{{apiPrefix}}/policies",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"{{apiPrefix}}",
										"policies"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "81"
								},
								{
									"key": "ETag",
									"value": "W/\"51-3zuo/c0KT3KuNO/Umhqwc8/MjEY\""
								},
								{
									"key": "Date",
									"value": "Wed, 29 Jun 2022 05:50:56 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"errors\": [\n        \"Filter is required.\"\n    ],\n    \"statusCode\": 400,\n    \"result\": null\n}"
						},
						{
							"name": "Create Policy - 409 Conflict",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"name": "Content-Type",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Test Policy\",\n    \"organizationIds\": [\n        0\n    ],\n    \"filter\": {\n        \"operator\": \"and\",\n        \"conditions\": [\n            {\n                \"operator\": \"and\",\n                \"conditions\": [\n                    {\n                        \"field\": \"groupFullPath\",\n                        \"operator\": \"equals\",\n                        \"value\": \"All Endpoints\\\\Computers\"\n                    }\n                ]\n            }\n        ]\n    },\n    \"cpu\": {\n        \"limit\": 100\n    },\n    \"saveTo\": {\n        \"windows\": {\n            \"location\": \"local\",\n            \"path\": \"Binalyze\\\\AIR\",\n            \"useMostFreeVolume\": false,\n            \"volume\": \"C:\",\n            \"tmp\": \"Binalyze\\\\AIR\\\\tmp\"\n        },\n        \"linux\": {\n            \"location\": \"local\",\n            \"path\": \"opt/binalyze/air\",\n            \"useMostFreeVolume\": false,\n            \"volume\": \"/\",\n            \"tmp\": \"opt/binalyze/air/tmp\"\n        },\n        \"macos\": {\n            \"location\": \"local\",\n            \"path\": \"opt/binalyze/air\",\n            \"useMostFreeVolume\": false,\n            \"volume\": \"/\",\n            \"tmp\": \"opt/binalyze/air/tmp\"\n        }\n    },\n    \"compression\": {\n        \"enabled\": true,\n        \"encryption\": {\n            \"enabled\": true,\n            \"password\": \"pass\"\n        }\n    },\n    \"sendTo\": {\n        \"location\": \"user-local\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/{{apiPrefix}}/policies",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"{{apiPrefix}}",
										"policies"
									]
								}
							},
							"status": "Conflict",
							"code": 409,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "89"
								},
								{
									"key": "ETag",
									"value": "W/\"59-CsOQx3wnu55LU3k5EVeQcdM9134\""
								},
								{
									"key": "Date",
									"value": "Wed, 29 Jun 2022 05:50:41 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"errors\": [\n        \"Policy name already exists.\"\n    ],\n    \"statusCode\": 409,\n    \"result\": null\n}"
						},
						{
							"name": "Create Policy - 200 OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"name": "Content-Type",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Example\",\n    \"organizationIds\": [\n        0\n    ],\n    \"filter\": {\n        \"operator\": \"and\",\n        \"conditions\": [\n            {\n                \"operator\": \"and\",\n                \"conditions\": [\n                    {\n                        \"field\": \"groupFullPath\",\n                        \"operator\": \"equals\",\n                        \"value\": \"All Endpoints\\\\Computers\"\n                    }\n                ]\n            }\n        ]\n    },\n    \"cpu\": {\n        \"limit\": 100\n    },\n    \"saveTo\": {\n        \"windows\": {\n            \"location\": \"local\",\n            \"path\": \"Binalyze\\\\AIR\",\n            \"useMostFreeVolume\": false,\n            \"volume\": \"C:\",\n            \"tmp\": \"Binalyze\\\\AIR\\\\tmp\"\n        },\n        \"linux\": {\n            \"location\": \"local\",\n            \"path\": \"opt/binalyze/air\",\n            \"useMostFreeVolume\": false,\n            \"volume\": \"/\",\n            \"tmp\": \"opt/binalyze/air/tmp\"\n        },\n        \"macos\": {\n            \"location\": \"local\",\n            \"path\": \"opt/binalyze/air\",\n            \"useMostFreeVolume\": false,\n            \"volume\": \"/\",\n            \"tmp\": \"opt/binalyze/air/tmp\"\n        }\n    },\n    \"compression\": {\n        \"enabled\": true,\n        \"encryption\": {\n            \"enabled\": true,\n            \"password\": \"pass\"\n        }\n    },\n    \"sendTo\": {\n        \"location\": \"user-local\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/{{apiPrefix}}/policies",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"{{apiPrefix}}",
										"policies"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "984"
								},
								{
									"key": "ETag",
									"value": "W/\"3d8-SnTDGj7wfLLX2XcIzyhqEdieRZE\""
								},
								{
									"key": "Date",
									"value": "Wed, 29 Jun 2022 20:30:46 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"result\": {\n        \"_id\": \"RzMzEa3y6gLnknqyZ6RqrVwA\",\n        \"name\": \"Example\",\n        \"organizationIds\": [\n            0\n        ],\n        \"default\": false,\n        \"order\": 6,\n        \"filter\": {\n            \"operator\": \"and\",\n            \"conditions\": [\n                {\n                    \"operator\": \"and\",\n                    \"conditions\": [\n                        {\n                            \"field\": \"groupFullPath\",\n                            \"operator\": \"equals\",\n                            \"value\": \"All Endpoints\\\\Computers\",\n                            \"id\": \"test-id\",\n                            \"disabled\": true,\n                            \"version\": \"2.10.0\"\n                        }\n                    ]\n                }\n            ]\n        },\n        \"cpu\": {\n            \"limit\": 100\n        },\n        \"saveTo\": {\n            \"windows\": {\n                \"location\": \"local\",\n                \"path\": \"Binalyze\\\\AIR\",\n                \"useMostFreeVolume\": false,\n                \"volume\": \"C:\",\n                \"tmp\": \"Binalyze\\\\AIR\\\\tmp\"\n            },\n            \"linux\": {\n                \"location\": \"local\",\n                \"path\": \"opt/binalyze/air\",\n                \"useMostFreeVolume\": false,\n                \"volume\": \"/\",\n                \"tmp\": \"opt/binalyze/air/tmp\"\n            },\n            \"macos\": {\n                \"location\": \"local\",\n                \"path\": \"opt/binalyze/air\",\n                \"useMostFreeVolume\": false,\n                \"volume\": \"/\",\n                \"tmp\": \"opt/binalyze/air/tmp\"\n            }\n        },\n        \"sendTo\": {\n            \"location\": \"user-local\"\n        },\n        \"compression\": {\n            \"enabled\": true,\n            \"encryption\": {\n                \"enabled\": true,\n                \"password\": \"pass\"\n            }\n        },\n        \"createdBy\": \"demo@binalyze.com\",\n        \"createdAt\": \"2022-06-29T20:30:46.031Z\",\n        \"updatedAt\": \"2022-06-29T20:30:46.031Z\"\n    },\n    \"statusCode\": 200,\n    \"errors\": []\n}"
						}
					]
				},
				{
					"name": "Update Policy by ID",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const uuid = require('uuid')",
									"",
									"pm.runForTest(() => {",
									"    pm.request.url.variables.add({",
									"        key: 'id',",
									"        value: pm.collectionVariables.get('policyId')",
									"    })",
									"",
									"    const payload = JSON.parse(pm.request.body.raw)",
									"    payload.name = `Policy - ${uuid.v4().substr(0, 8)}`",
									"    pm.request.body.raw = JSON.stringify(payload)",
									"})"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"content-type": true
						}
					},
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Test Policy\",\n    \"organizationIds\": [\n        0\n    ],\n    \"filter\": {\n        \"operator\": \"and\",\n        \"conditions\": [\n            {\n                \"operator\": \"and\",\n                \"conditions\": [\n                    {\n                        \"field\": \"groupFullPath\",\n                        \"operator\": \"equals\",\n                        \"value\": \"All Endpoints\\\\Computers\",\n                        \"id\": \"test-id\",\n                        \"disabled\": true,\n                        \"version\": \"2.10.0\"\n                    }\n                ]\n            }\n        ]\n    },\n    \"cpu\": {\n        \"limit\": 100\n    },\n    \"saveTo\": {\n        \"windows\": {\n            \"location\": \"local\",\n            \"path\": \"Binalyze\\\\AIR\",\n            \"useMostFreeVolume\": false,\n            \"volume\": \"C:\",\n            \"tmp\": \"Binalyze\\\\AIR\\\\tmp\"\n        },\n        \"linux\": {\n            \"location\": \"local\",\n            \"path\": \"opt/binalyze/air\",\n            \"useMostFreeVolume\": false,\n            \"volume\": \"/\",\n            \"tmp\": \"opt/binalyze/air/tmp\"\n        },\n        \"macos\": {\n            \"location\": \"local\",\n            \"path\": \"opt/binalyze/air\",\n            \"useMostFreeVolume\": false,\n            \"volume\": \"/\",\n            \"tmp\": \"opt/binalyze/air/tmp\"\n        }\n    },\n    \"compression\": {\n        \"enabled\": true,\n        \"encryption\": {\n            \"enabled\": true,\n            \"password\": \"pass\"\n        }\n    },\n    \"sendTo\": {\n        \"location\": \"user-local\"\n    }\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/{{apiPrefix}}/policies/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"{{apiPrefix}}",
								"policies",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "",
									"description": "Policy ID"
								}
							]
						},
						"description": "### Parameters\n| **Name** | **Constraints** |\n| ---------------------------------------------------------------------------------------------- | ---------------------------------------------------------- |\n| **name** <br>string / required | |\n| **organizationIds** <br>number array / required | |\n| **cpu** <br>object / required | |\n| **cpu.limit** <br>number / required | min: 1 <br> max: 100 |\n| **compression** <br>object / required | |\n| **compression.enabled** <br>boolean / required | |\n| **compression.encryption** <br>object / required | |\n| **compression.encryption.enabled** <br>boolean / required | |\n| **compression.encryption.password** <br>string / if encryption is enabled: required | |\n| **sendTo** <br>object / required | |\n| **sendTo.location** <br>string / required | valid values: user-local, repository |\n| **sendTo.repositoryId** <br>string / if location is repository: required | |\n| **saveTo.windows.location** <br>string / required | valid values: local, repository |\n| **saveTo.windows.path** <br>string / if location is local: required | |\n| **saveTo.windows.repositoryId** <br>string / if location is repository: required | |\n| **saveTo.windows.useMostFreeVolume** <br>boolean / required | |\n| **saveTo.windows.volume** <br>string / if useMostFreeVolume is false: required | Regex: /^[a-zA-Z]:/ <br>Example: \"C:\" |\n| **saveTo.windows.tmp** <br>string / optional | |\n| **saveTo.linux.location** <br>string / required | valid values: local, repository |\n| **saveTo.linux.path** <br>string / if location is local: required | |\n| **saveTo.linux.repositoryId** <br>string / if location is repository: required | |\n| **saveTo.linux.useMostFreeVolume** <br>boolean / required | |\n| **saveTo.linux.volume** <br>string / if useMostFreeVolume is false: required | Regex: /^[/].\\*/ <br>Example: \"/\" |\n| **saveTo.linux.tmp** <br>string / optional | |\n| **saveTo.macos.location** <br>string / required | valid values: local, repository |\n| **saveTo.macos.path** <br>string / if location is local: required | |\n| **saveTo.macos.repositoryId** <br>string / if location is repository: required | |\n| **saveTo.macos.useMostFreeVolume** <br>boolean / required | |\n| **saveTo.macos.volume** <br>string / optional | Regex: /^[/].\\*/ <br>Example: \"/\" |\n| **saveTo.macos.tmp** <br>string / optional | |\n| **filter** <br>object / required | |\n| **filter.operator** <br>string / required | valid values: and, or |\n| **filter.conditions** <br>object array / required | |\n| **filter.conditions.\\*.operator** <br>string / required | valid values: and, or |\n| **filter.conditions.\\*.conditions** <br>object array / required | valid values: and, or |\n| **filter.conditions.\\*.conditions.field** <br>string / required | valid values: organizationId, ipAddress, name, label, groupFullPath, os, version, tags, platform, isServer |\n| **filter.conditions.\\*.conditions.operator** <br>string / required | valid values: equals, contains, matches, in, all, not-equal, not-contain, not-match, not-in, not-all |\n| **filter.conditions.\\*.conditions.value** <br>string / required | |"
					},
					"response": [
						{
							"name": "Update Policy by ID - 200 OK",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"name": "Content-Type",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Test Policy\",\n    \"organizationIds\": [\n        0\n    ],\n    \"filter\": {\n        \"operator\": \"and\",\n        \"conditions\": [\n            {\n                \"operator\": \"and\",\n                \"conditions\": [\n                    {\n                        \"field\": \"groupFullPath\",\n                        \"operator\": \"equals\",\n                        \"value\": \"All Endpoints\\\\Computers\"\n                    }\n                ]\n            }\n        ]\n    },\n    \"cpu\": {\n        \"limit\": 100\n    },\n    \"saveTo\": {\n        \"windows\": {\n            \"location\": \"local\",\n            \"path\": \"Binalyze\\\\AIR\",\n            \"useMostFreeVolume\": false,\n            \"volume\": \"C:\",\n            \"tmp\": \"Binalyze\\\\AIR\\\\tmp\"\n        },\n        \"linux\": {\n            \"location\": \"local\",\n            \"path\": \"opt/binalyze/air\",\n            \"useMostFreeVolume\": false,\n            \"volume\": \"/\",\n            \"tmp\": \"opt/binalyze/air/tmp\"\n        },\n        \"macos\": {\n            \"location\": \"local\",\n            \"path\": \"opt/binalyze/air\",\n            \"useMostFreeVolume\": false,\n            \"volume\": \"/\",\n            \"tmp\": \"opt/binalyze/air/tmp\"\n        }\n    },\n    \"compression\": {\n        \"enabled\": true,\n        \"encryption\": {\n            \"enabled\": true,\n            \"password\": \"pass\"\n        }\n    },\n    \"sendTo\": {\n        \"location\": \"user-local\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/{{apiPrefix}}/policies/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"{{apiPrefix}}",
										"policies",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "",
											"description": "Policy ID"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "988"
								},
								{
									"key": "ETag",
									"value": "W/\"3dc-WdsW6jixavcuoifiMwGKMLBw+vo\""
								},
								{
									"key": "Date",
									"value": "Wed, 29 Jun 2022 20:31:12 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"result\": {\n        \"_id\": \"RzMzEa3y6gLnknqyZ6RqrVwA\",\n        \"name\": \"Test Policy\",\n        \"organizationIds\": [\n            0\n        ],\n        \"default\": false,\n        \"order\": 6,\n        \"filter\": {\n            \"operator\": \"and\",\n            \"conditions\": [\n                {\n                    \"operator\": \"and\",\n                    \"conditions\": [\n                        {\n                            \"field\": \"groupFullPath\",\n                            \"operator\": \"equals\",\n                            \"value\": \"All Endpoints\\\\Computers\",\n                            \"id\": \"test-id\",\n                            \"disabled\": true,\n                            \"version\": \"2.10.0\"\n                        }\n                    ]\n                }\n            ]\n        },\n        \"cpu\": {\n            \"limit\": 100\n        },\n        \"saveTo\": {\n            \"windows\": {\n                \"location\": \"local\",\n                \"path\": \"Binalyze\\\\AIR\",\n                \"useMostFreeVolume\": false,\n                \"volume\": \"C:\",\n                \"tmp\": \"Binalyze\\\\AIR\\\\tmp\"\n            },\n            \"linux\": {\n                \"location\": \"local\",\n                \"path\": \"opt/binalyze/air\",\n                \"useMostFreeVolume\": false,\n                \"volume\": \"/\",\n                \"tmp\": \"opt/binalyze/air/tmp\"\n            },\n            \"macos\": {\n                \"location\": \"local\",\n                \"path\": \"opt/binalyze/air\",\n                \"useMostFreeVolume\": false,\n                \"volume\": \"/\",\n                \"tmp\": \"opt/binalyze/air/tmp\"\n            }\n        },\n        \"sendTo\": {\n            \"location\": \"user-local\"\n        },\n        \"compression\": {\n            \"enabled\": true,\n            \"encryption\": {\n                \"enabled\": true,\n                \"password\": \"pass\"\n            }\n        },\n        \"createdBy\": \"demo@binalyze.com\",\n        \"createdAt\": \"2022-06-29T20:30:46.031Z\",\n        \"updatedAt\": \"2022-06-29T20:31:12.146Z\"\n    },\n    \"statusCode\": 200,\n    \"errors\": []\n}"
						},
						{
							"name": "Update Policy by ID - 404 Not Found",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"name": "Content-Type",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Test Policy\",\n    \"organizationIds\": [\n        0\n    ],\n    \"filter\": {\n        \"operator\": \"and\",\n        \"conditions\": [\n            {\n                \"operator\": \"and\",\n                \"conditions\": [\n                    {\n                        \"field\": \"groupFullPath\",\n                        \"operator\": \"equals\",\n                        \"value\": \"All Endpoints\\\\Computers\"\n                    }\n                ]\n            }\n        ]\n    },\n    \"cpu\": {\n        \"limit\": 100\n    },\n    \"saveTo\": {\n        \"windows\": {\n            \"location\": \"local\",\n            \"path\": \"Binalyze\\\\AIR\",\n            \"useMostFreeVolume\": false,\n            \"volume\": \"C:\",\n            \"tmp\": \"Binalyze\\\\AIR\\\\tmp\"\n        },\n        \"linux\": {\n            \"location\": \"local\",\n            \"path\": \"opt/binalyze/air\",\n            \"useMostFreeVolume\": false,\n            \"volume\": \"/\",\n            \"tmp\": \"opt/binalyze/air/tmp\"\n        },\n        \"macos\": {\n            \"location\": \"local\",\n            \"path\": \"opt/binalyze/air\",\n            \"useMostFreeVolume\": false,\n            \"volume\": \"/\",\n            \"tmp\": \"opt/binalyze/air/tmp\"\n        }\n    },\n    \"compression\": {\n        \"enabled\": true,\n        \"encryption\": {\n            \"enabled\": true,\n            \"password\": \"pass\"\n        }\n    },\n    \"sendTo\": {\n        \"location\": \"user-local\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/{{apiPrefix}}/policies/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"{{apiPrefix}}",
										"policies",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "eQVHVuAtgBhJSrJvDYBGaWWra",
											"description": "Policy ID"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "97"
								},
								{
									"key": "ETag",
									"value": "W/\"61-Ylo7XgCLA6IEgqTgUYRrufod4aY\""
								},
								{
									"key": "Date",
									"value": "Wed, 29 Jun 2022 05:52:26 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"errors\": [\n        \"No policies found by provided id(s)\"\n    ],\n    \"statusCode\": 404,\n    \"result\": null\n}"
						}
					]
				},
				{
					"name": "Get Policies",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const policyIds = JSON.parse(responseBody).result.entities",
									"    .filter(p => p.organizationIds.toString() == \"0\")",
									"    .map(p => p._id)",
									"",
									"pm.collectionVariables.set('policyIds', policyIds)",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/{{apiPrefix}}/policies?filter[organizationIds]=0",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"{{apiPrefix}}",
								"policies"
							],
							"query": [
								{
									"key": "filter[organizationIds]",
									"value": "0"
								}
							]
						}
					},
					"response": [
						{
							"name": "Get Policies - 200 OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/{{apiPrefix}}/policies?filter[organizationIds]=1",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"{{apiPrefix}}",
										"policies"
									],
									"query": [
										{
											"key": "filter[organizationIds]",
											"value": "1"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "786"
								},
								{
									"key": "ETag",
									"value": "W/\"312-MiDd9k5iiLEJ3O0woQeQJ5/Og1w\""
								},
								{
									"key": "Date",
									"value": "Wed, 29 Jun 2022 05:43:18 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"result\": {\n        \"entities\": [\n            {\n                \"_id\": \"System\",\n                \"name\": \"Default Policy\",\n                \"organizationIds\": [],\n                \"default\": true,\n                \"order\": 0,\n                \"cpu\": {\n                    \"limit\": 100\n                },\n                \"saveTo\": {\n                    \"windows\": {\n                        \"location\": \"local\",\n                        \"path\": \"Binalyze\\\\AIR\",\n                        \"useMostFreeVolume\": true,\n                        \"volume\": \"C:\"\n                    },\n                    \"linux\": {\n                        \"location\": \"local\",\n                        \"path\": \"opt/binalyze/air/agent\",\n                        \"useMostFreeVolume\": true,\n                        \"volume\": \"/\"\n                    },\n                    \"macos\": {\n                        \"useMostFreeVolume\": false,\n                        \"location\": \"local\",\n                        \"path\": \"opt/binalyze/air\",\n                        \"volume\": \"/\",\n                        \"tmp\": \"opt/binalyze/air/tmp\"\n                    }\n                },\n                \"sendTo\": {\n                    \"location\": \"user-local\"\n                },\n                \"compression\": {\n                    \"enabled\": true,\n                    \"encryption\": {\n                        \"enabled\": false\n                    }\n                },\n                \"createdBy\": \"System\",\n                \"updatedAt\": \"2022-06-25T11:46:53.620Z\"\n            }\n        ],\n        \"filters\": [],\n        \"sortables\": [],\n        \"totalEntityCount\": 1,\n        \"currentPage\": 1,\n        \"pageSize\": 1,\n        \"previousPage\": 0,\n        \"totalPageCount\": 1,\n        \"nextPage\": 2\n    },\n    \"statusCode\": 200,\n    \"errors\": []\n}"
						},
						{
							"name": "Get Policies - 400 Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/{{apiPrefix}}/policies",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"{{apiPrefix}}",
										"policies"
									],
									"query": [
										{
											"key": "filter[organizationIds]",
											"value": "1",
											"disabled": true
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "100"
								},
								{
									"key": "ETag",
									"value": "W/\"64-0dZahibur8gfpdjDGd/+kpCpojg\""
								},
								{
									"key": "Date",
									"value": "Wed, 29 Jun 2022 05:48:32 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"errors\": [\n        \"'organizationIds' should not be empty.\"\n    ],\n    \"statusCode\": 400,\n    \"result\": null\n}"
						}
					]
				},
				{
					"name": "Get Policy by ID",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.runForTest(() => {",
									"    pm.request.url.variables.add({",
									"        key: 'id', ",
									"        value: pm.collectionVariables.get('policyId')",
									"    })",
									"})"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"content-type": true
						}
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/{{apiPrefix}}/policies/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"{{apiPrefix}}",
								"policies",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "",
									"description": "Policy ID"
								}
							]
						}
					},
					"response": [
						{
							"name": "Get Policy by ID - 200 OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/{{apiPrefix}}/policies/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"{{apiPrefix}}",
										"policies",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "System",
											"description": "Policy ID"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "644"
								},
								{
									"key": "ETag",
									"value": "W/\"284-89uXNUEW+2l6Nv5QYyE/NPpP5oE\""
								},
								{
									"key": "Date",
									"value": "Wed, 29 Jun 2022 05:53:23 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"result\": {\n        \"_id\": \"System\",\n        \"name\": \"Default Policy\",\n        \"organizationIds\": [],\n        \"default\": true,\n        \"order\": 0,\n        \"cpu\": {\n            \"limit\": 100\n        },\n        \"saveTo\": {\n            \"windows\": {\n                \"location\": \"local\",\n                \"path\": \"Binalyze\\\\AIR\",\n                \"useMostFreeVolume\": true,\n                \"volume\": \"C:\"\n            },\n            \"linux\": {\n                \"location\": \"local\",\n                \"path\": \"opt/binalyze/air/agent\",\n                \"useMostFreeVolume\": true,\n                \"volume\": \"/\"\n            },\n            \"macos\": {\n                \"useMostFreeVolume\": false,\n                \"location\": \"local\",\n                \"path\": \"opt/binalyze/air\",\n                \"volume\": \"/\",\n                \"tmp\": \"opt/binalyze/air/tmp\"\n            }\n        },\n        \"sendTo\": {\n            \"location\": \"user-local\"\n        },\n        \"compression\": {\n            \"enabled\": true,\n            \"encryption\": {\n                \"enabled\": false\n            }\n        },\n        \"createdBy\": \"System\",\n        \"updatedAt\": \"2022-06-25T11:46:53.620Z\"\n    },\n    \"statusCode\": 200,\n    \"errors\": []\n}"
						},
						{
							"name": "Get Policy by ID - 404 Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/{{apiPrefix}}/policies/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"{{apiPrefix}}",
										"policies",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "Systema",
											"description": "Policy ID"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "97"
								},
								{
									"key": "ETag",
									"value": "W/\"61-Ylo7XgCLA6IEgqTgUYRrufod4aY\""
								},
								{
									"key": "Date",
									"value": "Wed, 29 Jun 2022 05:53:36 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"errors\": [\n        \"No policies found by provided id(s)\"\n    ],\n    \"statusCode\": 404,\n    \"result\": null\n}"
						}
					]
				},
				{
					"name": "Update Policies Priorities",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.runForTest(() => {",
									"    const payload = JSON.parse(pm.request.body.raw)",
									"    payload.ids = pm.collectionVariables.get('policyIds').toString().split(',')",
									"    pm.request.body.raw = JSON.stringify(payload)",
									"})"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"content-type": true
						}
					},
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"ids\": [],\n    \"organizationIds\": [\n        0\n    ]\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/{{apiPrefix}}/policies/priorities",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"{{apiPrefix}}",
								"policies",
								"priorities"
							]
						},
						"description": "### Parameters\n\n| **Name**                                        | **Constraints** |\n| ----------------------------------------------- | --------------- |\n| **ids** <br>string array / required             |                 |\n| **organizationIds** <br>number array / required |                 |"
					},
					"response": [
						{
							"name": "Update Policies Priorities - 200 OK",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"ids\": [\n        \"HmEXOhnVuo4o5CDHJwnZqfNI\",\n        \"lhPpXWyzAIpArooH7f928QfQ\"\n    ],\n    \"organizationIds\": [0]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/{{apiPrefix}}/policies/priorities",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"{{apiPrefix}}",
										"policies",
										"priorities"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "59"
								},
								{
									"key": "ETag",
									"value": "W/\"3b-MHtur75ftUyQ2IfDqFjH6SAxAM4\""
								},
								{
									"key": "Date",
									"value": "Wed, 29 Jun 2022 05:56:32 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"result\": null,\n    \"statusCode\": 200,\n    \"errors\": []\n}"
						},
						{
							"name": "Update Policies Priorities - 400 Bad Request",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"name": "Content-Type",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"ids\": [\n        \"S7Ua5KHMQBqca8GctpMYTBSe\",\n        \"gtRw075J0fMPCU1P7epopUSg\",\n        \"Hvub9U6NIJIiRe1PDuFpch01\",\n        \"K2dW1kP0i1oU0eA7UeYlevxr\",\n        \"IwUANG8LYWPrSlvpkVvniyy2\"\n    ],\n    \"organizationIds\": []\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/{{apiPrefix}}/policies/priorities",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"{{apiPrefix}}",
										"policies",
										"priorities"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "112"
								},
								{
									"key": "ETag",
									"value": "W/\"70-JIXjJByRkaoQ3sHoN/hEOfMNnmY\""
								},
								{
									"key": "Date",
									"value": "Wed, 29 Jun 2022 05:53:54 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"errors\": [\n        \"The first order must belong to the default policy!\"\n    ],\n    \"statusCode\": 400,\n    \"result\": null\n}"
						},
						{
							"name": "Update Policies Priorities - 409 Conflict",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"ids\": [\n        \"System\",\n        \"HmEXOhnVuo4o5CDHJwnZqfNI\",\n        \"lhPpXWyzAIpArooH7f928QfQ\"\n    ],\n    \"organizationIds\": []\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/{{apiPrefix}}/policies/priorities",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"{{apiPrefix}}",
										"policies",
										"priorities"
									]
								}
							},
							"status": "Conflict",
							"code": 409,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "134"
								},
								{
									"key": "ETag",
									"value": "W/\"86-A8zwK9LlX/jE28o4w1m2fzFYR4I\""
								},
								{
									"key": "Date",
									"value": "Wed, 29 Jun 2022 05:55:10 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"errors\": [\n        \"The policies that are provided do not match to policies in the database!\"\n    ],\n    \"statusCode\": 409,\n    \"result\": null\n}"
						}
					]
				},
				{
					"name": "Get Policy Match Stats by Filter",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"content-type": true
						}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"\",\n    \"searchTerm\": \"\",\n    \"ipAddress\": \"\",\n    \"groupId\": \"\",\n    \"groupFullPath\": \"\",\n    \"managedStatus\": [],\n    \"isolationStatus\": [],\n    \"platform\": [],\n    \"issue\": \"\",\n    \"onlineStatus\": [],\n    \"tags\": [],\n    \"version\": \"\",\n    \"policy\": \"\",\n    \"includedEndpointIds\": [],\n    \"excludedEndpointIds\": [],\n    \"organizationIds\": [\n        0\n    ]\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/{{apiPrefix}}/policies/match-stats",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"{{apiPrefix}}",
								"policies",
								"match-stats"
							]
						},
						"description": "### Parameters\n\n| **Name**                                        | **Constraints** |\n| ----------------------------------------------- | --------------- |\n| **organizationIds** <br>number array / required | |\n| **searchTerm** <br>string / optional | |\n| **name** <br>string / optional | |\n| **ipAddress** <br>string / optional | |\n| **groupId** <br>string / optional | |\n| **groupFullPath** <br>string / optional | |\n| **label** <br>string / optional | |\n| **lastSeen** <br>string / optional | Example: 2023-03-06T21:00:00.000Z,2023-03-24T21:00:00.000Z |\n| **managedStatus** <br>string array / optional | valid values: unmanaged, managed, off-network |\n| **isolationStatus** <br>string array / optional | valid values: isolating, isolated, unisolating, unisolated |\n| **platform** <br>string array / optional | valid values: windows, linux, darwin |\n| **issue** <br>string array / optional | valid values: unreachable, old-version, update-required |\n| **onlineStatus** <br>string array / optional | valid values: online, offline |\n| **tags** <br>string array / optional | |\n| **version** <br>string / optional | |\n| **policy** <br>string / optional | |\n| **includedEndpointIds** <br>string array / optional | |\n| **excludedEndpointIds** <br>string array / optional | |\n| **caseId** <br>string / optional | |\n| **awsRegions** <br>string array / optional | |\n| **azureRegions** <br>string array / optional | |"
					},
					"response": [
						{
							"name": "Get Policy Match Stats by Filter - 200 OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"\",\n    \"searchTerm\": \"\",\n    \"ipAddress\": \"\",\n    \"groupId\": \"\",\n    \"groupFullPath\": \"\",\n    \"managedStatus\": [],\n    \"isolationStatus\": [],\n    \"platform\": [],\n    \"issue\": \"\",\n    \"onlineStatus\": [],\n    \"tags\": [],\n    \"version\": \"\",\n    \"policy\": \"\",\n    \"includedEndpointIds\": [],\n    \"excludedEndpointIds\": [],\n    \"organizationIds\": [\n        0,\n        1\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/{{apiPrefix}}/policies/match-stats",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"{{apiPrefix}}",
										"policies",
										"match-stats"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "109"
								},
								{
									"key": "ETag",
									"value": "W/\"6d-tcU8VJGQGT1hY5PlGt7LVSVg078\""
								},
								{
									"key": "Date",
									"value": "Wed, 29 Jun 2022 05:54:12 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"result\": [\n        {\n            \"_id\": \"System\",\n            \"name\": \"Default Policy\",\n            \"count\": 339\n        }\n    ],\n    \"statusCode\": 200,\n    \"errors\": []\n}"
						},
						{
							"name": "Get Policy Match Stats by Filter - 400 Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"\",\n    \"searchTerm\": \"\",\n    \"ipAddress\": \"\",\n    \"groupId\": \"\",\n    \"groupFullPath\": \"\",\n    \"managedStatus\": [],\n    \"isolationStatus\": [],\n    \"platform\": [],\n    \"issue\": \"\",\n    \"onlineStatus\": [],\n    \"tags\": [],\n    \"version\": \"\",\n    \"policy\": \"\",\n    \"includedEndpointIds\": [],\n    \"excludedEndpointIds\": [],\n    \"organizationIds\": [\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/{{apiPrefix}}/policies/match-stats",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"{{apiPrefix}}",
										"policies",
										"match-stats"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "100"
								},
								{
									"key": "ETag",
									"value": "W/\"64-0dZahibur8gfpdjDGd/+kpCpojg\""
								},
								{
									"key": "Date",
									"value": "Wed, 29 Jun 2022 05:54:23 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"errors\": [\n        \"'organizationIds' should not be empty.\"\n    ],\n    \"statusCode\": 400,\n    \"result\": null\n}"
						}
					]
				},
				{
					"name": "Delete Policy by ID",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.runForTest(() => {",
									"    pm.request.url.variables.add({",
									"        key: 'id', ",
									"        value: pm.collectionVariables.get('policyId')",
									"    })",
									"})",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseUrl}}/{{apiPrefix}}/policies/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"{{apiPrefix}}",
								"policies",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "",
									"description": "Policy ID"
								}
							]
						}
					},
					"response": [
						{
							"name": "Delete Policy by ID - 200 OK",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{baseUrl}}/{{apiPrefix}}/policies/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"{{apiPrefix}}",
										"policies",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "eQVHVuAtgBhJSrJvDYBGaWWr",
											"description": "Policy ID"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "59"
								},
								{
									"key": "ETag",
									"value": "W/\"3b-MHtur75ftUyQ2IfDqFjH6SAxAM4\""
								},
								{
									"key": "Date",
									"value": "Wed, 29 Jun 2022 05:52:51 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"result\": null,\n    \"statusCode\": 200,\n    \"errors\": []\n}"
						},
						{
							"name": "Delete Policy by ID - 404 Not Found",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{baseUrl}}/{{apiPrefix}}/policies/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"{{apiPrefix}}",
										"policies",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "eQVHVuAtgBhJSrJvDYBGaWWr",
											"description": "Policy ID"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "97"
								},
								{
									"key": "ETag",
									"value": "W/\"61-Ylo7XgCLA6IEgqTgUYRrufod4aY\""
								},
								{
									"key": "Date",
									"value": "Wed, 29 Jun 2022 05:52:57 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"errors\": [\n        \"No policies found by provided id(s)\"\n    ],\n    \"statusCode\": 404,\n    \"result\": null\n}"
						}
					]
				}
			]
		},
		{
			"name": "Tasks",
			"item": [
				{
					"name": "Assignments",
					"item": [
						{
							"name": "Get Task Assignments by Task ID",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.runForTest(() => {",
											"    pm.request.url.variables.add({",
											"        key: 'id',",
											"        value: pm.collectionVariables.get('taskId')",
											"    })",
											"})"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"const assignmentId = JSON.parse(responseBody).result.entities[0]._id",
											"pm.collectionVariables.set('assignmentId', assignmentId)",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/{{apiPrefix}}/tasks/:id/assignments",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"{{apiPrefix}}",
										"tasks",
										":id",
										"assignments"
									],
									"query": [
										{
											"key": "pageNumber",
											"value": "",
											"description": "Which page of results to return",
											"disabled": true
										},
										{
											"key": "pageSize",
											"value": "",
											"description": "How many results to return per page",
											"disabled": true
										},
										{
											"key": "sortBy",
											"value": "",
											"description": "Attribute name to order the responses by",
											"disabled": true
										},
										{
											"key": "sortType",
											"value": "",
											"description": "Either ASC or DESC",
											"disabled": true
										},
										{
											"key": "filter[searchTerm]",
											"value": "",
											"disabled": true
										},
										{
											"key": "filter[status]",
											"value": "",
											"disabled": true
										},
										{
											"key": "filter[hasDroneData]",
											"value": null,
											"description": "yes, no",
											"disabled": true
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "",
											"description": "Task ID"
										}
									]
								},
								"description": "### Parameters\n\n| **Name**                                        | **Constraints**                                                                                                                                                 |\n| ----------------------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| **pageNumber** <br>number / optional            | default value: 1 <br>min value:1                                                                                                                                |\n| **pageSize** <br>number / optional              | default value: 10 <br>min value:1                                                                                                                               |\n| **sortBy** <br>string / optional                | default value: createdAt                                                                                                                                        |\n| **sortType** <br>string / optional              | default value: ASC <br>valid values: ASC, DESC                                                                                                                  |\n| **filter[searchTerm]** <br>string / optional    |                                                                                                                                                                 |\n| **filter[caseIds]** <br>string / optional   |                                                                                                                                                                 |\n| **filter[status]** <br>string / optional        | valid values: scheduled, assigned, processing, completed, failed, expired, cancelled, compressing, uploading, analyzing, partially-completed                    |"
							},
							"response": [
								{
									"name": "Get Task Assignments by Task ID - 200 OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/{{apiPrefix}}/tasks/:id/assignments",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"{{apiPrefix}}",
												"tasks",
												":id",
												"assignments"
											],
											"query": [
												{
													"key": "pageNumber",
													"value": "1",
													"disabled": true
												},
												{
													"key": "pageSize",
													"value": "10",
													"disabled": true
												},
												{
													"key": "filter[searchTerm]",
													"value": "centos",
													"disabled": true
												},
												{
													"key": "filter[status]",
													"value": "processing",
													"disabled": true
												},
												{
													"key": "sortBy",
													"value": "createdAt",
													"disabled": true
												},
												{
													"key": "sortType",
													"value": "asc",
													"disabled": true
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "b6f54dbc-3b3f-46cd-8489-911c50a1038b",
													"description": "Task ID"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "1005"
										},
										{
											"key": "ETag",
											"value": "W/\"3ed-U0W0MQAxVaoufPNzaLBVgpubWl4\""
										},
										{
											"key": "Date",
											"value": "Fri, 27 May 2022 18:11:21 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"result\": {\n        \"entities\": [\n            {\n                \"_id\": \"1e18c426-b00a-44d1-9102-faa80b594fd0\",\n                \"taskId\": \"b6f54dbc-3b3f-46cd-8489-911c50a1038b\",\n                \"name\": \"Example Case Acquisition 002\",\n                \"type\": \"acquisition\",\n                \"endpointId\": \"bc906dea-f92d-46b3-87f2-a2fc36667f70\",\n                \"endpointName\": \"Endpoint - 2\",\n                \"organizationId\": 0,\n                \"status\": \"assigned\",\n                \"recurrence\": null,\n                \"progress\": 0,\n                \"duration\": null,\n                \"caseIds\": [\n                    \"C-2022-0001\"\n                ],\n                \"createdAt\": \"2022-05-22T19:24:50.152Z\",\n                \"updatedAt\": \"2022-05-22T19:24:50.152Z\",\n                \"response\": null\n            }\n        ],\n        \"filters\": [\n            {\n                \"name\": \"status\",\n                \"type\": \"checkbox\",\n                \"options\": [\n                    \"scheduled\",\n                    \"assigned\",\n                    \"processing\",\n                    \"completed\",\n                    \"failed\",\n                    \"expired\",\n                    \"cancelled\",\n                    \"compressing\",\n                    \"uploading\",\n                    \"analyzing\",\n                    \"partially-completed\"\n                ],\n                \"filterUrl\": null\n            },\n            {\n                \"name\": \"case\",\n                \"type\": \"checkbox\",\n                \"options\": [\n                    {\n                        \"label\": \"Example Case\",\n                        \"value\": \"C-2022-0001\"\n                    }\n                ],\n                \"filterUrl\": null\n            }\n        ],\n        \"sortables\": [\n            \"status\",\n            \"progress\",\n            \"startedAt\",\n            \"response.matchCount\"\n        ],\n        \"totalEntityCount\": 1,\n        \"currentPage\": 1,\n        \"pageSize\": 10,\n        \"previousPage\": 0,\n        \"totalPageCount\": 1,\n        \"nextPage\": 2\n    },\n    \"statusCode\": 200,\n    \"errors\": []\n}"
								},
								{
									"name": "Get Task Assignments by Task ID - 404 Not Found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/{{apiPrefix}}/tasks/:id/assignments",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"{{apiPrefix}}",
												"tasks",
												":id",
												"assignments"
											],
											"query": [
												{
													"key": "pageNumber",
													"value": "1",
													"disabled": true
												},
												{
													"key": "pageSize",
													"value": "10",
													"disabled": true
												},
												{
													"key": "filter[searchTerm]",
													"value": "centos",
													"disabled": true
												},
												{
													"key": "filter[status]",
													"value": "processing",
													"disabled": true
												},
												{
													"key": "sortBy",
													"value": "createdAt",
													"disabled": true
												},
												{
													"key": "sortType",
													"value": "asc",
													"disabled": true
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "b6f54dbc-3b3f-46cd-8489-911c50a10213",
													"description": "Task ID"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "96"
										},
										{
											"key": "ETag",
											"value": "W/\"60-aMfnZiKpibsEnjtgrBqXNzqZzmE\""
										},
										{
											"key": "Date",
											"value": "Fri, 27 May 2022 18:11:02 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": false,\n    \"errors\": [\n        \"No task(s) found by provided id(s)\"\n    ],\n    \"statusCode\": 404,\n    \"result\": null\n}"
								}
							]
						},
						{
							"name": "Cancel Task Assignment by Assignment ID",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.runForTest(() => {",
											"    pm.request.url.variables.add({",
											"        key: 'id',",
											"        value: pm.collectionVariables.get('assignmentId')",
											"    })",
											"})"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/{{apiPrefix}}/tasks/assignments/:id/cancel",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"{{apiPrefix}}",
										"tasks",
										"assignments",
										":id",
										"cancel"
									],
									"variable": [
										{
											"key": "id",
											"value": "",
											"description": "Task Assignment ID"
										}
									]
								}
							},
							"response": [
								{
									"name": "Cancel Task Assignment by Assignment ID - 200 OK",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/{{apiPrefix}}/tasks/assignments/:id/cancel",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"{{apiPrefix}}",
												"tasks",
												"assignments",
												":id",
												"cancel"
											],
											"variable": [
												{
													"key": "id",
													"value": "c073087e-cb47-4688-923d-ccf4ef8e2aa2",
													"description": "Task Assignment ID"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "59"
										},
										{
											"key": "ETag",
											"value": "W/\"3b-MHtur75ftUyQ2IfDqFjH6SAxAM4\""
										},
										{
											"key": "Date",
											"value": "Fri, 27 May 2022 18:18:14 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"result\": null,\n    \"statusCode\": 200,\n    \"errors\": []\n}"
								},
								{
									"name": "Cancel Task Assignment by Assignment ID - 404 Not Found",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/{{apiPrefix}}/tasks/assignments/:id/cancel",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"{{apiPrefix}}",
												"tasks",
												"assignments",
												":id",
												"cancel"
											],
											"variable": [
												{
													"key": "id",
													"value": "073087e-cb47-4688-923d-ccf4ef8e2aa2",
													"description": "Task Assignment ID"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "96"
										},
										{
											"key": "ETag",
											"value": "W/\"60-aMfnZiKpibsEnjtgrBqXNzqZzmE\""
										},
										{
											"key": "Date",
											"value": "Fri, 27 May 2022 18:17:52 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": false,\n    \"errors\": [\n        \"No task(s) found by provided id(s)\"\n    ],\n    \"statusCode\": 404,\n    \"result\": null\n}"
								}
							]
						},
						{
							"name": "Delete Task Assignment by ID",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.runForTest(() => {",
											"    pm.request.url.variables.add({",
											"        key: 'id',",
											"        value: pm.collectionVariables.get('assignmentId')",
											"    })",
											"})"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/{{apiPrefix}}/tasks/assignments/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"{{apiPrefix}}",
										"tasks",
										"assignments",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "",
											"description": "Task Assignment ID"
										}
									]
								}
							},
							"response": [
								{
									"name": "Delete Task Assignment by ID  - 200 OK",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/{{apiPrefix}}/tasks/assignments/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"{{apiPrefix}}",
												"tasks",
												"assignments",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "1e18c426-b00a-44d1-9102-faa80b594fd0",
													"description": "Task Assignment ID"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "59"
										},
										{
											"key": "ETag",
											"value": "W/\"3b-MHtur75ftUyQ2IfDqFjH6SAxAM4\""
										},
										{
											"key": "Date",
											"value": "Fri, 27 May 2022 18:13:42 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"result\": null,\n    \"statusCode\": 200,\n    \"errors\": []\n}"
								},
								{
									"name": "Delete Task Assignment by ID - 404 Not Found",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/{{apiPrefix}}/tasks/assignments/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"{{apiPrefix}}",
												"tasks",
												"assignments",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "b6f54dbc-3b3f-46cd-8489-911c50a1038b",
													"description": "Task Assignment ID"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "96"
										},
										{
											"key": "ETag",
											"value": "W/\"60-aMfnZiKpibsEnjtgrBqXNzqZzmE\""
										},
										{
											"key": "Date",
											"value": "Fri, 27 May 2022 18:13:28 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": false,\n    \"errors\": [\n        \"No task(s) found by provided id(s)\"\n    ],\n    \"statusCode\": 404,\n    \"result\": null\n}"
								}
							]
						}
					]
				},
				{
					"name": "Get Tasks",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"const taskId = JSON.parse(responseBody).result.entities[0]._id",
									"pm.collectionVariables.set('taskId', taskId)",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/{{apiPrefix}}/tasks?filter[organizationIds]=0",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"{{apiPrefix}}",
								"tasks"
							],
							"query": [
								{
									"key": "pageNumber",
									"value": "",
									"description": "Which page of results to return",
									"disabled": true
								},
								{
									"key": "pageSize",
									"value": "",
									"description": "How many results to return per page",
									"disabled": true
								},
								{
									"key": "sortBy",
									"value": "",
									"description": "Attribute name to order the responses by",
									"disabled": true
								},
								{
									"key": "sortType",
									"value": "",
									"description": "Either ASC or DESC",
									"disabled": true
								},
								{
									"key": "filter[type]",
									"value": "",
									"disabled": true
								},
								{
									"key": "filter[status]",
									"value": "",
									"disabled": true
								},
								{
									"key": "filter[executionType]",
									"value": "",
									"disabled": true
								},
								{
									"key": "filter[type]",
									"value": "",
									"disabled": true
								},
								{
									"key": "filter[searchTerm]",
									"value": "",
									"disabled": true
								},
								{
									"key": "filter[organizationIds]",
									"value": "0"
								}
							]
						},
						"description": "### Parameters\n\n| **Name**                                        | **Constraints**                                                                                                                                                 |\n| ----------------------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| **pageNumber** <br>number / optional            | default value: 1 <br>min value:1                                                                                                                                |\n| **pageSize** <br>number / optional              | default value: 10 <br>min value:1                                                                                                                               |\n| **sortBy** <br>string / optional                | default value: createdAt                                                                                                                                        |\n| **sortType** <br>string / optional              | default value: ASC <br>valid values: ASC, DESC                                                                                                                  |\n| **filter[searchTerm]** <br>string / optional    |                                                                                                                                                                 |\n| **filter[name]** <br>string / optional          |                                                                                                                                                                 |\n| **filter[endpointIds]** <br>string / optional   |                                                                                                                                                                 |\n| **filter[executionType]** <br>string / optional | valid values: instant, scheduled                                                                                                                                |\n| **filter[status]** <br>string / optional        | valid values: scheduled, assigned, processing, completed, failed, expired, cancelled, compressing, uploading, analyzing, partially-completed                    |\n| **filter[type]** <br>string / optional          | valid values: acquisition, offline-acquisition, triage, offline-triage, investigation, interact-shell, baseline-comparison, baseline-acquisition, acquire-image |"
					},
					"response": [
						{
							"name": "Get Tasks - 200 OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/{{apiPrefix}}/tasks?filter[organizationIds]=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"{{apiPrefix}}",
										"tasks"
									],
									"query": [
										{
											"key": "filter[type]",
											"value": "acquisition",
											"disabled": true
										},
										{
											"key": "filter[status]",
											"value": "procei",
											"disabled": true
										},
										{
											"key": "filter[executionType]",
											"value": "scheduled",
											"disabled": true
										},
										{
											"key": "filter[type]",
											"value": "triage",
											"disabled": true
										},
										{
											"key": "filter[searchTerm]",
											"value": "asd",
											"disabled": true
										},
										{
											"key": "filter[organizationIds]",
											"value": "0"
										},
										{
											"key": "pageNumber",
											"value": "3",
											"disabled": true
										},
										{
											"key": "pageSize",
											"value": "20",
											"disabled": true
										},
										{
											"key": "sortBy",
											"value": "createdAt",
											"disabled": true
										},
										{
											"key": "sortType",
											"value": "DESC",
											"disabled": true
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "5311"
								},
								{
									"key": "ETag",
									"value": "W/\"14bf-qBLlskDy61bOODfcfGCIivUQLkY\""
								},
								{
									"key": "Date",
									"value": "Fri, 27 May 2022 18:11:54 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"result\": {\n        \"entities\": [\n            {\n                \"_id\": \"c4fe4284-a593-46d1-8891-12f4d0a19e62\",\n                \"source\": \"user\",\n                \"totalAssignedEndpoints\": 7,\n                \"totalCompletedEndpoints\": 0,\n                \"totalFailedEndpoints\": 0,\n                \"totalCancelledEndpoints\": 0,\n                \"isScheduled\": false,\n                \"name\": \"Reboot 004\",\n                \"type\": \"reboot\",\n                \"organizationId\": 0,\n                \"status\": \"assigned\",\n                \"createdBy\": \"demo@binalyze.com\",\n                \"baseTaskId\": null,\n                \"startDate\": null,\n                \"recurrence\": null,\n                \"createdAt\": \"2022-05-27T17:47:30.675Z\",\n                \"updatedAt\": \"2022-05-27T17:47:30.693Z\"\n            },\n            {\n                \"_id\": \"40a9dc46-d401-4bd1-82d3-ca9cf97c9024\",\n                \"source\": \"user\",\n                \"totalAssignedEndpoints\": 1,\n                \"totalCompletedEndpoints\": 0,\n                \"totalFailedEndpoints\": 0,\n                \"totalCancelledEndpoints\": 0,\n                \"isScheduled\": false,\n                \"name\": \"Example Case Acquisition 004\",\n                \"type\": \"acquisition\",\n                \"organizationId\": 0,\n                \"status\": \"assigned\",\n                \"createdBy\": \"demo@binalyze.com\",\n                \"baseTaskId\": null,\n                \"startDate\": null,\n                \"recurrence\": null,\n                \"createdAt\": \"2022-05-27T17:47:06.858Z\",\n                \"updatedAt\": \"2022-05-27T17:47:06.872Z\"\n            },\n            {\n                \"_id\": \"c93f802f-6caf-4562-a55e-7a6fb333687d\",\n                \"source\": \"user\",\n                \"totalAssignedEndpoints\": 7,\n                \"totalCompletedEndpoints\": 0,\n                \"totalFailedEndpoints\": 0,\n                \"totalCancelledEndpoints\": 0,\n                \"isScheduled\": false,\n                \"name\": \"Reboot 003\",\n                \"type\": \"reboot\",\n                \"organizationId\": 0,\n                \"status\": \"assigned\",\n                \"createdBy\": \"demo@binalyze.com\",\n                \"baseTaskId\": null,\n                \"startDate\": null,\n                \"recurrence\": null,\n                \"createdAt\": \"2022-05-23T06:26:13.898Z\",\n                \"updatedAt\": \"2022-05-23T06:26:13.912Z\"\n            },\n            {\n                \"_id\": \"517ac6b7-92f1-4401-8f75-79931d73c2c1\",\n                \"source\": \"user\",\n                \"totalAssignedEndpoints\": 1,\n                \"totalCompletedEndpoints\": 0,\n                \"totalFailedEndpoints\": 0,\n                \"totalCancelledEndpoints\": 0,\n                \"isScheduled\": false,\n                \"name\": \"Log Retrieval 002\",\n                \"type\": \"log-retrieval\",\n                \"organizationId\": 0,\n                \"status\": \"assigned\",\n                \"createdBy\": \"demo@binalyze.com\",\n                \"baseTaskId\": null,\n                \"startDate\": null,\n                \"recurrence\": null,\n                \"createdAt\": \"2022-05-23T06:12:49.605Z\",\n                \"updatedAt\": \"2022-05-23T06:12:49.621Z\"\n            },\n            {\n                \"_id\": \"26aeb2db-9fd0-467c-a3ba-b74c675ef0c8\",\n                \"source\": \"user\",\n                \"totalAssignedEndpoints\": 1,\n                \"totalCompletedEndpoints\": 0,\n                \"totalFailedEndpoints\": 0,\n                \"totalCancelledEndpoints\": 0,\n                \"isScheduled\": false,\n                \"name\": \"Isolation 003\",\n                \"type\": \"isolation\",\n                \"organizationId\": 0,\n                \"status\": \"assigned\",\n                \"createdBy\": \"demo@binalyze.com\",\n                \"baseTaskId\": null,\n                \"startDate\": null,\n                \"recurrence\": null,\n                \"createdAt\": \"2022-05-23T06:12:35.880Z\",\n                \"updatedAt\": \"2022-05-23T06:12:35.892Z\"\n            },\n            {\n                \"_id\": \"cbed8ab3-24d1-4697-8552-6ff6a6c1fae6\",\n                \"source\": \"user\",\n                \"totalAssignedEndpoints\": 1,\n                \"totalCompletedEndpoints\": 0,\n                \"totalFailedEndpoints\": 0,\n                \"totalCancelledEndpoints\": 0,\n                \"isScheduled\": false,\n                \"name\": \"Version Update 002\",\n                \"type\": \"version-update\",\n                \"organizationId\": 0,\n                \"status\": \"assigned\",\n                \"createdBy\": \"demo@binalyze.com\",\n                \"baseTaskId\": null,\n                \"startDate\": null,\n                \"recurrence\": null,\n                \"createdAt\": \"2022-05-23T06:11:52.860Z\",\n                \"updatedAt\": \"2022-05-23T06:11:52.874Z\"\n            },\n            {\n                \"_id\": \"a5f2ee9d-066e-47dd-a436-ba27808d76fb\",\n                \"source\": \"user\",\n                \"totalAssignedEndpoints\": 1,\n                \"totalCompletedEndpoints\": 0,\n                \"totalFailedEndpoints\": 0,\n                \"totalCancelledEndpoints\": 0,\n                \"isScheduled\": false,\n                \"name\": \"Shutdown 004\",\n                \"type\": \"shutdown\",\n                \"organizationId\": 0,\n                \"status\": \"assigned\",\n                \"createdBy\": \"demo@binalyze.com\",\n                \"baseTaskId\": null,\n                \"startDate\": null,\n                \"recurrence\": null,\n                \"createdAt\": \"2022-05-23T06:10:46.804Z\",\n                \"updatedAt\": \"2022-05-23T06:10:46.820Z\"\n            },\n            {\n                \"_id\": \"8fe018d3-83de-4a6d-b7f4-bc97ed3b3156\",\n                \"source\": \"user\",\n                \"totalAssignedEndpoints\": 1,\n                \"totalCompletedEndpoints\": 0,\n                \"totalFailedEndpoints\": 0,\n                \"totalCancelledEndpoints\": 0,\n                \"isScheduled\": false,\n                \"name\": \"Reboot 002\",\n                \"type\": \"reboot\",\n                \"organizationId\": 0,\n                \"status\": \"assigned\",\n                \"createdBy\": \"demo@binalyze.com\",\n                \"baseTaskId\": null,\n                \"startDate\": null,\n                \"recurrence\": null,\n                \"createdAt\": \"2022-05-23T06:10:05.912Z\",\n                \"updatedAt\": \"2022-05-23T06:10:05.922Z\"\n            },\n            {\n                \"_id\": \"3c801542-d58e-4237-84b9-37651b455a38\",\n                \"source\": \"user\",\n                \"totalAssignedEndpoints\": 1,\n                \"totalCompletedEndpoints\": 0,\n                \"totalFailedEndpoints\": 0,\n                \"totalCancelledEndpoints\": 0,\n                \"isScheduled\": false,\n                \"name\": \"Example Case Acquisition 003\",\n                \"type\": \"acquisition\",\n                \"organizationId\": 0,\n                \"status\": \"assigned\",\n                \"createdBy\": \"demo@binalyze.com\",\n                \"baseTaskId\": null,\n                \"startDate\": null,\n                \"recurrence\": null,\n                \"createdAt\": \"2022-05-23T06:09:20.746Z\",\n                \"updatedAt\": \"2022-05-23T06:09:20.757Z\"\n            },\n            {\n                \"_id\": \"b6f54dbc-3b3f-46cd-8489-911c50a1038b\",\n                \"source\": \"user\",\n                \"totalAssignedEndpoints\": 1,\n                \"totalCompletedEndpoints\": 0,\n                \"totalFailedEndpoints\": 0,\n                \"totalCancelledEndpoints\": 0,\n                \"isScheduled\": false,\n                \"name\": \"Example Case Acquisition 002\",\n                \"type\": \"acquisition\",\n                \"organizationId\": 0,\n                \"status\": \"assigned\",\n                \"createdBy\": \"demo@binalyze.com\",\n                \"baseTaskId\": null,\n                \"startDate\": null,\n                \"recurrence\": null,\n                \"createdAt\": \"2022-05-22T19:24:50.142Z\",\n                \"updatedAt\": \"2022-05-22T19:24:50.155Z\"\n            }\n        ],\n        \"filters\": [\n            {\n                \"name\": \"name\",\n                \"type\": \"text\",\n                \"options\": [],\n                \"filterUrl\": null\n            },\n            {\n                \"name\": \"type\",\n                \"type\": \"checkbox\",\n                \"options\": [\n                    \"triage\",\n                    \"acquisition\",\n                    \"shutdown\",\n                    \"reboot\",\n                    \"uninstall\",\n                    \"isolation\",\n                    \"investigation\",\n                    \"log-retrieval\",\n                    \"auto-tagging\",\n                    \"version-update\",\n                    \"offline-acquisition\",\n                    \"migration\",\n                    \"interact-shell\",\n                    \"baseline-comparison\",\n                    \"baseline-acquisition\"\n                ],\n                \"filterUrl\": null\n            },\n            {\n                \"name\": \"source\",\n                \"type\": \"checkbox\",\n                \"options\": [\n                    \"user\",\n                    \"scheduler\",\n                    \"webhook\",\n                    \"system\"\n                ],\n                \"filterUrl\": null\n            },\n            {\n                \"name\": \"status\",\n                \"type\": \"checkbox\",\n                \"options\": [\n                    \"scheduled\",\n                    \"assigned\",\n                    \"processing\",\n                    \"completed\",\n                    \"cancelled\"\n                ],\n                \"filterUrl\": null\n            },\n            {\n                \"name\": \"executionType\",\n                \"type\": \"checkbox\",\n                \"options\": [\n                    \"instant\",\n                    \"scheduled\"\n                ],\n                \"filterUrl\": null\n            }\n        ],\n        \"sortables\": [\n            \"name\",\n            \"type\",\n            \"source\",\n            \"status\",\n            \"createdAt\"\n        ],\n        \"totalEntityCount\": 30,\n        \"currentPage\": 1,\n        \"pageSize\": 10,\n        \"previousPage\": 0,\n        \"totalPageCount\": 3,\n        \"nextPage\": 2\n    },\n    \"statusCode\": 200,\n    \"errors\": []\n}"
						},
						{
							"name": "Get Tasks without Organization ID - 400 Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/{{apiPrefix}}/tasks",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"{{apiPrefix}}",
										"tasks"
									],
									"query": [
										{
											"key": "filter[type]",
											"value": "acquisition",
											"disabled": true
										},
										{
											"key": "filter[status]",
											"value": "procei",
											"disabled": true
										},
										{
											"key": "filter[executionType]",
											"value": "scheduled",
											"disabled": true
										},
										{
											"key": "filter[type]",
											"value": "triage",
											"disabled": true
										},
										{
											"key": "filter[searchTerm]",
											"value": "asd",
											"disabled": true
										},
										{
											"key": "filter[organizationIds]",
											"value": "0",
											"disabled": true
										},
										{
											"key": "pageNumber",
											"value": "3",
											"disabled": true
										},
										{
											"key": "pageSize",
											"value": "20",
											"disabled": true
										},
										{
											"key": "sortBy",
											"value": "createdAt",
											"disabled": true
										},
										{
											"key": "sortType",
											"value": "DESC",
											"disabled": true
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "100"
								},
								{
									"key": "ETag",
									"value": "W/\"64-0dZahibur8gfpdjDGd/+kpCpojg\""
								},
								{
									"key": "Date",
									"value": "Fri, 27 May 2022 18:18:43 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"errors\": [\n        \"'organizationIds' should not be empty.\"\n    ],\n    \"statusCode\": 400,\n    \"result\": null\n}"
						}
					]
				},
				{
					"name": "Get Task by ID",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.runForTest(() => {",
									"    pm.request.url.variables.add({",
									"        key: 'id',",
									"        value: pm.collectionVariables.get('taskId')",
									"    })",
									"})"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/{{apiPrefix}}/tasks/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"{{apiPrefix}}",
								"tasks",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "",
									"description": "Task ID"
								}
							]
						}
					},
					"response": [
						{
							"name": "Get Task by ID - 200 OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/{{apiPrefix}}/tasks/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"{{apiPrefix}}",
										"tasks",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "40a9dc46-d401-4bd1-82d3-ca9cf97c9024",
											"description": "Task ID"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "2624"
								},
								{
									"key": "ETag",
									"value": "W/\"a40-ezNSPpY3JfUFoG0dhRD3Kzp0rXU\""
								},
								{
									"key": "Date",
									"value": "Fri, 27 May 2022 18:20:32 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"result\": {\n        \"_id\": \"40a9dc46-d401-4bd1-82d3-ca9cf97c9024\",\n        \"source\": \"user\",\n        \"totalAssignedEndpoints\": 1,\n        \"totalCompletedEndpoints\": 0,\n        \"totalFailedEndpoints\": 0,\n        \"totalCancelledEndpoints\": 1,\n        \"isScheduled\": false,\n        \"name\": \"Example Case Acquisition 004\",\n        \"type\": \"acquisition\",\n        \"organizationId\": 0,\n        \"status\": \"assigned\",\n        \"createdBy\": \"demo@binalyze.com\",\n        \"baseTaskId\": null,\n        \"startDate\": null,\n        \"recurrence\": null,\n        \"createdAt\": \"2022-05-27T17:47:06.858Z\",\n        \"updatedAt\": \"2022-05-27T17:47:06.872Z\",\n        \"data\": {\n            \"profileId\": \"full\",\n            \"profileName\": \"Acquisition: Full\",\n            \"windows\": {\n                \"evidenceTypes\": [\n                    \"clp\",\n                    \"cdi\",\n                    \"rbi\",\n                    \"rpi\",\n                    \"dri\",\n                    \"pri\",\n                    \"scr\",\n                    \"avi\",\n                    \"dnss\",\n                    \"prxy\",\n                    \"apps\",\n                    \"frwl\",\n                    \"usbmsc\",\n                    \"dli\",\n                    \"aui\",\n                    \"voli\",\n                    \"mbr\",\n                    \"ram\",\n                    \"pgf\",\n                    \"swp\",\n                    \"hbr\",\n                    \"chst\",\n                    \"fhst\",\n                    \"ihst\",\n                    \"ehst\",\n                    \"ohst\",\n                    \"mftcsv\",\n                    \"mft\",\n                    \"mftmir\",\n                    \"ntfslog\",\n                    \"usnjrn\",\n                    \"hiv\",\n                    \"hivold\",\n                    \"sbgs\",\n                    \"appcc\",\n                    \"dnsc\",\n                    \"tcpt\",\n                    \"udpt\",\n                    \"arpt\",\n                    \"ipv4\",\n                    \"netadp\",\n                    \"netshr\",\n                    \"hosts\",\n                    \"evt\",\n                    \"evtx\",\n                    \"evtr\",\n                    \"wmiasc\",\n                    \"wmicec\",\n                    \"pf\",\n                    \"srum\",\n                    \"adb\",\n                    \"amc\",\n                    \"rfc\",\n                    \"etl\",\n                    \"clr\",\n                    \"jmplst\",\n                    \"lnkf\",\n                    \"indxs\",\n                    \"sprf\",\n                    \"wbem\",\n                    \"infl\",\n                    \"sdb\",\n                    \"pwrs\",\n                    \"tc\",\n                    \"ic\",\n                    \"rdpc\",\n                    \"apcl\",\n                    \"mngl\",\n                    \"iisl\",\n                    \"mssqll\",\n                    \"exchl\",\n                    \"dhcpl\",\n                    \"dnsl\",\n                    \"adl\",\n                    \"mph\",\n                    \"crtnh\",\n                    \"strdb\",\n                    \"stckyn\",\n                    \"mmps\",\n                    \"vrcdh\",\n                    \"ntfh\",\n                    \"srch\",\n                    \"mppl\",\n                    \"mclndr\",\n                    \"mml\",\n                    \"zmdb\",\n                    \"zmm\",\n                    \"tml\",\n                    \"outlk\",\n                    \"thndr\",\n                    \"whtc\",\n                    \"whtck\",\n                    \"skypdb\",\n                    \"skpym\",\n                    \"dscrdc\",\n                    \"wndml\",\n                    \"twtdb\",\n                    \"twtc\",\n                    \"fcbkdb\",\n                    \"fcbkc\",\n                    \"lnkc\",\n                    \"sptfyl\",\n                    \"sptfyc\",\n                    \"sblm\",\n                    \"ntpd\",\n                    \"ovpn\",\n                    \"evryh\",\n                    \"everdb\",\n                    \"everdd\",\n                    \"everl\",\n                    \"itnb\",\n                    \"vmc\",\n                    \"vmdd\",\n                    \"vml\",\n                    \"flz\",\n                    \"vstm\",\n                    \"gtdb\",\n                    \"gthbc\",\n                    \"gthbl\",\n                    \"wsl\",\n                    \"trtl\",\n                    \"gdrvdb\",\n                    \"drpdb\",\n                    \"drpl\",\n                    \"drpc\"\n                ],\n                \"custom\": [],\n                \"networkCapture\": {\n                    \"enabled\": false,\n                    \"duration\": 600,\n                    \"pcap\": {\n                        \"enabled\": false\n                    },\n                    \"networkFlow\": {\n                        \"enabled\": false\n                    }\n                }\n            },\n            \"linux\": {\n                \"evidenceTypes\": [\n                    \"syscntrls\",\n                    \"cronj\",\n                    \"aarmpr\",\n                    \"ulimit\",\n                    \"krnmods\",\n                    \"lckfls\",\n                    \"blkd\",\n                    \"fstab\",\n                    \"mounts\",\n                    \"nfsexpr\",\n                    \"process\",\n                    \"popenf\",\n                    \"sharedm\",\n                    \"memmap\",\n                    \"swaps\",\n                    \"groups\",\n                    \"users\",\n                    \"lastacs\",\n                    \"lgdusrs\",\n                    \"shadow\",\n                    \"sudoers\",\n                    \"fla\",\n                    \"sshknown\",\n                    \"sshauth\",\n                    \"sshconf\",\n                    \"sshdconf\",\n                    \"hosts\",\n                    \"icmptab\",\n                    \"iprts\",\n                    \"iptbl\",\n                    \"rawtab\",\n                    \"netint\",\n                    \"tcptab\",\n                    \"udplitetab\",\n                    \"udptab\",\n                    \"unixsoc\",\n                    \"arpt\",\n                    \"dnsr\",\n                    \"apts\",\n                    \"apthst\",\n                    \"debp\",\n                    \"yumsrcs\",\n                    \"selinuxc\",\n                    \"selinuxs\",\n                    \"suidbins\",\n                    \"shellhist\",\n                    \"sysartf\",\n                    \"logs\"\n                ],\n                \"custom\": []\n            },\n            \"config\": {\n                \"choice\": \"use-custom-options\",\n                \"saveTo\": {\n                    \"windows\": {\n                        \"location\": \"local\",\n                        \"path\": \"Binalyze\\\\AIR\",\n                        \"useMostFreeVolume\": false,\n                        \"volume\": \"C:\",\n                        \"tmp\": \"Binalyze\\\\AIR\\\\tmp\"\n                    },\n                    \"linux\": {\n                        \"location\": \"local\",\n                        \"path\": \"opt/binalyze/air\",\n                        \"useMostFreeVolume\": false,\n                        \"volume\": \"/\",\n                        \"tmp\": \"opt/binalyze/air/tmp\"\n                    }\n                },\n                \"cpu\": {\n                    \"limit\": 80\n                },\n                \"compression\": {\n                    \"enabled\": true,\n                    \"encryption\": {\n                        \"enabled\": false,\n                        \"password\": \"\"\n                    }\n                }\n            },\n            \"drone\": {\n                \"minScore\": 50,\n                \"autoPilot\": false,\n                \"enabled\": false,\n                \"analyzers\": [\n                    \"bha\",\n                    \"wsa\",\n                    \"aa\",\n                    \"ara\"\n                ],\n                \"keywords\": [\n                    \"keyword-1\",\n                    \"keyword-2\"\n                ]\n            }\n        }\n    },\n    \"statusCode\": 200,\n    \"errors\": []\n}"
						},
						{
							"name": "Get Task by ID - 404 Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/{{apiPrefix}}/tasks/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"{{apiPrefix}}",
										"tasks",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": null,
											"description": "Task ID"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "96"
								},
								{
									"key": "ETag",
									"value": "W/\"60-aMfnZiKpibsEnjtgrBqXNzqZzmE\""
								},
								{
									"key": "Date",
									"value": "Fri, 27 May 2022 18:20:07 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"errors\": [\n        \"No task(s) found by provided id(s)\"\n    ],\n    \"statusCode\": 404,\n    \"result\": null\n}"
						}
					]
				},
				{
					"name": "Cancel Task by ID",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.runForTest(() => {",
									"    pm.request.url.variables.add({",
									"        key: 'id',",
									"        value: \"no-task-id\"",
									"    })",
									"})"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"",
									"pm.test(\"Should return error 'No task(s) found by provided id(s)'\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.errors).to.eql([\"No task(s) found by provided id(s)\"]);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/{{apiPrefix}}/tasks/:id/cancel",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"{{apiPrefix}}",
								"tasks",
								":id",
								"cancel"
							],
							"variable": [
								{
									"key": "id",
									"value": "",
									"description": "Task ID"
								}
							]
						}
					},
					"response": [
						{
							"name": "Cancel Task - 200 OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/{{apiPrefix}}/tasks/:id/cancel",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"{{apiPrefix}}",
										"tasks",
										":id",
										"cancel"
									],
									"variable": [
										{
											"key": "id",
											"value": "26aeb2db-9fd0-467c-a3ba-b74c675ef0c8",
											"description": "Task ID"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "59"
								},
								{
									"key": "ETag",
									"value": "W/\"3b-MHtur75ftUyQ2IfDqFjH6SAxAM4\""
								},
								{
									"key": "Date",
									"value": "Fri, 27 May 2022 18:24:35 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"result\": null,\n    \"statusCode\": 200,\n    \"errors\": []\n}"
						},
						{
							"name": "Cancel Task - 404 Not Found",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/{{apiPrefix}}/tasks/:id/cancel",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"{{apiPrefix}}",
										"tasks",
										":id",
										"cancel"
									],
									"variable": [
										{
											"key": "id",
											"value": "test",
											"description": "Task ID"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "96"
								},
								{
									"key": "ETag",
									"value": "W/\"60-aMfnZiKpibsEnjtgrBqXNzqZzmE\""
								},
								{
									"key": "Date",
									"value": "Fri, 27 May 2022 18:21:48 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"errors\": [\n        \"No task(s) found by provided id(s)\"\n    ],\n    \"statusCode\": 404,\n    \"result\": null\n}"
						}
					]
				},
				{
					"name": "Delete Task by ID",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.runForTest(() => {",
									"    pm.request.url.variables.add({",
									"        key: 'id',",
									"        value: \"no-task-id\"",
									"    })",
									"})"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"",
									"pm.test(\"Should return error 'No task(s) found by provided id(s)'\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.errors).to.eql([\"No task(s) found by provided id(s)\"]);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/{{apiPrefix}}/tasks/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"{{apiPrefix}}",
								"tasks",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": null,
									"description": "Task ID"
								}
							]
						}
					},
					"response": [
						{
							"name": "Delete Task by ID - 200 OK",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/{{apiPrefix}}/tasks/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"{{apiPrefix}}",
										"tasks",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "26aeb2db-9fd0-467c-a3ba-b74c675ef0c8",
											"description": "Task ID"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "59"
								},
								{
									"key": "ETag",
									"value": "W/\"3b-MHtur75ftUyQ2IfDqFjH6SAxAM4\""
								},
								{
									"key": "Date",
									"value": "Fri, 27 May 2022 18:24:53 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"result\": null,\n    \"statusCode\": 200,\n    \"errors\": []\n}"
						},
						{
							"name": "Delete Task by ID - 404 Not Found",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/{{apiPrefix}}/tasks/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"{{apiPrefix}}",
										"tasks",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "26aeb2db-9fd0-467c-a3ba-b74c675ef0c8",
											"description": "Task ID"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "96"
								},
								{
									"key": "ETag",
									"value": "W/\"60-aMfnZiKpibsEnjtgrBqXNzqZzmE\""
								},
								{
									"key": "Date",
									"value": "Fri, 27 May 2022 18:25:01 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"errors\": [\n        \"No task(s) found by provided id(s)\"\n    ],\n    \"statusCode\": 404,\n    \"result\": null\n}"
						}
					]
				}
			]
		},
		{
			"name": "Triage",
			"item": [
				{
					"name": "Tags",
					"item": [
						{
							"name": "Get Triage Rule Tags",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/{{apiPrefix}}/triages/tags?filter[organizationId]=0&filter[withCount]=true",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"{{apiPrefix}}",
										"triages",
										"tags"
									],
									"query": [
										{
											"key": "filter[searchTerm]",
											"value": "",
											"disabled": true
										},
										{
											"key": "filter[organizationId]",
											"value": "0"
										},
										{
											"key": "filter[withCount]",
											"value": "true"
										}
									]
								},
								"description": "### Parameters\n\n| **Name** | **Constraints** |\n| --- | --- |\n| **filter\\[withCount\\]**  <br>boolean / optional |  |\n| **filter\\[searchTerm\\]**  <br>string / optional |  |\n| **filter\\[organizationIds\\]**  <br>number / required |  |"
							},
							"response": []
						},
						{
							"name": "Create Triage Rule Tag",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const uuid = require('uuid')",
											"",
											"pm.runForTest(() => {",
											"    const payload = JSON.parse(pm.request.body.raw)",
											"    payload.description = `Triage Rule - ${uuid.v4().substr(0, 8)}`",
											"    pm.request.body.raw = JSON.stringify(payload)",
											"})"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.collectionVariables.set('triageRuleId', JSON.parse(responseBody).result._id)",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Sample Tag\",\n    \"organizationId\": 0\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/{{apiPrefix}}/triages/tags",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"{{apiPrefix}}",
										"triages",
										"tags"
									]
								},
								"description": "### Body Parameters\n\n| **Name** | **Constraints** |\n| --- | --- |\n| **name**  <br>string / required | alphanumeric characters only |\n| **organizationId**  <br>number / required |  |"
							},
							"response": []
						}
					]
				},
				{
					"name": "Create Triage Rule",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const uuid = require('uuid')",
									"",
									"pm.runForTest(() => {",
									"    const payload = JSON.parse(pm.request.body.raw)",
									"    payload.description = `Triage Rule - ${uuid.v4().substr(0, 8)}`",
									"    pm.request.body.raw = JSON.stringify(payload)",
									"})"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.collectionVariables.set('triageRuleId', JSON.parse(responseBody).result._id)",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"description\": \"Sample Rule\",\n    \"rule\": \"import \\\"file\\\" // Binalyze File Module Extension for YARA\\nimport \\\"time\\\"\\nimport \\\"hash\\\"\\n\\nrule find_evt_by_header_and_collect : collect  \\n{\\n    meta:         \\n        description = \\\"Collect with header\\\" \\n    strings:\\n       $evt_hex_string = { 4C 66 4C 65 } //evt header\\n       $evtx_hex_string = { 45 6C 66 46 69 6C 65 } // evtx header\\n    condition:         \\n        $evt_hex_string in (0..12)  \\n        or\\n        $evtx_hex_string at 0\\n}\",\n    \"searchIn\": \"filesystem\",\n    \"engine\": \"yara\",\n    \"organizationIds\": [\n        0\n    ]\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/{{apiPrefix}}/triages/rules",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"{{apiPrefix}}",
								"triages",
								"rules"
							]
						},
						"description": "### Body Parameters\n\n| **Name** | **Constraints** |\n| --- | --- |\n| **description**  <br>string / required | alphanumeric characters only |\n| **rule**  <br>string / required |  |\n| **engine**  <br>string / required | valid values: yara, sigma, osquery |\n| **searchIn**  <br>string / required | valid values: file-system, memory, both, event-records |\n| **organizationIds**  <br>number array / required |  |"
					},
					"response": [
						{
							"name": "Create Triage Rule - 200 OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"name": "Content-Type",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"description\": \"Sample Rule\",\n    \"rule\": \"import \\\"file\\\" // Binalyze File Module Extension for YARA\\nimport \\\"time\\\"\\nimport \\\"hash\\\"\\n\\nrule find_evt_by_header_and_collect : collect  \\n{\\n    meta:         \\n        description = \\\"Collect with header\\\" \\n    strings:\\n       $evt_hex_string = { 4C 66 4C 65 } //evt header\\n       $evtx_hex_string = { 45 6C 66 46 69 6C 65 } // evtx header\\n    condition:         \\n        $evt_hex_string in (0..12)  \\n        or\\n        $evtx_hex_string at 0\\n}\",\n    \"searchIn\": \"filesystem\",\n    \"engine\": \"yara\",\n    \"organizationIds\": [\n        0\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/{{apiPrefix}}/triages/rules",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"{{apiPrefix}}",
										"triages",
										"rules"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "711"
								},
								{
									"key": "ETag",
									"value": "W/\"2c7-YgZ7jLzbJUiZE1ws0apNq1C+zso\""
								},
								{
									"key": "Date",
									"value": "Sun, 26 Jun 2022 07:41:01 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"result\": {\n        \"_id\": \"S6zpgcnPklwho975llMY6Oau\",\n        \"createdBy\": \"demo@binalyze.com\",\n        \"createdAt\": \"2022-05-22T13:29:51.040Z\",\n        \"searchIn\": \"filesystem\",\n        \"description\": \"Sample Rule\",\n        \"rule\": \"import \\\"file\\\" // Binalyze File Module Extension for YARA\\nimport \\\"time\\\"\\nimport \\\"hash\\\"\\n\\nrule find_evt_by_header_and_collect : collect  \\n{\\n    meta:         \\n        description = \\\"Collect with header\\\" \\n    strings:\\n       $evt_hex_string = { 4C 66 4C 65 } //evt header\\n       $evtx_hex_string = { 45 6C 66 46 69 6C 65 } // evtx header\\n    condition:         \\n        $evt_hex_string in (0..12)  \\n        or\\n        $evtx_hex_string at 0\\n}\",\n        \"type\": \"text\",\n        \"engine\": \"yara\",\n        \"organizationIds\": [\n            0\n        ],\n        \"deletable\": true\n    },\n    \"statusCode\": 200,\n    \"errors\": []\n}"
						},
						{
							"name": "Create Triage Rule - 400 Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"name": "Content-Type",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"description\": \"Sample Rule\",\n    \"rule\": \"import \\\"file\\\" // Binalyze File Module Extension for YARA\\nimport \\\"time\\\"\\nimport \\\"hash\\\"\\n\\nrule find_evt_by_header_and_collect : collect  \\n{\\n    meta:         \\n        description = \\\"Collect with header\\\" \\n    strings:\\n       $evt_hex_string = { 4C 66 4C 65 } //evt header\\n       $evtx_hex_string = { 45 6C 66 46 69 6C 65 } // evtx header\\n    condition:         \\n        $evt_hex_string in (0..12)  \\n        or\\n        $evtx_hex_string at 0\\n}\",\n    \"searchIn\": \"filesystema\",\n    \"engine\": \"yaraa\",\n    \"organizationIds\": [\n        0\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/{{apiPrefix}}/triages/rules",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"{{apiPrefix}}",
										"triages",
										"rules"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "133"
								},
								{
									"key": "ETag",
									"value": "W/\"85-7PF4BZ5tRjUyrONL/xWQPCapbY4\""
								},
								{
									"key": "Date",
									"value": "Sun, 26 Jun 2022 07:43:07 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"errors\": [\n        \"engine must be a valid enum value\",\n        \"searchIn must be a valid enum value\"\n    ],\n    \"statusCode\": 400,\n    \"result\": null\n}"
						}
					]
				},
				{
					"name": "Update Triage Rule by ID",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const uuid = require('uuid')",
									"",
									"pm.runForTest(() => {",
									"    pm.request.url.variables.add({",
									"        key: 'id',",
									"        value: pm.collectionVariables.get('triageRuleId')",
									"    })",
									"",
									"    const payload = JSON.parse(pm.request.body.raw)",
									"    payload.description = `Triage Rule - ${uuid.v4().substr(0, 8)}`",
									"    pm.request.body.raw = JSON.stringify(payload)",
									"})"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"description\": \"New Description\",\n    \"rule\": \"import \\\"file\\\" // Binalyze File Module Extension for YARA\\nimport \\\"time\\\"\\nimport \\\"hash\\\"\\n\\nrule find_evt_by_header_and_collect : collect  \\n{\\n    meta:         \\n        description = \\\"Collect with header\\\" \\n    strings:\\n       $evt_hex_string = { 4C 66 4C 65 } //evt header\\n       $evtx_hex_string = { 45 6C 66 46 69 6C 65 } // evtx header\\n    condition:         \\n        $evt_hex_string in (0..12)  \\n        or\\n        $evtx_hex_string at 0\\n}\",\n    \"searchIn\": \"filesystem\",\n    \"organizationIds\": [\n        0\n    ]\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/{{apiPrefix}}/triages/rules/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"{{apiPrefix}}",
								"triages",
								"rules",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "",
									"description": "Triage Rule ID"
								}
							]
						},
						"description": "### Body Parameters\n\n| **Name** | **Constraints** |\n| --- | --- |\n| **description**  <br>string / required | alphanumeric characters only |\n| **rule**  <br>string / required |  |\n| **searchIn**  <br>string / required | valid values: file-system, memory, both, event-records |\n| **organizationIds**  <br>number array / required |  |"
					},
					"response": [
						{
							"name": "Update Triage Rule by ID - 200 OK",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"name": "Content-Type",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"description\": \"New Description\",\n    \"rule\": \"import \\\"file\\\" // Binalyze File Module Extension for YARA\\nimport \\\"time\\\"\\nimport \\\"hash\\\"\\n\\nrule find_evt_by_header_and_collect : collect  \\n{\\n    meta:         \\n        description = \\\"Collect with header\\\" \\n    strings:\\n       $evt_hex_string = { 4C 66 4C 65 } //evt header\\n       $evtx_hex_string = { 45 6C 66 46 69 6C 65 } // evtx header\\n    condition:         \\n        $evt_hex_string in (0..12)  \\n        or\\n        $evtx_hex_string at 0\\n}\",\n    \"searchIn\": \"filesystem\",\n    \"organizationIds\": [\n        0\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/{{apiPrefix}}/triages/rules/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"{{apiPrefix}}",
										"triages",
										"rules",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "S6zpgcnPklwho975llMY6Oau",
											"description": "Triage Rule ID"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "715"
								},
								{
									"key": "ETag",
									"value": "W/\"2cb-3vsi7PDy+A4041eSKq0DNxm/y+g\""
								},
								{
									"key": "Date",
									"value": "Sun, 26 Jun 2022 07:42:06 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"result\": {\n        \"_id\": \"S6zpgcnPklwho975llMY6Oau\",\n        \"createdBy\": \"demo@binalyze.com\",\n        \"createdAt\": \"2022-05-22T13:29:51.040Z\",\n        \"searchIn\": \"filesystem\",\n        \"description\": \"New Description\",\n        \"rule\": \"import \\\"file\\\" // Binalyze File Module Extension for YARA\\nimport \\\"time\\\"\\nimport \\\"hash\\\"\\n\\nrule find_evt_by_header_and_collect : collect  \\n{\\n    meta:         \\n        description = \\\"Collect with header\\\" \\n    strings:\\n       $evt_hex_string = { 4C 66 4C 65 } //evt header\\n       $evtx_hex_string = { 45 6C 66 46 69 6C 65 } // evtx header\\n    condition:         \\n        $evt_hex_string in (0..12)  \\n        or\\n        $evtx_hex_string at 0\\n}\",\n        \"type\": \"text\",\n        \"engine\": \"yara\",\n        \"organizationIds\": [\n            0\n        ],\n        \"deletable\": true\n    },\n    \"statusCode\": 200,\n    \"errors\": []\n}"
						},
						{
							"name": "Update Triage Rule by ID - 400 Bad Request",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"name": "Content-Type",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"description\": \"New Description\",\n    \"rule\": \"import \\\"file\\\" // Binalyze File Module Extension for YARA\\nimport \\\"time\\\"\\nimport \\\"hash\\\"\\n\\nrule find_evt_by_header_and_collect : collect  \\n{\\n    meta:         \\n        description = \\\"Collect with header\\\" \\n    strings:\\n       $evt_hex_string = { 4C 66 4C 65 } //evt header\\n       $evtx_hex_string = { 45 6C 66 46 69 6C 65 } // evtx header\\n    condition:         \\n        $evt_hex_string in (0..12)  \\n        or\\n        $evtx_hex_string at 0\\n}\",\n    \"searchIn\": \"filesystema\",\n    \"organizationIds\": [\n        0\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/{{apiPrefix}}/triages/rules/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"{{apiPrefix}}",
										"triages",
										"rules",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "S6zpgcnPklwho975llMY6Oau",
											"description": "Triage Rule ID"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "97"
								},
								{
									"key": "ETag",
									"value": "W/\"61-vm5NsDV9WDoC3FUxaNL+zxyEJSM\""
								},
								{
									"key": "Date",
									"value": "Sun, 26 Jun 2022 07:42:45 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"errors\": [\n        \"searchIn must be a valid enum value\"\n    ],\n    \"statusCode\": 400,\n    \"result\": null\n}"
						},
						{
							"name": "Update Triage Rule by ID - 404 Not Found",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"name": "Content-Type",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"description\": \"New Description\",\n    \"rule\": \"import \\\"file\\\" // Binalyze File Module Extension for YARA\\nimport \\\"time\\\"\\nimport \\\"hash\\\"\\n\\nrule find_evt_by_header_and_collect : collect  \\n{\\n    meta:         \\n        description = \\\"Collect with header\\\" \\n    strings:\\n       $evt_hex_string = { 4C 66 4C 65 } //evt header\\n       $evtx_hex_string = { 45 6C 66 46 69 6C 65 } // evtx header\\n    condition:         \\n        $evt_hex_string in (0..12)  \\n        or\\n        $evtx_hex_string at 0\\n}\",\n    \"searchIn\": \"filesystem\",\n    \"organizationIds\": [\n        0\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/{{apiPrefix}}/triages/rules/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"{{apiPrefix}}",
										"triages",
										"rules",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "S6zpgcnPklwho975llMY6Oaua",
											"description": "Triage Rule ID"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "119"
								},
								{
									"key": "ETag",
									"value": "W/\"77-9AsoL37lqioYrhxDKl9IOPZPwMQ\""
								},
								{
									"key": "Date",
									"value": "Sun, 26 Jun 2022 07:42:23 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"errors\": [\n        \"There is no triage rule such as S6zpgcnPklwho975llMY6Oaua\"\n    ],\n    \"statusCode\": 404,\n    \"result\": null\n}"
						}
					]
				},
				{
					"name": "Delete Triage Rule by ID",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.runForTest(() => {",
									"    pm.request.url.variables.add({",
									"        key: 'id', ",
									"        value: pm.collectionVariables.get('triageRuleId')",
									"    })",
									"})"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.collectionVariables.unset('triageRuleId')",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseUrl}}/{{apiPrefix}}/triages/rules/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"{{apiPrefix}}",
								"triages",
								"rules",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "",
									"description": "Triage Rule ID"
								}
							]
						}
					},
					"response": [
						{
							"name": "Delete Triage Rule by ID - 200 OK",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{baseUrl}}/{{apiPrefix}}/triages/rules/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"{{apiPrefix}}",
										"triages",
										"rules",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "S6zpgcnPklwho975llMY6Oau",
											"description": "Triage Rule ID"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "59"
								},
								{
									"key": "ETag",
									"value": "W/\"3b-MHtur75ftUyQ2IfDqFjH6SAxAM4\""
								},
								{
									"key": "Date",
									"value": "Sun, 26 Jun 2022 07:43:59 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"result\": null,\n    \"statusCode\": 200,\n    \"errors\": []\n}"
						},
						{
							"name": "Delete Triage Rule by ID - 404 Not Found",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{baseUrl}}/{{apiPrefix}}/triages/rules/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"{{apiPrefix}}",
										"triages",
										"rules",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "S6zpgcnPklwho975llMY6Oau",
											"description": "Triage Rule ID"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "113"
								},
								{
									"key": "ETag",
									"value": "W/\"71-hzDm8K6MnrUbHtBl9wbGp3Mf3eY\""
								},
								{
									"key": "Date",
									"value": "Sun, 26 Jun 2022 07:44:08 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"errors\": [\n        \"Triage rule with S6zpgcnPklwho975llMY6Oau not found\"\n    ],\n    \"statusCode\": 404,\n    \"result\": null\n}"
						}
					]
				},
				{
					"name": "Get Triage Rules",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/{{apiPrefix}}/triages/rules?filter[organizationIds]=0",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"{{apiPrefix}}",
								"triages",
								"rules"
							],
							"query": [
								{
									"key": "pageNumber",
									"value": "",
									"description": "Which page of results to return",
									"disabled": true
								},
								{
									"key": "pageSize",
									"value": "",
									"description": "How many results to return per page",
									"disabled": true
								},
								{
									"key": "sortBy",
									"value": "",
									"description": "Attribute name to order the responses by",
									"disabled": true
								},
								{
									"key": "sortType",
									"value": "",
									"description": "Either ASC or DESC",
									"disabled": true
								},
								{
									"key": "filter[searchIn]",
									"value": "",
									"disabled": true
								},
								{
									"key": "filter[description]",
									"value": "",
									"disabled": true
								},
								{
									"key": "filter[searchTerm]",
									"value": "",
									"disabled": true
								},
								{
									"key": "filter[organizationIds]",
									"value": "0"
								},
								{
									"key": "filter[allOrganizations]",
									"value": "",
									"disabled": true
								},
								{
									"key": "filter[engines]",
									"value": "",
									"disabled": true
								}
							]
						},
						"description": "### Parameters\n\n| **Name** | **Constraints** |\n| --- | --- |\n| **pageNumber**  <br>number / optional | default value: 1  <br>min value:1 |\n| **pageSize**  <br>number / optional | default value: 10  <br>min value:1 |\n| **sortBy**  <br>string / optional | default value: createdAt |\n| **sortType**  <br>string / optional | default value: ASC  <br>valid values: ASC, DESC |\n| **filter\\[searchIn\\]**  <br>string array / optional | valid values: file-system, memory, both, event-records |\n| **filter\\[description\\]**  <br>string / optional |  |\n| **filter\\[searchTerm\\]**  <br>string / optional |  |\n| **filter\\[organizationIds\\]**  <br>number / required |  |\n| **filter\\[allOrganizations\\]**  <br>boolean / optional | valid values: true, false |\n| **filter\\[engines\\]**  <br>string array / optional | valid values: yara, sigma, osquery |"
					},
					"response": [
						{
							"name": "Get Triage Rules - 200 OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/{{apiPrefix}}/triages/rules?filter[organizationIds]=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"{{apiPrefix}}",
										"triages",
										"rules"
									],
									"query": [
										{
											"key": "pageNumber",
											"value": "1",
											"disabled": true
										},
										{
											"key": "pageSize",
											"value": "10",
											"disabled": true
										},
										{
											"key": "sortBy",
											"value": "searchIn",
											"disabled": true
										},
										{
											"key": "sortType",
											"value": "ASC",
											"disabled": true
										},
										{
											"key": "filter[searchIn]",
											"value": "filesystem,memory",
											"disabled": true
										},
										{
											"key": "filter[description]",
											"value": "she",
											"disabled": true
										},
										{
											"key": "filter[searchTerm]",
											"value": "malware",
											"disabled": true
										},
										{
											"key": "filter[organizationIds]",
											"value": "0"
										},
										{
											"key": "filter[allOrganizations]",
											"value": "true",
											"disabled": true
										},
										{
											"key": "filter[engines]",
											"value": "sigma",
											"disabled": true
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "1161"
								},
								{
									"key": "ETag",
									"value": "W/\"489-fJ8fdXNsau7kvq04PrEVZuR1xUE\""
								},
								{
									"key": "Date",
									"value": "Fri, 27 May 2022 18:31:26 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"result\": {\n        \"entities\": [\n            {\n                \"_id\": \"corewebshell_detection\",\n                \"description\": \"core.webshell_detection\",\n                \"searchIn\": \"both\",\n                \"engine\": \"yara\",\n                \"organizationIds\": [],\n                \"createdAt\": \"2022-05-22T13:29:51.040Z\",\n                \"createdBy\": \"System\",\n                \"deletable\": false\n            },\n            {\n                \"_id\": \"fireeye-sunburst-countermeasures\",\n                \"description\": \"FireEye Sunburst Countermeasures\",\n                \"searchIn\": \"both\",\n                \"engine\": \"yara\",\n                \"organizationIds\": [],\n                \"createdAt\": \"2022-05-22T13:29:50.858Z\",\n                \"createdBy\": \"System\",\n                \"deletable\": false\n            },\n            {\n                \"_id\": \"fireeye-red-team-tools-countermeasures\",\n                \"description\": \"FireEye Red Team Tools Countermeasures\",\n                \"searchIn\": \"both\",\n                \"engine\": \"yara\",\n                \"organizationIds\": [],\n                \"createdAt\": \"2022-05-22T13:29:50.830Z\",\n                \"createdBy\": \"System\",\n                \"deletable\": false\n            }\n        ],\n        \"filters\": [\n            {\n                \"name\": \"description\",\n                \"type\": \"text\",\n                \"options\": [],\n                \"filterUrl\": null\n            },\n            {\n                \"name\": \"searchIn\",\n                \"type\": \"checkbox\",\n                \"options\": [\n                    \"filesystem\",\n                    \"memory\",\n                    \"both\",\n                    \"event-records\"\n                ],\n                \"filterUrl\": null\n            },\n            {\n                \"name\": \"engines\",\n                \"type\": \"checkbox\",\n                \"options\": [\n                    \"yara\",\n                    \"sigma\"\n                ],\n                \"filterUrl\": null\n            }\n        ],\n        \"sortables\": [\n            \"description\",\n            \"searchIn\",\n            \"uploadDate\"\n        ],\n        \"totalEntityCount\": 3,\n        \"currentPage\": 1,\n        \"pageSize\": 10,\n        \"previousPage\": 0,\n        \"totalPageCount\": 1,\n        \"nextPage\": 2\n    },\n    \"statusCode\": 200,\n    \"errors\": []\n}"
						},
						{
							"name": "Get Triage Rules without Organization ID - 400 Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/{{apiPrefix}}/triages/rules",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"{{apiPrefix}}",
										"triages",
										"rules"
									],
									"query": [
										{
											"key": "pageNumber",
											"value": "1",
											"disabled": true
										},
										{
											"key": "pageSize",
											"value": "10",
											"disabled": true
										},
										{
											"key": "sortBy",
											"value": "searchIn",
											"disabled": true
										},
										{
											"key": "sortType",
											"value": "ASC",
											"disabled": true
										},
										{
											"key": "filter[searchIn]",
											"value": "filesystem,memory",
											"disabled": true
										},
										{
											"key": "filter[description]",
											"value": "",
											"disabled": true
										},
										{
											"key": "filter[searchTerm]",
											"value": "",
											"disabled": true
										},
										{
											"key": "filter[organizationIds]",
											"value": "0",
											"disabled": true
										},
										{
											"key": "filter[allOrganizations]",
											"value": "true",
											"disabled": true
										},
										{
											"key": "filter[engines]",
											"value": "sigma",
											"disabled": true
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "100"
								},
								{
									"key": "ETag",
									"value": "W/\"64-0dZahibur8gfpdjDGd/+kpCpojg\""
								},
								{
									"key": "Date",
									"value": "Fri, 27 May 2022 18:31:46 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"errors\": [\n        \"'organizationIds' should not be empty.\"\n    ],\n    \"statusCode\": 400,\n    \"result\": null\n}"
						}
					]
				},
				{
					"name": "Get Triage Rule by ID",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.runForTest(() => {",
									"    pm.request.url.variables.add({",
									"        key: 'id', ",
									"        value: pm.collectionVariables.get('triageRuleId')",
									"    })",
									"})"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/{{apiPrefix}}/triages/rules/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"{{apiPrefix}}",
								"triages",
								"rules",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": null,
									"description": "Triage Rule ID"
								}
							]
						}
					},
					"response": [
						{
							"name": "Get Triage Rule by ID - 200 OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/{{apiPrefix}}/triages/rules/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"{{apiPrefix}}",
										"triages",
										"rules",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "corewebshell_detection",
											"description": "Triage Rule ID "
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "15459"
								},
								{
									"key": "ETag",
									"value": "W/\"3c63-1sB1mJUHjCcwNLRjSR6HurcbP2M\""
								},
								{
									"key": "Date",
									"value": "Fri, 27 May 2022 18:32:45 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"result\": {\n        \"_id\": \"corewebshell_detection\",\n        \"createdBy\": \"System\",\n        \"searchIn\": \"both\",\n        \"description\": \"core.webshell_detection\",\n        \"rule\": \"/*\\n    WARNING: Host-based security systems may DETECT this file as malicious!\\n    Because the text used in these signatures is also used in some malware definitions, this file may be detected as malicious. If this happens, it is recommended that the limited.yara.bin file be used instead. Because limited.yara.bin is a compiled yara ruleset, it is unlikely to trigger host-based security systems\\n*/\\n\\nprivate rule b374k\\n{\\n    meta:\\n        author = \\\"Blair Gillam (@blairgillam)\\\"\\n\\n    strings:\\n        $string = \\\"b374k\\\"\\n        $password_var = \\\"$s_pass\\\"\\n        $default_password = \\\"0de664ecd2be02cdd54234a0d1229b43\\\"\\n\\n    condition:\\n        any of them\\n}\\n\\nprivate rule pas_tool\\n{\\n    meta:\\n        author = \\\"US CERT\\\"\\n\\n    strings:\\n        $php = \\\"<?php\\\"\\n        $base64decode = /\\\\='base'\\\\.\\\\(\\\\d+\\\\*\\\\d+\\\\)\\\\.'_de'\\\\.'code'/ \\n        $strreplace = \\\"(str_replace(\\\"\\n        $md5 = \\\".substr(md5(strrev(\\\"\\n        $gzinflate = \\\"gzinflate\\\"\\n        $cookie = \\\"_COOKIE\\\"\\n        $isset = \\\"isset\\\"\\n\\n    condition:\\n        (filesize > 20KB and filesize < 22KB) and\\n        #cookie == 2 and\\n        #isset == 3 and\\n        all of them\\n}\\n\\nprivate rule pbot\\n{\\n    meta:\\n        author = \\\"Jacob Baines (Tenable)\\\"\\n\\n    strings:\\n        $ = \\\"class pBot\\\" ascii\\n        $ = \\\"function start(\\\" ascii\\n        $ = \\\"PING\\\" ascii\\n        $ = \\\"PONG\\\" ascii\\n\\n    condition:\\n        all of them\\n}\\n\\nprivate rule generic_jsp\\n{\\n    meta:\\n        source = \\\"https://www.tenable.com/blog/hunting-for-web-shells\\\"\\n\\n    strings:\\n        $ = /Runtime.getRuntime\\\\(\\\\).exec\\\\(request.getParameter\\\\(\\\\\\\"[a-zA-Z0-9]+\\\\\\\"\\\\)\\\\);/ ascii\\n\\n    condition:\\n        all of them\\n}\\n\\nprivate rule eval\\n{\\n    meta:\\n        source = \\\"https://www.tenable.com/blog/hunting-for-web-shells\\\"\\n\\n    strings:\\n        $ = /eval[\\\\( \\\\t]+((base64_decode[\\\\( \\\\t]+)|(str_rot13[\\\\( \\\\t]+)|(gzinflate[\\\\( \\\\t]+)|(gzuncompress[\\\\( \\\\t]+)|(strrev[\\\\( \\\\t]+)|(gzdecode[\\\\( \\\\t]+))+/\\n\\n    condition:\\n        all of them\\n}\\n\\nprivate rule fopo\\n{\\n    meta:\\n        source = \\\"https://github.com/tenable/yara-rules/blob/master/webshells/\\\"\\n\\n    strings:\\n        $ = /\\\\$[a-zA-Z0-9]+=\\\\\\\"\\\\\\\\(142|x62)\\\\\\\\(141|x61)\\\\\\\\(163|x73)\\\\\\\\(145|x65)\\\\\\\\(66|x36)\\\\\\\\(64|x34)\\\\\\\\(137|x5f)\\\\\\\\(144|x64)\\\\\\\\(145|x65)\\\\\\\\(143|x63)\\\\\\\\(157|x6f)\\\\\\\\(144|x64)\\\\\\\\(145|x65)\\\\\\\";@eval\\\\(/\\n\\n    condition:\\n        all of them\\n}\\n\\nprivate rule hardcoded_urldecode\\n{\\n    meta:\\n        source = \\\"https://github.com/tenable/yara-rules/blob/master/webshells/\\\"\\n\\n    strings:\\n        $ = /urldecode[\\\\t ]*\\\\([\\\\t ]*'(%[0-9a-fA-F][0-9a-fA-F])+'[\\\\t ]*\\\\)/\\n\\n    condition:\\n        all of them\\n}\\n\\nprivate rule chr_obfuscation\\n{\\n    meta:\\n        source = \\\"https://github.com/tenable/yara-rules/blob/master/webshells/\\\"\\n\\n    strings:\\n        $ = /\\\\$[^=]+=[\\\\t ]*(chr\\\\([0-9]+\\\\)\\\\.?){2,}/\\n\\n    condition:\\n        all of them\\n}\\n\\nprivate rule phpInImage\\n{\\n    meta:\\n        source = \\\"Vlad https://github.com/vlad-s\\\"\\n\\n    strings:\\n        $php_tag = \\\"<?php\\\"\\n        $gif = {47 49 46 38 ?? 61} // GIF8[version]a\\n        $jfif = { ff d8 ff e? 00 10 4a 46 49 46 }\\n        $png = { 89 50 4e 47 0d 0a 1a 0a }\\n        $jpeg = {FF D8 FF E0 ?? ?? 4A 46 49 46 } \\n\\n    condition:\\n        (($gif at 0) or ($jfif at 0) or ($png at 0) or ($jpeg at 0)) and $php_tag\\n}\\n\\nrule hiddenFunctionality\\n{\\n    meta:\\n        author = \\\"NSA Cybersecurity\\\"\\n        description = \\\"Hidden functionality allows malware to masquerade as another filetype\\\"\\n\\n    condition:\\n        phpInImage\\n}\\n\\nrule webshellArtifact \\n{\\n    meta:\\n        author = \\\"NSA Cybersecurity\\\"\\n        description = \\\"Artifacts common to web shells and rare in benign files\\\"\\n\\n    condition:\\n        b374k or pas_tool or pbot or generic_jsp\\n}\\n\\nrule suspiciousFunctionality\\n{\\n    meta:\\n        author = \\\"NSA Cybersecurity\\\"\\n        description = \\\"Artifacts common to web shells and somewhat rare in benign files\\\"\\n\\n    condition:\\n        hardcoded_urldecode or fopo or eval\\n}\\n\\nrule obfuscatedFunctionality\\n{\\n    meta:\\n        author = \\\"NSA Cybersecurity\\\"\\n        description = \\\"Obfuscation sometimes hides malicious functionality\\\"\\n\\n    condition:\\n        chr_obfuscation\\n}\\n\\nprivate rule APT_Backdoor_MSIL_SUNBURST_1\\n{\\n    meta:\\n        author = \\\"FireEye\\\"\\n        description = \\\"This rule is looking for portions of the SUNBURST backdoor that are vital to how it functions. The first signature fnv_xor matches a magic byte xor that the sample performs on process, service, and driver names/paths. SUNBURST is a backdoor that has the ability to spawn and kill processes, write and delete files, set and create registry keys, gather system information, and disable a set of forensic analysis tools and services.\\\"\\n        source = \\\"https://github.com/fireeye/sunburst_countermeasures/blob/main/rules/SUNBURST/yara/APT_Backdoor_MSIL_SUNBURST_1.yar\\\"\\n    \\n    strings:\\n        $cmd_regex_encoded = \\\"U4qpjjbQtUzUTdONrTY2q42pVapRgooABYxQuIZmtUoA\\\" wide\\n        $cmd_regex_plain = { 5C 7B 5B 30 2D 39 61 2D 66 2D 5D 7B 33 36 7D 5C 7D 22 7C 22 5B 30 2D 39 61 2D 66 5D 7B 33 32 7D 22 7C 22 5B 30 2D 39 61 2D 66 5D 7B 31 36 7D }\\n        $fake_orion_event_encoded = \\\"U3ItS80rCaksSFWyUvIvyszPU9IBAA==\\\" wide\\n        $fake_orion_event_plain = { 22 45 76 65 6E 74 54 79 70 65 22 3A 22 4F 72 69 6F 6E 22 2C }\\n        $fake_orion_eventmanager_encoded = \\\"U3ItS80r8UvMTVWyUgKzfRPzEtNTi5R0AA==\\\" wide\\n        $fake_orion_eventmanager_plain = { 22 45 76 65 6E 74 4E 61 6D 65 22 3A 22 45 76 65 6E 74 4D 61 6E 61 67 65 72 22 2C }\\n        $fake_orion_message_encoded = \\\"U/JNLS5OTE9VslKqNqhVAgA=\\\" wide\\n        $fake_orion_message_plain = { 22 4D 65 73 73 61 67 65 22 3A 22 7B 30 7D 22 }\\n        $fnv_xor = { 67 19 D8 A7 3B 90 AC 5B }\\n    condition:\\n        $fnv_xor and ($cmd_regex_encoded or $cmd_regex_plain) or ( ($fake_orion_event_encoded or $fake_orion_event_plain) and ($fake_orion_eventmanager_encoded or $fake_orion_eventmanager_plain) and ($fake_orion_message_encoded and $fake_orion_message_plain) )\\n}\\n\\nprivate rule APT_Backdoor_MSIL_SUNBURST_2\\n{\\n    meta:\\n        author = \\\"FireEye\\\"\\n        description = \\\"The SUNBURST backdoor uses a domain generation algorithm (DGA) as part of C2 communications. This rule is looking for each branch of the code that checks for which HTTP method is being used. This is in one large conjunction, and all branches are then tied together via disjunction. The grouping is intentionally designed so that if any part of the DGA is re-used in another sample, this signature should match that re-used portion. SUNBURST is a backdoor that has the ability to spawn and kill processes, write and delete files, set and create registry keys, gather system information, and disable a set of forensic analysis tools and services.\\\"\\n        source = \\\"https://github.com/fireeye/sunburst_countermeasures/blob/main/rules/SUNBURST/yara/APT_Backdoor_MSIL_SUNBURST_2.yar\\\"\\n    \\n    strings:\\n        $a = \\\"0y3Kzy8BAA==\\\" wide\\n        $aa = \\\"S8vPKynWL89PS9OvNqjVrTYEYqNa3fLUpDSgTLVxrR5IzggA\\\" wide\\n        $ab = \\\"S8vPKynWL89PS9OvNqjVrTYEYqPaauNaPZCYEQA=\\\" wide\\n        $ac = \\\"C88sSs1JLS4GAA==\\\" wide\\n        $ad = \\\"C/UEAA==\\\" wide\\n        $ae = \\\"C89MSU8tKQYA\\\" wide\\n        $af = \\\"8wvwBQA=\\\" wide\\n        $ag = \\\"cyzIz8nJBwA=\\\" wide\\n        $ah = \\\"c87JL03xzc/LLMkvysxLBwA=\\\" wide\\n        $ai = \\\"88tPSS0GAA==\\\" wide\\n        $aj = \\\"C8vPKc1NLQYA\\\" wide\\n        $ak = \\\"88wrSS1KS0xOLQYA\\\" wide\\n        $al = \\\"c87PLcjPS80rKQYA\\\" wide\\n        $am = \\\"Ky7PLNAvLUjRBwA=\\\" wide\\n        $an = \\\"06vIzQEA\\\" wide\\n        $b = \\\"0y3NyyxLLSpOzIlPTgQA\\\" wide\\n        $c = \\\"001OBAA=\\\" wide\\n        $d = \\\"0y0oysxNLKqMT04EAA==\\\" wide\\n        $e = \\\"0y3JzE0tLknMLQAA\\\" wide\\n        $f = \\\"003PyU9KzAEA\\\" wide\\n        $h = \\\"0y1OTS4tSk1OBAA=\\\" wide\\n        $i = \\\"K8jO1E8uytGvNqitNqytNqrVA/IA\\\" wide\\n        $j = \\\"c8rPSQEA\\\" wide\\n        $k = \\\"c8rPSfEsSczJTAYA\\\" wide\\n        $l = \\\"c60oKUp0ys9JAQA=\\\" wide\\n        $m = \\\"c60oKUp0ys9J8SxJzMlMBgA=\\\" wide\\n        $n = \\\"8yxJzMlMBgA=\\\" wide\\n        $o = \\\"88lMzygBAA==\\\" wide\\n        $p = \\\"88lMzyjxLEnMyUwGAA==\\\" wide\\n        $q = \\\"C0pNL81JLAIA\\\" wide\\n        $r = \\\"C07NzXTKz0kBAA==\\\" wide\\n        $s = \\\"C07NzXTKz0nxLEnMyUwGAA==\\\" wide\\n        $t = \\\"yy9IzStOzCsGAA==\\\" wide\\n        $u = \\\"y8svyQcA\\\" wide\\n        $v = \\\"SytKTU3LzysBAA==\\\" wide\\n        $w = \\\"C84vLUpOdc5PSQ0oygcA\\\" wide\\n        $x = \\\"C84vLUpODU4tykwLKMoHAA==\\\" wide\\n        $y = \\\"C84vLUpO9UjMC07MKwYA\\\" wide\\n        $z = \\\"C84vLUpO9UjMC04tykwDAA==\\\" wide\\n    condition:\\n        ($a and $b and $c and $d and $e and $f and $h and $i) or ($j and $k and $l and $m and $n and $o and $p and $q and $r and $s and ($aa or $ab)) or ($t and $u and $v and $w and $x and $y and $z and ($aa or $ab)) or ($ac and $ad and $ae and $af and $ag and $ah and ($am or $an)) or ($ai and $aj and $ak and $al and ($am or $an))\\n}\\n\\nprivate rule APT_Backdoor_MSIL_SUNBURST_3\\n{\\n    meta:\\n        author = \\\"FireEye\\\"\\n        description = \\\"This rule is looking for certain portions of the SUNBURST backdoor that deal with C2 communications. SUNBURST is a backdoor that has the ability to spawn and kill processes, write and delete files, set and create registry keys, gather system information, and disable a set of forensic analysis tools and services.\\\"\\n        source = \\\"https://github.com/fireeye/sunburst_countermeasures/blob/main/rules/SUNBURST/yara/APT_Backdoor_MSIL_SUNBURST_3.yar\\\"\\n    \\n    strings:\\n        $sb1 = { 05 14 51 1? 0A 04 28 [2] 00 06 0? [0-16] 03 1F ?? 2E ?? 03 1F ?? 2E ?? 03 1F ?? 2E ?? 03 1F [1-32] 03 0? 05 28 [2] 00 06 0? [0-32] 03 [0-16] 59 45 06 }\\n        $sb2 = { FE 16 [2] 00 01 6F [2] 00 0A 1? 8D [2] 00 01 [0-32] 1? 1? 7B 9? [0-16] 1? 1? 7D 9? [0-16] 6F [2] 00 0A 28 [2] 00 0A 28 [2] 00 0A [0-32] 02 7B [2] 00 04 1? 6F [2] 00 0A [2-32] 02 7B [2] 00 04 20 [4] 6F [2] 00 0A [0-32] 13 ?? 11 ?? 11 ?? 6E 58 13 ?? 11 ?? 11 ?? 9? 1? [0-32] 60 13 ?? 0? 11 ?? 28 [4] 11 ?? 11 ?? 9? 28 [4] 28 [4-32] 9? 58 [0-32] 6? 5F 13 ?? 02 7B [2] 00 04 1? ?? 1? ?? 6F [2] 00 0A 8D [2] 00 01 }\\n        $ss1 = \\\"\\\\x00set_UseShellExecute\\\\x00\\\"\\n        $ss2 = \\\"\\\\x00ProcessStartInfo\\\\x00\\\"\\n        $ss3 = \\\"\\\\x00GetResponseStream\\\\x00\\\"\\n        $ss4 = \\\"\\\\x00HttpWebResponse\\\\x00\\\"\\n    condition:\\n        (uint16(0) == 0x5A4D and uint32(uint32(0x3C)) == 0x00004550) and all of them\\n}\\n\\nprivate rule APT_Backdoor_MSIL_SUNBURST_4\\n{\\n    meta:\\n        author = \\\"FireEye\\\"\\n        description = \\\"This rule is looking for specific methods used by the SUNBURST backdoor. SUNBURST is a backdoor that has the ability to spawn and kill processes, write and delete files, set and create registry keys, gather system information, and disable a set of forensic analysis tools and services.\\\"\\n        source = \\\"https://github.com/fireeye/sunburst_countermeasures/blob/main/rules/SUNBURST/yara/APT_Backdoor_MSIL_SUNBURST_4.yar\\\"\\n    \\n    strings:\\n        $ss1 = \\\"\\\\x00set_UseShellExecute\\\\x00\\\"\\n        $ss2 = \\\"\\\\x00ProcessStartInfo\\\\x00\\\"\\n        $ss3 = \\\"\\\\x00GetResponseStream\\\\x00\\\"\\n        $ss4 = \\\"\\\\x00HttpWebResponse\\\\x00\\\"\\n        $ss5 = \\\"\\\\x00ExecuteEngine\\\\x00\\\"\\n        $ss6 = \\\"\\\\x00ParseServiceResponse\\\\x00\\\"\\n        $ss7 = \\\"\\\\x00RunTask\\\\x00\\\"\\n        $ss8 = \\\"\\\\x00CreateUploadRequest\\\\x00\\\"\\n    condition:\\n        (uint16(0) == 0x5A4D and uint32(uint32(0x3C)) == 0x00004550) and all of them\\n}\\n\\nprivate rule APT_Dropper_Raw64_TEARDROP_1\\n{\\n    meta:\\n        author = \\\"FireEye\\\"\\n        description = \\\"This rule looks for portions of the TEARDROP backdoor that are vital to how it functions. TEARDROP is a memory only dropper that can read files and registry keys, XOR decode an embedded payload, and load the payload into memory. TEARDROP persists as a Windows service and has been observed dropping Cobalt Strike BEACON into memory.\\\"\\n        source = \\\"https://github.com/fireeye/sunburst_countermeasures/blob/main/rules/TEARDROP/yara/APT_Dropper_Raw64_TEARDROP_1.yar\\\"\\n    \\n    strings:\\n        $sb1 = { C7 44 24 ?? 80 00 00 00 [0-64] BA 00 00 00 80 [0-32] 48 8D 0D [4-32] FF 15 [4] 48 83 F8 FF [2-64] 41 B8 40 00 00 00 [0-64] FF 15 [4-5] 85 C0 7? ?? 80 3D [4] FF }\\n        $sb2 = { 80 3D [4] D8 [2-32] 41 B8 04 00 00 00 [0-32] C7 44 24 ?? 4A 46 49 46 [0-32] E8 [4-5] 85 C0 [2-32] C6 05 [4] 6A C6 05 [4] 70 C6 05 [4] 65 C6 05 [4] 67 }\\n        $sb3 = { BA [4] 48 89 ?? E8 [4] 41 B8 [4] 48 89 ?? 48 89 ?? E8 [4] 85 C0 7? [1-32] 8B 44 24 ?? 48 8B ?? 24 [1-16] 48 01 C8 [0-32] FF D0 }\\n    condition:\\n        all of them\\n}\\n\\nprivate rule APT_Dropper_Win64_TEARDROP_2\\n{\\n    meta:\\n        author = \\\"FireEye\\\"\\n        description = \\\"This rule is intended match specific sequences of opcode found within TEARDROP, including those that decode the embedded payload. TEARDROP is a memory only dropper that can read files and registry keys, XOR decode an embedded payload, and load the payload into memory. TEARDROP persists as a Windows service and has been observed dropping Cobalt Strike BEACON into memory.\\\"\\n        source = \\\"https://github.com/fireeye/sunburst_countermeasures/blob/main/rules/TEARDROP/yara/APT_Dropper_Win64_TEARDROP_2.yar\\\"\\n    \\n    strings:\\n        $loc_4218FE24A5 = { 48 89 C8 45 0F B6 4C 0A 30 }\\n        $loc_4218FE36CA = { 48 C1 E0 04 83 C3 01 48 01 E8 8B 48 28 8B 50 30 44 8B 40 2C 48 01 F1 4C 01 FA }\\n        $loc_4218FE2747 = { C6 05 ?? ?? ?? ?? 6A C6 05 ?? ?? ?? ?? 70 C6 05 ?? ?? ?? ?? 65 C6 05 ?? ?? ?? ?? 67 }\\n        $loc_5551D725A0 = { 48 89 C8 45 0F B6 4C 0A 30 48 89 CE 44 89 CF 48 F7 E3 48 C1 EA 05 48 8D 04 92 48 8D 04 42 48 C1 E0 04 48 29 C6 }\\n        $loc_5551D726F6 = { 53 4F 46 54 57 41 52 45 ?? ?? ?? ?? 66 74 5C 43 ?? ?? ?? ?? 00 }\\n    condition:\\n        (uint16(0) == 0x5A4D and uint32(uint32(0x3C)) == 0x00004550) and any of them\\n}\\n\\nimport \\\"pe\\\"\\nprivate rule SentinelLabs_SUPERNOVA\\n{\\n\\tmeta:\\n\\t\\tdescription = \\\"Identifies potential versions of App_Web_logoimagehandler.ashx.b6031896.dll weaponized with SUPERNOVA\\\"\\n\\t\\tdate = \\\"2020-12-22\\\"\\n\\t\\tauthor = \\\"SentinelLabs\\\"\\n        source = \\\"https://labs.sentinelone.com/solarwinds-understanding-detecting-the-supernova-webshell-trojan/\\\"\\n        \\n\\tstrings:\\n\\t\\t$ = \\\"clazz\\\"\\n\\t\\t$ = \\\"codes\\\"\\n\\t\\t$ = \\\"args\\\"\\n\\t\\t$ = \\\"ProcessRequest\\\"\\n\\t\\t$ = \\\"DynamicRun\\\"\\n\\t\\t$ = \\\"get_IsReusable\\\"\\n\\t\\t$ = \\\"logoimagehandler.ashx\\\" wide\\n\\t\\t$ = \\\"SiteNoclogoImage\\\" wide\\n\\t\\t$ = \\\"SitelogoImage\\\" wide\\n\\n\\tcondition:\\n\\t\\t(uint16(0) == 0x5A4D and uint32(uint32(0x3C)) == 0x00004550 and pe.imports(\\\"mscoree.dll\\\")) and all of them\\n}\\n\\nrule SolarWindsArtifacts\\n{\\n    meta:\\n        author = \\\"NSA Cybersecurity\\\"\\n        description = \\\"Artifacts common to the SolarWinds compromise.\\\"\\n\\n    condition:\\n        APT_Backdoor_MSIL_SUNBURST_1 \\n        or APT_Backdoor_MSIL_SUNBURST_2 \\n        or APT_Backdoor_MSIL_SUNBURST_3 \\n        or APT_Backdoor_MSIL_SUNBURST_4 \\n        or APT_Dropper_Raw64_TEARDROP_1 \\n        or APT_Dropper_Win64_TEARDROP_2\\n        or SentinelLabs_SUPERNOVA\\n}\\n\",\n        \"type\": \"text\",\n        \"engine\": \"yara\",\n        \"organizationIds\": [],\n        \"deletable\": false\n    },\n    \"statusCode\": 200,\n    \"errors\": []\n}"
						},
						{
							"name": "Get Triage Rule by ID - 404 Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/{{apiPrefix}}/triages/rules/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"{{apiPrefix}}",
										"triages",
										"rules",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "corewebshell_detection",
											"description": "Triage Rule ID "
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "100"
								},
								{
									"key": "ETag",
									"value": "W/\"64-fbi0Nrbladux/EIV6oYT6yJpjg4\""
								},
								{
									"key": "Date",
									"value": "Fri, 27 May 2022 18:32:56 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"errors\": [\n        \"No triage rule found by provided id(s)\"\n    ],\n    \"statusCode\": 404,\n    \"result\": null\n}"
						}
					]
				},
				{
					"name": "Validate Triage Rule",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"rule\": \"private rule b374k\\n{\\n    meta:\\n        author = \\\"Blair Gillam (@blairgillam)\\\"\\n\\n    strings:\\n        $string = \\\"b374k\\\"\\n        $password_var = \\\"$s_pass\\\"\\n        $default_password = \\\"0de664ecd2be02cdd54234a0d1229b43\\\"\\n\\n    condition:\\n        any of them\\n}\",\r\n    \"engine\": \"yara\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/{{apiPrefix}}/triages/rules/validate",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"{{apiPrefix}}",
								"triages",
								"rules",
								"validate"
							]
						},
						"description": "### Parameters\n\n| **Name** | **Constraints** |\n| --- | --- |\n| **rule**  <br>string / required |  |\n| **engine**  <br>string / required | valid values: yara, sigma, osquery |"
					},
					"response": [
						{
							"name": "Validate Triage Rule - 200 OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"rule\": \"private rule b374k\\n{\\n    meta:\\n        author = \\\"Blair Gillam (@blairgillam)\\\"\\n\\n    strings:\\n        $string = \\\"b374k\\\"\\n        $password_var = \\\"$s_pass\\\"\\n        $default_password = \\\"0de664ecd2be02cdd54234a0d1229b43\\\"\\n\\n    condition:\\n        any of them\\n}\",\r\n    \"engine\": \"yara\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/{{apiPrefix}}/triages/rules/validate",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"{{apiPrefix}}",
										"triages",
										"rules",
										"validate"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "59"
								},
								{
									"key": "ETag",
									"value": "W/\"3b-MHtur75ftUyQ2IfDqFjH6SAxAM4\""
								},
								{
									"key": "Date",
									"value": "Fri, 27 May 2022 18:34:03 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"result\": null,\n    \"statusCode\": 200,\n    \"errors\": []\n}"
						},
						{
							"name": "Validate Triage Rule - 660 InvalidTriageRule",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"rule\": \"private rule b374k\\n{\\n    meta:\\n        author = \\\"Blair Gillam (@blairgillam)\\\"\\n\\n    strings:\\n        $string = \\\"b374k\\\"\\n        $password_var = \\\"$s_pass\\\"\\n        $default_password  \\\"0de664ecd2be02cdd54234a0d1229b43\\\"\\n\\n    condition:\\n        any of them\\n}\",\r\n    \"engine\": \"yara\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/{{apiPrefix}}/triages/rules/validate",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"{{apiPrefix}}",
										"triages",
										"rules",
										"validate"
									]
								}
							},
							"status": "InvalidTriageRule",
							"code": 660,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "64"
								},
								{
									"key": "ETag",
									"value": "W/\"40-wzDKZfupa63UCW+8YrtVTqui2EE\""
								},
								{
									"key": "Date",
									"value": "Fri, 27 May 2022 18:36:09 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"errors\": [\n        \"line 9: syntax error: unexpected _TEXT_STRING_, expecting '='\"\n    ],\n    \"statusCode\": 660,\n    \"result\": null\n}"
						}
					]
				},
				{
					"name": "Assign Triage Task by Filter",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.runForTest(() => {",
									"    const payload = JSON.parse(pm.request.body.raw)",
									"    payload.filter.includedEndpointIds = [",
									"        pm.collectionVariables.get('endpointId')",
									"    ]",
									"    pm.request.body.raw = JSON.stringify(payload)",
									"})"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"caseId\": null,\n    \"triageRuleIds\": [\n        \"fireeye-red-team-tools-countermeasures\",\n        \"fireeye-sunburst-countermeasures\"\n    ],\n    \"taskConfig\": {\n        \"choice\": \"use-policy\"\n    },\n    \"mitreAttack\": {\n        \"enabled\": true\n    },\n    \"filter\": {\n        \"searchTerm\": \"\",\n        \"name\": \"\",\n        \"ipAddress\": \"\",\n        \"groupId\": \"\",\n        \"groupFullPath\": \"\",\n        \"managedStatus\": [],\n        \"isolationStatus\": [],\n        \"platform\": [],\n        \"issue\": \"\",\n        \"onlineStatus\": [],\n        \"tags\": [],\n        \"version\": \"\",\n        \"policy\": \"\",\n        \"includedEndpointIds\": [],\n        \"excludedEndpointIds\": [],\n        \"organizationIds\": [\n            0\n        ]\n    },\n    \"schedulerConfig\": {\n        \"when\": \"now\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/{{apiPrefix}}/triages/triage",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"{{apiPrefix}}",
								"triages",
								"triage"
							]
						},
						"description": "### Body Parameters\n\n| **Name** | **Constraints** |\n| --- | --- |\n| **caseId**  <br>string / optional |  |\n| **triageRuleIds**  <br>string array / required |  |\n| **taskConfig.choice**  <br>string / required | valid values: use-policy, use-custom-options |\n| **taskConfig.cpu**  <br>object / required |  |\n| **taskConfig.cpu.limit**  <br>number / required | min: 1  <br>max: 100 |\n| **filter.organizationIds**  <br>number array / required |  |\n| **filter.searchTerm**  <br>string / optional |  |\n| **filter.name**  <br>string / optional |  |\n| **filter.ipAddress**  <br>string / optional |  |\n| **filter.groupId**  <br>string / optional |  |\n| **filter.groupFullPath**  <br>string / optional |  |\n| **filter.label**  <br>string / optional |  |\n| **filter.lastSeen**  <br>string / optional | Example: 2023-03-06T21:00:00.000Z,2023-03-24T21:00:00.000Z |\n| **filter.managedStatus**  <br>string array / optional | valid values: unmanaged, managed, off-network |\n| **filter.isolationStatus**  <br>string array / optional | valid values: isolating, isolated, unisolating, unisolated |\n| **filter.platform**  <br>string array / optional | valid values: windows, linux, darwin |\n| **filter.issue**  <br>string array / optional | valid values: unreachable, old-version, update-required |\n| **filter.onlineStatus**  <br>string array / optional | valid values: online, offline |\n| **filter.tags**  <br>string array / optional |  |\n| **filter.version**  <br>string / optional |  |\n| **filter.policy**  <br>string / optional |  |\n| **filter.includedEndpointIds**  <br>string array / optional |  |\n| **filter.excludedEndpointIds**  <br>string array / optional |  |\n| **filter.caseId**  <br>string / optional |  |\n| **filter.awsRegions**  <br>string array / optional |  |\n| **filter.azureRegions**  <br>string array / optional |  |\n| **schedulerConfig.when**  <br>string / required | valid values: now, scheduled |\n| **schedulerConfig.timezoneType**  <br>string / if scheduled: required | valid values: asset, custom |\n| **schedulerConfig.timezone**  <br>string / if scheduled and custom timezone type selected: required | example: Europe/London |\n| **schedulerConfig.startDate**  <br>unix timestamp / if scheduled: required |  |\n| **schedulerConfig.recurrence**  <br>string / if scheduled: required | valid values: onetime, daily, weekly, monthly |\n| **schedulerConfig.repeatEvery**  <br>number / if scheduled and recurrence is daily or monthly: required |  |\n| **schedulerConfig.repeatOnWeek**  <br>string array / if scheduled and recurrence is weekly: required | valid values: array of 3-letter days of week.  <br>example: \\['MON', 'WED'\\] |\n| **schedulerConfig.repeatOnMonth**  <br>number / if scheduled and recurrence is monthly: required | day of month |\n| **schedulerConfig.endRepeatType**  <br>string / if scheduled: required | valid values: never, date, occurrence |\n| **schedulerConfig.endDate**  <br>unix timestamp / if scheduled and end repeat type is date: required |  |\n| **schedulerConfig.limit**  <br>number / if scheduled and end repeat type is occurrence: required |  |\n| **mitreAttack.enabled**  <br>boolean / required |  |"
					},
					"response": [
						{
							"name": "Assign Triage Task by Filter - 200 OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"caseId\": \"C-2022-0001\",\n    \"triageRuleIds\": [\n        \"fireeye-red-team-tools-countermeasures\",\n        \"fireeye-sunburst-countermeasures\"\n    ],\n    \"taskConfig\": {\n        \"choice\": \"use-custom-options\"\n    },\n    \"mitreAttack\": {\n        \"enabled\": true\n    },\n    \"filter\": {\n        \"searchTerm\": \"\",\n        \"name\": \"\",\n        \"ipAddress\": \"\",\n        \"groupId\": \"\",\n        \"groupFullPath\": \"\",\n        \"managedStatus\": [\n            \"managed\"\n        ],\n        \"isolationStatus\": [],\n        \"platform\": [],\n        \"issue\": \"\",\n        \"onlineStatus\": [],\n        \"tags\": [],\n        \"version\": \"\",\n        \"policy\": \"\",\n        \"includedEndpointIds\": [\n            \"9b890244-809c-415a-8e56-301be2aefe83\"\n        ],\n        \"excludedEndpointIds\": [],\n        \"organizationIds\": [\n            0\n        ]\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/{{apiPrefix}}/triages/triage",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"{{apiPrefix}}",
										"triages",
										"triage"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "534"
								},
								{
									"key": "ETag",
									"value": "W/\"216-shvmRJGvbsL0y2dTa0iTUZuxdgI\""
								},
								{
									"key": "Date",
									"value": "Fri, 27 May 2022 18:49:28 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"result\": [\n        {\n            \"_id\": \"9e179523-94fd-40c8-9ffb-66e276ad60c0\",\n            \"name\": \"Example Case Triage 001\",\n            \"organizationId\": 0\n        }\n    ],\n    \"statusCode\": 200,\n    \"errors\": []\n}"
						},
						{
							"name": "Assign Triage Task by Filter without Organization ID - 400 Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"caseId\": \"C-2022-0001\",\n    \"triageRuleIds\": [\n        \"fireeye-red-team-tools-countermeasures\",\n        \"fireeye-sunburst-countermeasures\"\n    ],\n    \"taskConfig\": {\n        \"choice\": \"use-custom-options\"\n    },\n    \"mitreAttack\": {\n        \"enabled\": true\n    },\n    \"filter\": {\n        \"searchTerm\": \"\",\n        \"name\": \"\",\n        \"ipAddress\": \"\",\n        \"groupId\": \"\",\n        \"groupFullPath\": \"\",\n        \"managedStatus\": [\n            \"managed\"\n        ],\n        \"isolationStatus\": [],\n        \"platform\": [],\n        \"issue\": \"\",\n        \"onlineStatus\": [],\n        \"tags\": [],\n        \"version\": \"\",\n        \"policy\": \"\",\n        \"includedEndpointIds\": [\n            \"9b890244-809c-415a-8e56-301be2aefe83\"\n        ],\n        \"excludedEndpointIds\": [],\n        \"organizationIds\": []\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/{{apiPrefix}}/triages/triage",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"{{apiPrefix}}",
										"triages",
										"triage"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "100"
								},
								{
									"key": "ETag",
									"value": "W/\"64-0dZahibur8gfpdjDGd/+kpCpojg\""
								},
								{
									"key": "Date",
									"value": "Fri, 27 May 2022 18:49:46 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"errors\": [\n        \"'organizationIds' should not be empty.\"\n    ],\n    \"statusCode\": 400,\n    \"result\": null\n}"
						},
						{
							"name": "Assign Triage Task by Filter without Triage Rule - 400 Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"caseId\": \"C-2022-0001\",\n    \"triageRuleIds\": [\n    ],\n    \"taskConfig\": {\n        \"choice\": \"use-custom-options\"\n    },\n    \"mitreAttack\": {\n        \"enabled\": true\n    },\n    \"filter\": {\n        \"searchTerm\": \"\",\n        \"name\": \"\",\n        \"ipAddress\": \"\",\n        \"groupId\": \"\",\n        \"groupFullPath\": \"\",\n        \"managedStatus\": [\n            \"managed\"\n        ],\n        \"isolationStatus\": [],\n        \"platform\": [],\n        \"issue\": \"\",\n        \"onlineStatus\": [],\n        \"tags\": [],\n        \"version\": \"\",\n        \"policy\": \"\",\n        \"includedEndpointIds\": [\n            \"9b890244-809c-415a-8e56-301be2aefe83\"\n        ],\n        \"excludedEndpointIds\": [],\n        \"organizationIds\": [\n            0\n        ]\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/{{apiPrefix}}/triages/triage",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"{{apiPrefix}}",
										"triages",
										"triage"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "111"
								},
								{
									"key": "ETag",
									"value": "W/\"6f-J7d2/B7i3ngxNZkLhKLtOPCIsHw\""
								},
								{
									"key": "Date",
									"value": "Fri, 27 May 2022 18:50:17 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"errors\": [\n        [\n            \"triageRuleIds must be an array with elements(s)\"\n        ]\n    ],\n    \"statusCode\": 400,\n    \"result\": null\n}"
						},
						{
							"name": "Assign Triage Task by Filter - 406 Not Acceptable",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"assertions\": {\n        \"failIfNumberOfAssetsGreaterThan\": 5\n    },\n    \"caseId\": null,\n    \"triageRuleIds\": [\n        \"fireeye-red-team-tools-countermeasures\",\n        \"fireeye-sunburst-countermeasures\"\n    ],\n    \"taskConfig\": {\n        \"choice\": \"use-policy\"\n    },\n    \"mitreAttack\": {\n        \"enabled\": true\n    },\n    \"filter\": {\n        \"searchTerm\": \"\",\n        \"name\": \"\",\n        \"ipAddress\": \"\",\n        \"groupId\": \"\",\n        \"groupFullPath\": \"\",\n        \"managedStatus\": [],\n        \"isolationStatus\": [],\n        \"platform\": [],\n        \"issue\": \"\",\n        \"onlineStatus\": [],\n        \"tags\": [],\n        \"version\": \"\",\n        \"policy\": \"\",\n        \"includedEndpointIds\": [],\n        \"excludedEndpointIds\": [],\n        \"organizationIds\": [\n            0\n        ]\n    },\n    \"schedulerConfig\": {\n        \"when\": \"now\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/{{apiPrefix}}/triages/triage",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"{{apiPrefix}}",
										"triages",
										"triage"
									]
								}
							},
							"status": "Not Acceptable",
							"code": 406,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "nginx"
								},
								{
									"key": "Date",
									"value": "Wed, 30 Apr 2025 08:05:43 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "189"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Cache-Control",
									"value": "no-store"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "ETag",
									"value": "W/\"bd-yy1Q5Dlx3fkmXTzVt+u5Fl/RqvQ\""
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"errors\": [\n        \"The number of assets matching the provided filter exceeds the allowed limit. Matching asset count: 39, Maximum allowed asset: 5\"\n    ],\n    \"statusCode\": 406,\n    \"result\": null\n}"
						}
					]
				}
			]
		},
		{
			"name": "Users",
			"item": [
				{
					"name": "Get Users",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.runForTest(() => {",
									"    const userId = JSON.parse(responseBody).result.entities[0]._id",
									"    pm.collectionVariables.set('userId', userId)",
									"})",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/{{apiPrefix}}/user-management/users?filter[organizationIds]=0",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"{{apiPrefix}}",
								"user-management",
								"users"
							],
							"query": [
								{
									"key": "pageSize",
									"value": "10",
									"disabled": true
								},
								{
									"key": "pageNumber",
									"value": "1",
									"disabled": true
								},
								{
									"key": "sortBy",
									"value": "createdAt",
									"disabled": true
								},
								{
									"key": "sortType",
									"value": "ASC",
									"disabled": true
								},
								{
									"key": "filter[includeNotInOrganization]",
									"value": "false",
									"disabled": true
								},
								{
									"key": "filter[organizationIds]",
									"value": "0"
								}
							]
						},
						"description": "### Parameters\n\n| **Name** | **Constraints** |\n| --- | --- |\n| **pageNumber**  <br>number / optional | default value: 1  <br>min value:1 |\n| **pageSize**  <br>number / optional | default value: 10  <br>min value:1 |\n| **sortBy**  <br>string / optional | default value: createdAt |\n| **sortType**  <br>string / optional | default value: ASC  <br>valid values: ASC, DESC |\n| **filter\\[includeNotInOrganization\\]**  <br>boolean / optional | valid values: true, false |\n| **filter\\[organizationIds\\]**  <br>number / required |  |"
					},
					"response": [
						{
							"name": "Get Users - 200 OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/{{apiPrefix}}/user-management/users?filter[organizationIds]=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"{{apiPrefix}}",
										"user-management",
										"users"
									],
									"query": [
										{
											"key": "pageSize",
											"value": "100",
											"disabled": true
										},
										{
											"key": "pageNumber",
											"value": "1",
											"disabled": true
										},
										{
											"key": "sortBy",
											"value": "username",
											"disabled": true
										},
										{
											"key": "sortType",
											"value": "ASC",
											"disabled": true
										},
										{
											"key": "filter[includeNotInOrganization]",
											"value": "false",
											"disabled": true
										},
										{
											"key": "filter[organizationIds]",
											"value": "0"
										},
										{
											"key": "filter[roles]",
											"value": "",
											"disabled": true
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "746"
								},
								{
									"key": "ETag",
									"value": "W/\"2ea-7O/gLrFZToA14HHjF9SajWS3W3M\""
								},
								{
									"key": "Date",
									"value": "Sat, 25 Jun 2022 19:35:26 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"result\": {\n        \"entities\": [\n            {\n                \"_id\": \"DtmrCWrK1o7m0bqVItIzg6Ia\",\n                \"email\": \"demo@binalyze.com\",\n                \"username\": \"demo@binalyze.com\",\n                \"organizationIds\": \"ALL\",\n                \"strategy\": \"local\",\n                \"profile\": {\n                    \"name\": \"\",\n                    \"surname\": \"\",\n                    \"department\": \"\"\n                },\n                \"tfaEnabled\": false,\n                \"createdAt\": \"2022-06-25T11:51:07.305Z\",\n                \"updatedAt\": \"2022-06-25T11:51:07.305Z\"\n            }\n        ],\n        \"filters\": [],\n        \"sortables\": [\n            \"username\",\n            \"createdAt\"\n        ],\n        \"totalEntityCount\": 1,\n        \"currentPage\": 1,\n        \"pageSize\": 10,\n        \"previousPage\": 0,\n        \"totalPageCount\": 1,\n        \"nextPage\": 2\n    },\n    \"statusCode\": 200,\n    \"errors\": []\n}"
						},
						{
							"name": "Get Users - 400 Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/{{apiPrefix}}/user-management/users",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"{{apiPrefix}}",
										"user-management",
										"users"
									],
									"query": [
										{
											"key": "pageSize",
											"value": "100",
											"disabled": true
										},
										{
											"key": "pageNumber",
											"value": "1",
											"disabled": true
										},
										{
											"key": "sortBy",
											"value": "username",
											"disabled": true
										},
										{
											"key": "sortType",
											"value": "ASC",
											"disabled": true
										},
										{
											"key": "filter[includeNotInOrganization]",
											"value": "false",
											"disabled": true
										},
										{
											"key": "filter[organizationIds]",
											"value": "0",
											"disabled": true
										},
										{
											"key": "filter[roles]",
											"value": "",
											"disabled": true
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "100"
								},
								{
									"key": "ETag",
									"value": "W/\"64-0dZahibur8gfpdjDGd/+kpCpojg\""
								},
								{
									"key": "Date",
									"value": "Sat, 25 Jun 2022 19:35:55 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"errors\": [\n        \"'organizationIds' should not be empty.\"\n    ],\n    \"statusCode\": 400,\n    \"result\": null\n}"
						}
					]
				},
				{
					"name": "Get User by ID",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.runForTest(() => {",
									"    pm.request.url.variables.add({",
									"        key: 'id', value: pm.collectionVariables.get('userId')",
									"    })",
									"})"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/{{apiPrefix}}/user-management/users/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"{{apiPrefix}}",
								"user-management",
								"users",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "",
									"description": "User ID"
								}
							]
						}
					},
					"response": [
						{
							"name": "Get User by ID - 200 OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/{{apiPrefix}}/user-management/users/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"{{apiPrefix}}",
										"user-management",
										"users",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "DtmrCWrK1o7m0bqVItIzg6Ia",
											"description": "User ID"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "581"
								},
								{
									"key": "ETag",
									"value": "W/\"245-YXmZS9rsJYW00l32qHu9AokqnHA\""
								},
								{
									"key": "Date",
									"value": "Sat, 25 Jun 2022 19:41:38 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"result\": {\n        \"_id\": \"DtmrCWrK1o7m0bqVItIzg6Ia\",\n        \"email\": \"demo@binalyze.com\",\n        \"username\": \"demo@binalyze.com\",\n        \"organizationIds\": \"ALL\",\n        \"strategy\": \"local\",\n        \"profile\": {\n            \"name\": \"\",\n            \"surname\": \"\",\n            \"department\": \"\"\n        },\n        \"tfaEnabled\": false,\n        \"createdAt\": \"2022-06-25T11:51:07.305Z\",\n        \"updatedAt\": \"2022-06-25T11:51:07.305Z\"\n    },\n    \"statusCode\": 200,\n    \"errors\": []\n}"
						},
						{
							"name": "Get User by ID - 404 Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/{{apiPrefix}}/user-management/users/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"{{apiPrefix}}",
										"user-management",
										"users",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "DtmrCWrK1o7m0bqVItIzg6Ias",
											"description": "User ID"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "110"
								},
								{
									"key": "ETag",
									"value": "W/\"6e-RhTGpK8QjILNMc5uv9MhYdsiUik\""
								},
								{
									"key": "Date",
									"value": "Sat, 25 Jun 2022 19:41:54 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"errors\": [\n        \"User with id DtmrCWrK1o7m0bqVItIzg6Ias not found\"\n    ],\n    \"statusCode\": 404,\n    \"result\": null\n}"
						}
					]
				}
			]
		},
		{
			"name": "Webhooks",
			"item": [
				{
					"name": "Webhook GET",
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"user-agent": true
						}
					},
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/webhook/:slug/:data?token=sample-webhook-token",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"webhook",
								":slug",
								":data"
							],
							"query": [
								{
									"key": "token",
									"value": "sample-webhook-token",
									"description": "Token is provided by AIR Console when you create a new webhook"
								}
							],
							"variable": [
								{
									"key": "slug",
									"value": "air-generic-url-webhook",
									"description": "Slug is the name of the webhook that you want to use"
								},
								{
									"key": "data",
									"value": "hostname-1,192.168.1.100",
									"description": "Comma seperated hostnames or IP adresses"
								}
							]
						},
						"description": "A webhook can be triggered by an **HTTP GET** request."
					},
					"response": [
						{
							"name": "Webhook GET - 200 OK",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/webhook/:slug/:data?token=sample-webhook-token",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"webhook",
										":slug",
										":data"
									],
									"query": [
										{
											"key": "token",
											"value": "sample-webhook-token",
											"description": "Token is provided by AIR Console when you create a new webhook"
										}
									],
									"variable": [
										{
											"key": "slug",
											"value": "air-generic-url-webhook",
											"description": "Slug is the name of the webhook that you want to use"
										},
										{
											"key": "data",
											"value": "192.168.1.100",
											"description": "Comma seperated hostnames or IP addresses"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "347"
								},
								{
									"key": "ETag",
									"value": "W/\"15b-VVRwbJHzE6GdIqElzhMaJbFGZj0\""
								},
								{
									"key": "Date",
									"value": "Fri, 22 Sep 2023 09:46:03 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"taskDetailsViewUrl\": \"{{baseUrl}}/#/task-details/a23ca119-d030-40c7-825e-ed254c8914dd\", // This url opens task details page on Binalyze AIR. It requires login.\n    \"taskDetailsDataUrl\": \"{{baseUrl}}/api/webhook/air-generic-url-webhook/assignments?token={{webhookToken}}&taskId=a23ca119-d030-40c7-825e-ed254c8914dd\", // This url makes an api call that returns task details. Can be used without additional authentication\n    \"taskId\": \"a23ca119-d030-40c7-825e-ed254c8914dd\", // The ID of the task that contains assignments that are made in this requests\n    \"statusCode\": 200\n}"
						},
						{
							"name": "Webhook GET - 404 Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/webhook/:slug/:data?token=sample-webhook-token",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"webhook",
										":slug",
										":data"
									],
									"query": [
										{
											"key": "token",
											"value": "sample-webhook-token",
											"description": "Token is provided by AIR Console when you create a new webhook"
										}
									],
									"variable": [
										{
											"key": "slug",
											"value": "air-generic-url-webhook",
											"description": "Slug is the name of the webhook that you want to use"
										},
										{
											"key": "data",
											"value": "10.0.0.1",
											"description": "Comma seperated hostnames or IP addresses"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "95"
								},
								{
									"key": "ETag",
									"value": "W/\"5f-jW0X9xviolC0TYtsN8wHqkBRBQY\""
								},
								{
									"key": "Date",
									"value": "Fri, 22 Sep 2023 10:45:11 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"No endpoint found by provided computer names\",\n    \"error\": \"Not Found\",\n    \"statusCode\": 404\n}"
						},
						{
							"name": "Webhook GET - 403 Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/webhook/:slug/:data?token=wrong-token",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"webhook",
										":slug",
										":data"
									],
									"query": [
										{
											"key": "token",
											"value": "wrong-token"
										}
									],
									"variable": [
										{
											"key": "slug",
											"value": "air-generic-url-webhook",
											"description": "Slug is the name of the webhook that you want to use"
										},
										{
											"key": "data",
											"value": "192.168.1.100",
											"description": "Comma seperated hostnames or IP addresses"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "69"
								},
								{
									"key": "ETag",
									"value": "W/\"45-MZJWZc+Y+RUbHpnhz2B2Vipii24\""
								},
								{
									"key": "Date",
									"value": "Fri, 22 Sep 2023 09:38:18 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"Forbidden resource\",\n    \"error\": \"Forbidden\",\n    \"statusCode\": 403\n}"
						}
					]
				},
				{
					"name": "Webhook POST",
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"user-agent": true
						}
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "// POST request body depends on the application that triggers webhook.\n// For more info https://kb.binalyze.com/air/integrations",
							"options": {
								"raw": {
									"language": "javascript"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/webhook/:slug?token=sample-webhook-token",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"webhook",
								":slug"
							],
							"query": [
								{
									"key": "token",
									"value": "sample-webhook-token",
									"description": "Token is provided by AIR Console when you create a new webhook"
								}
							],
							"variable": [
								{
									"key": "slug",
									"value": "air-generic-url-webhook",
									"description": "Slug is the name of the webhook that you want to use"
								}
							]
						},
						"description": "A webhook can also be triggered by an **HTTP POST** request."
					},
					"response": []
				},
				{
					"name": "Task Details Data",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/webhook/:slug/assignments?token=sample-webhook-token&taskId=a23ca119-d030-40c7-825e-ed254c8914dd",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"webhook",
								":slug",
								"assignments"
							],
							"query": [
								{
									"key": "token",
									"value": "sample-webhook-token",
									"description": "Token is provided by AIR Console when you create a new webhook"
								},
								{
									"key": "taskId",
									"value": "a23ca119-d030-40c7-825e-ed254c8914dd",
									"description": "The ID of the task that returned by triggered webhook"
								}
							],
							"variable": [
								{
									"key": "slug",
									"value": "air-generic-url-webhook",
									"description": "Slug is the name of the webhook that you want to use"
								}
							]
						}
					},
					"response": [
						{
							"name": "Get Task Details Data - 200 OK",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/webhook/:slug/assignments?token=sample-webhook-token&taskId=a23ca119-d030-40c7-825e-ed254c8914dd",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"webhook",
										":slug",
										"assignments"
									],
									"query": [
										{
											"key": "token",
											"value": "sample-webhook-token",
											"description": "Token is provided by AIR Console when you create a new webhook"
										},
										{
											"key": "taskId",
											"value": "a23ca119-d030-40c7-825e-ed254c8914dd",
											"description": "The ID of the task that returned by triggered webhook"
										}
									],
									"variable": [
										{
											"key": "slug",
											"value": "air-generic-url-webhook",
											"description": "Slug is the name of the webhook that you want to use"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "873"
								},
								{
									"key": "ETag",
									"value": "W/\"369-pzM231qdj+m+Nv+D2SJAe/sGQ94\""
								},
								{
									"key": "Date",
									"value": "Fri, 22 Sep 2023 10:00:33 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"assignmentId\": \"eed87189-20e0-427f-af96-96aba8e23803\",\n        \"taskId\": \"a23ca119-d030-40c7-825e-ed254c8914dd\",\n        \"taskName\": \"Acquisition 002\",\n        \"endpointId\": \"8fb32a51-77a8-4aa9-9d9a-f9d0ddd9c734\",\n        \"endpointName\": \"test-endpoint-2\",\n        \"organizationId\": 0,\n        \"assignmentStatus\": \"completed\",\n        \"progress\": 100,\n        \"startedAt\": \"2023-09-22T09:50:51.770Z\",\n        \"hasDroneData\": true,\n        \"hasCasePpc\": true,\n        \"reportStatus\": \"ready\", // The status of final report of assignment\n        \"reportId\": \"report_0c62dfa4740f\", // The ID of the report\n        \"reportUrl\": \"{{baseUrl}}/#/report/assignment/report_0c62dfa4740f\" // Link the report page on Binalyze AIR. Requires authentication\n    }\n]"
						},
						{
							"name": "Get Task Details Data - 200 OK",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/webhook/:slug/assignments?token=sample-webhook-token&taskId=a23ca119-d030-40c7-825e-ed254c8914dd",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"webhook",
										":slug",
										"assignments"
									],
									"query": [
										{
											"key": "token",
											"value": "sample-webhook-token",
											"description": "Token is provided by AIR Console when you create a new webhook"
										},
										{
											"key": "taskId",
											"value": "a23ca119-d030-40c7-825e-ed254c8914dd",
											"description": "The ID of the task that returned by triggered webhook"
										}
									],
									"variable": [
										{
											"key": "slug",
											"value": "air-generic-url-webhook",
											"description": "Slug is the name of the webhook that you want to use"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "873"
								},
								{
									"key": "ETag",
									"value": "W/\"369-pzM231qdj+m+Nv+D2SJAe/sGQ94\""
								},
								{
									"key": "Date",
									"value": "Fri, 22 Sep 2023 10:00:33 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"assignmentId\": \"ba45750f-1c02-4e1a-9dd1-4fa76a862ab1\",\n        \"taskId\": \"a23ca119-d030-40c7-825e-ed254c8914dd\",\n        \"taskName\": \"Acquisition 002\",\n        \"endpointId\": \"aee1eb2a-14ac-4a24-88e6-06b3f82f044e\",\n        \"endpointName\": \"test-endpoint-1\",\n        \"organizationId\": 0,\n        \"assignmentStatus\": \"assigned\",\n        \"progress\": 0,\n        \"startedAt\": null,\n        \"hasDroneData\": false,\n        \"hasCasePpc\": false,\n        \"reportStatus\": \"not-ready\" // The status of final report of assignment\n    }\n]"
						}
					]
				}
			],
			"description": "Webhooks is the quickest way to integrate with AIR. They allow any application that can send HTTP request to collect evidence by using AIR.  \nTo create a webhook;\n\n- Go to `/#/integrations/webhooks` page.\n- Click the `+ Add New` button.\n- Write your webhook name.\n- Select a case if you want to.\n- Select a parser that you want to connect to AIR.\n    - Webhooks can be triggered both HTTP GET or HTTP POST requests. Method depends on what parser you select. You will see an example after selecting the parser.\n- Select an acquisition profile.\n- Select recurring task execution prevention time.\n- Fill the task options.\n- Then click `Save` button.\n    \n\nWebhooks have their own authentication mechanism and do not use Public API tokens.\n\n**NOTE:** You can visit [kb.binalyze.com/air/integrations](https://kb.binalyze.com/air/integrations) to see the all integrations.",
			"auth": {
				"type": "noauth"
			}
		},
		{
			"name": "Settings",
			"item": [
				{
					"name": "Update Banner Message",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"enabled\": false\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/{{apiPrefix}}/settings/banner",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"{{apiPrefix}}",
								"settings",
								"banner"
							]
						},
						"description": "### Body Parameters\n\n| **Name** | **Constraints** |\n| --- | --- |\n| **enabled**  <br>boolean / required | ture or false |\n| **message**  <br>text / required if enabled |  |\n| **usersCanDismiss**  <br>boolean / required if enabled | if you want to user can dismiss the banner set true |\n| **color**  <br>string / required if enabled | \\[_general_, _info_, _maintenance_, _warning_, _alert_\\] one of them |\n| **displayTimeType**  <br>string / required if enabled | it can be **always** or **scheduled** |\n| **scheduleTimes**  <br>object / required if **displayTimeType** is scheduled | if you want scheduled the message please enter the start and end date, if end date is null there is no due to date  <br>**{**  <br>startDate: date,  <br>endDate: date (optional)  <br>**}** |"
					},
					"response": [
						{
							"name": "Disabled",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"enabled\": false\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/{{apiPrefix}}/settings/banner",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"{{apiPrefix}}",
										"settings",
										"banner"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "59"
								},
								{
									"key": "ETag",
									"value": "W/\"3b-MHtur75ftUyQ2IfDqFjH6SAxAM4\""
								},
								{
									"key": "Date",
									"value": "Tue, 28 Nov 2023 10:54:16 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"result\": null,\n    \"statusCode\": 200,\n    \"errors\": []\n}"
						},
						{
							"name": "Enabled",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"enabled\": true,\n    \"message\": \"Example Message\",\n    \"usersCanDismiss\": false,\n    \"color\": \"alert\",\n    \"displayTimeType\":\"always\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/{{apiPrefix}}/settings/banner",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"{{apiPrefix}}",
										"settings",
										"banner"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "59"
								},
								{
									"key": "ETag",
									"value": "W/\"3b-MHtur75ftUyQ2IfDqFjH6SAxAM4\""
								},
								{
									"key": "Date",
									"value": "Tue, 28 Nov 2023 10:59:16 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"result\": null,\n    \"statusCode\": 200,\n    \"errors\": []\n}"
						},
						{
							"name": "Enable with schedule",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"enabled\": true,\n    \"message\": \"Example Message\",\n    \"usersCanDismiss\": false,\n    \"color\": \"alert\",\n    \"displayTimeType\":\"scheduled\",\n    \"scheduleTimes\": {\n        \"startDate\":\"2023-11-28T12:54:38.600Z\",\n        \"endDate\":\"2023-11-30T12:54:38.600Z\"\n    }\n\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/{{apiPrefix}}/settings/banner",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"{{apiPrefix}}",
										"settings",
										"banner"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "59"
								},
								{
									"key": "ETag",
									"value": "W/\"3b-MHtur75ftUyQ2IfDqFjH6SAxAM4\""
								},
								{
									"key": "Date",
									"value": "Tue, 28 Nov 2023 12:54:57 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"result\": null,\n    \"statusCode\": 200,\n    \"errors\": []\n}"
						}
					]
				}
			]
		},
		{
			"name": "Health",
			"item": [
				{
					"name": "Get",
					"request": {
						"method": "GET",
						"header": []
					},
					"response": []
				}
			]
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{apiToken}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"const uuid = require('uuid')",
					"",
					"Object.prototype.isTestEnv = function () {",
					"    return pm.environment.get(\"env\") === \"test\";",
					"};",
					"",
					"Object.prototype.runForTest = function (callback) {",
					"    if (pm.isTestEnv()) {",
					"        callback();",
					"    }",
					"};",
					"",
					"const hasEndpointId = pm.collectionVariables.has('endpointId')",
					"",
					"if (!pm.isTestEnv() || hasEndpointId) {",
					"    return",
					"}",
					"",
					"const baseUrl = pm.environment.get('baseUrl')",
					"const apiPrefix = pm.environment.get('apiPrefix')",
					"const apiToken = pm.environment.get('apiToken')",
					"const apiUrl = `${baseUrl}/${apiPrefix}`",
					"",
					"const endpointPayload = {",
					"    \"name\": \"Postman Test Endpoint\",",
					"    \"os\": \"Windows\",",
					"    \"isServer\": false,",
					"    \"platform\": \"windows\",",
					"    \"organizationId\": 0,",
					"    \"deploymentToken\": null",
					"};",
					"",
					"const baseApiRequest = {",
					"    method: 'get',",
					"    header: {",
					"        'Content-Type': 'application/json',",
					"        'Authorization': `Bearer ${apiToken}`",
					"    }",
					"}",
					"",
					"const organizationsRequest = {",
					"    ...baseApiRequest,",
					"    url: `${apiUrl}/organizations?sortType=ASC`,",
					"}",
					"",
					"const postmanEndpointRequest = {",
					"    ...baseApiRequest,",
					"    url: `${apiUrl}/endpoints?filter[searchTerm]=Postman Test Endpoint&filter[organizationIds]=0`,",
					"}",
					"",
					"const usersRequest = {",
					"    ...baseApiRequest,",
					"    url: `${apiUrl}/user-management/users?filter[organizationIds]=0&sortType=ASC`,",
					"}",
					"",
					"const baselineAcquisitionTaskPayload = {",
					"    \"caseId\": null,",
					"    \"filter\": {",
					"        \"includedEndpointIds\": [],",
					"        \"organizationIds\": [0]",
					"    }",
					"};",
					"",
					"function acquireBaseline(endpointId) {",
					"    baselineAcquisitionTaskPayload.filter.includedEndpointIds = [endpointId];",
					"",
					"    const baselineAcquisitionTaskRequest = {",
					"        ...baseApiRequest,",
					"        method: 'post',",
					"        url: `${apiUrl}/baseline/acquire`,",
					"        body: {",
					"            mode: 'raw',",
					"            raw: JSON.stringify(baselineAcquisitionTaskPayload)",
					"        }",
					"    };",
					"",
					"    pm.sendRequest(baselineAcquisitionTaskRequest, (_err, resp) => {",
					"        const task = resp.json().result[0]",
					"        pm.collectionVariables.set('taskId', task._id)",
					"        console.info('Created task:', task)",
					"    })",
					"}",
					"",
					"// Get global admin user",
					"pm.sendRequest(usersRequest, (_err, resp) => {",
					"    const [globalAdmin] = resp.json().result.entities",
					"    console.info('Found global admin:', globalAdmin)",
					"    pm.collectionVariables.set('globalAdminId', globalAdmin._id)",
					"",
					"    const casePayload = {",
					"        \"organizationId\": 0,",
					"        \"name\": `Case - ${uuid.v4().substr(0, 8)}`,",
					"        \"ownerUserId\": globalAdmin._id,",
					"        \"visibility\": \"public-to-organization\",",
					"        \"assignedUserIds\": []",
					"    }",
					"",
					"    // Create a case for tests",
					"    const caseCreateRequest = {",
					"        ...baseApiRequest,",
					"        method: 'post',",
					"        url: `${apiUrl}/cases`,",
					"        body: {",
					"            mode: 'raw',",
					"            raw: JSON.stringify(casePayload)",
					"        }",
					"    }",
					"",
					"    pm.sendRequest(caseCreateRequest, (_err, resp) => {",
					"        const createdCase = resp.json().result",
					"        pm.collectionVariables.set('caseId', createdCase._id)",
					"        console.info('Created case:', createdCase)",
					"    })",
					"})",
					"",
					"",
					"// Get deployment token of default organization ",
					"pm.sendRequest(organizationsRequest, (_err, resp) => {",
					"    const [defaultOrganization] = resp.json().result.entities",
					"    console.info('Default organization:', defaultOrganization)",
					"",
					"    endpointPayload.deploymentToken = defaultOrganization.deploymentToken",
					"    pm.collectionVariables.set('deploymentToken', defaultOrganization.deploymentToken)",
					"",
					"    // Get agent version",
					"    pm.sendRequest(`${baseUrl}/api/app/info`, (_err, resp) => {",
					"        const { agentVersion } = resp.json()",
					"        console.info('Agent version:', agentVersion)",
					"",
					"        const registerRequest = {",
					"            method: 'post',",
					"            url: `${baseUrl}/api/endpoints/register/${agentVersion}`,",
					"            header: { 'Content-Type': 'application/json' },",
					"            body: {",
					"                mode: 'raw',",
					"                raw: JSON.stringify(endpointPayload)",
					"            }",
					"        }",
					"",
					"        // Get postman endpoint if exists",
					"        pm.sendRequest(postmanEndpointRequest, (_err, resp) => {",
					"            const [postmanEndpoint] = resp.json().result.entities",
					"            if (postmanEndpoint) {",
					"                pm.collectionVariables.set('endpointId', postmanEndpoint._id)",
					"                console.info('Found endpoint:', postmanEndpoint._id)",
					"                acquireBaseline(postmanEndpoint._id)",
					"                return;",
					"            }",
					"",
					"            // Register an endpoint for tests",
					"            pm.sendRequest(registerRequest, (_err, resp) => {",
					"                const { id } = resp.json().data",
					"                pm.collectionVariables.set('endpointId', id)",
					"                console.info('Enpdoint registered:', id)",
					"",
					"                acquireBaseline(id)",
					"            })",
					"        })",
					"    })",
					"})",
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "globalAdminId",
			"value": ""
		},
		{
			"key": "deploymentToken",
			"value": ""
		},
		{
			"key": "caseId",
			"value": ""
		},
		{
			"key": "endpointId",
			"value": ""
		},
		{
			"key": "taskId",
			"value": ""
		},
		{
			"key": "triageRuleId",
			"value": ""
		},
		{
			"key": "policyIds",
			"value": ""
		}
	]
}